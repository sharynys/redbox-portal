var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/injectables/ANDSService.html",[0,0.864,1,3.28]],["body/injectables/ANDSService.html",[0,1.626,1,5.586,2,0.208,3,0.191,4,0.096,5,8.054,6,3.423,7,0.401,8,0.717,9,7.54,10,2.501,11,3.288,12,3.311,13,3.274,14,3.386,15,3.386,16,0.478,17,5.064,18,0.769,19,0.01,20,0.478,21,0.434,22,0.717,23,6.329,24,0.683,25,1.471,26,5.064,27,6.329,28,0.642,29,4.455,30,0.461,31,0.459,32,1.986,33,3.423,34,3.048,35,2.303,36,2.099,37,3.275,38,3.926,39,2.269,40,3.926,41,3.163,42,4.389,43,1.301,44,2.041,45,0.911,46,0.885,47,0.191,48,0.12,49,0.938,50,3.163,51,2.842,52,2.572,53,4.389,54,5.064,55,2.942,56,6.329,57,6.329,58,6.329,59,2.942,60,3.423,61,4.139,62,3.163,63,0.009,64,0.009]],["title/components/ActionButtonComponent.html",[65,0.134,66,0.935]],["body/components/ActionButtonComponent.html",[2,0.139,3,0.128,4,0.065,7,0.455,8,0.634,16,0.556,18,0.768,19,0.01,20,0.528,21,0.497,22,0.716,24,0.674,25,0.829,28,0.727,30,0.39,31,0.308,43,0.874,47,0.202,48,0.127,49,0.988,63,0.007,64,0.007,65,0.235,66,1.516,67,0.971,68,1.299,69,7.182,70,3.739,71,2.167,72,1.233,73,1.69,74,1.557,75,2.409,76,0.995,77,1.526,78,1.759,79,8.234,80,2.892,81,6.671,82,0.575,83,1.386,84,2.037,85,1.343,86,1.853,87,1.821,88,2.078,89,5.84,90,2.752,91,1.884,92,1.884,93,1.69,94,1.524,95,1.931,96,2.037,97,1.109,98,1.443,99,1.137,100,1.69,101,1.524,102,2.034,103,1.629,104,1.198,105,1.629,106,0.968,107,0.997,108,1.629,109,1.629,110,1.202,111,0.988,112,0.836,113,1.292,114,1.629,115,1.629,116,4.251,117,4.251,118,1.629,119,0.89,120,4.251,121,1.298,122,1.783,123,1.08,124,1.492,125,1.605,126,1.299,127,1.298,128,1.298,129,1.022,130,1.371,131,1.492,132,1.736,133,1.136,134,1.136,135,1.492,136,1.264,137,1.078,138,1.492,139,1.078,140,1.492,141,0.921,142,1.05,143,0.511,144,0.594,145,0.594,146,1.492,147,1.23,148,1.783,149,1.69,150,1.136,151,7.182,152,4.251,153,1.492,154,1.198,155,1.492,156,1.492,157,1.166,158,1.492,159,1.581,160,0.851,161,1.732,162,1.371,163,2.714,164,2.637,165,4.251,166,4.251,167,3.739,168,1.45,169,3.739,170,1.581,171,4.251,172,4.251,173,4.251,174,2.781,175,2.306,176,3.149,177,3.149,178,3.149,179,2.4,180,1.139,181,3.739,182,2.781,183,4.251,184,4.251,185,4.251,186,3.739,187,4.251,188,2.4,189,4.251,190,4.251,191,4.251,192,0.686,193,1.299,194,1.17,195,1.299,196,1.064,197,0.971,198,1.776,199,0.851,200,0.921,201,0.921,202,0.946,203,1.524,204,0.897,205,0.946,206,0.971,207,0.851,208,0.971,209,0.851,210,0.851,211,0.921,212,1.638,213,1.334,214,0.921,215,0.971,216,0.921,217,1.051,218,1.08,219,0.851,220,0.874,221,0.971,222,0.897,223,1.266,224,1.64,225,0.921,226,1.334,227,0.851,228,0.971,229,0.897,230,0.897,231,0.897,232,0.851,233,0.921,234,0.851,235,0.971,236,0.851,237,0.946,238,0.971,239,0.897,240,0.829,241,0.971,242,0.921,243,1.233,244,0.971,245,0.921,246,0.971,247,0.897,248,0.971,249,0.897,250,0.946,251,1.201,252,1.334,253,0.851,254,1.334,255,0.897,256,0.971,257,1.334,258,0.897,259,0.897,260,0.921,261,0.971,262,0.897,263,0.851,264,0.971,265,0.897,266,0.971,267,0.897,268,0.971,269,0.851,270,1.557,271,0.897,272,0.971,273,0.897,274,1.334,275,0.851,276,1.334,277,0.921,278,0.971,279,0.874,280,0.874,281,0.851,282,0.971,283,0.897,284,0.971,285,0.851,286,0.971,287,0.874,288,0.921,289,0.921,290,0.851,291,0.971,292,0.897,293,0.765,294,0.971,295,0.897,296,0.851,297,0.971,298,0.921,299,0.921,300,0.971,301,0.897,302,0.897,303,0.971,304,0.921,305,0.667,306,0.971,307,0.851,308,0.897,309,0.971,310,0.897,311,0.971,312,0.921,313,1.408,314,0.897,315,0.971,316,0.897,317,0.971]],["title/components/AnchorOrButtonComponent.html",[65,0.134,199,0.887]],["body/components/AnchorOrButtonComponent.html",[2,0.086,3,0.153,4,0.04,7,0.415,8,0.588,16,0.521,18,0.668,19,0.011,20,0.514,21,0.467,22,0.623,24,0.659,25,0.514,28,0.75,30,0.354,31,0.191,35,1.255,36,0.874,43,1.039,45,0.379,46,0.369,47,0.249,48,0.159,49,1.211,63,0.005,64,0.005,65,0.256,66,0.557,67,0.602,68,0.915,71,2.139,72,0.868,73,1.665,74,0.571,75,2.627,76,1.359,77,1.113,78,0.557,80,2.705,82,0.498,83,1.396,84,1.743,85,1.407,86,1.758,87,1.662,88,1.897,90,2.186,91,1.326,92,1.326,93,1.19,94,1.497,95,1.462,96,1.743,97,1.381,98,1.248,99,1.166,100,1.462,101,1.154,102,1.887,103,1.01,104,1.158,105,1.01,106,0.946,107,1.184,108,1.01,109,1.01,110,1.078,111,0.845,112,0.763,113,1.364,114,1.01,115,1.01,118,1.01,119,0.627,121,1.255,122,1.543,123,1.055,124,0.925,125,1.577,126,1.458,127,1.255,128,1.255,129,1.01,130,0.85,131,0.925,132,1.696,133,1.099,134,0.705,135,0.925,136,1.222,137,1.042,138,0.925,139,1.569,140,0.925,141,1.42,142,1.248,143,0.607,144,0.706,145,0.706,146,0.925,147,1.19,148,2.09,149,1.79,150,1.099,153,0.925,154,1.424,155,0.925,156,0.925,157,1.566,158,0.925,160,1.012,161,2.324,162,0.85,180,1.113,192,0.425,193,0.915,194,0.823,195,0.915,196,1.078,197,0.602,198,1.497,199,1.143,200,1.095,201,0.571,202,0.587,203,1.154,204,0.557,205,0.587,206,0.602,207,0.823,208,0.602,209,0.823,210,1.012,211,0.571,212,1.407,213,0.939,214,0.571,215,0.602,216,0.571,217,0.74,218,0.934,219,0.823,220,0.845,221,0.602,222,0.557,223,0.891,224,1.303,225,0.571,226,0.939,227,1.012,228,0.602,229,0.557,230,0.557,231,0.557,232,0.823,233,0.891,234,0.823,235,0.602,236,0.823,237,0.587,238,0.602,239,0.557,240,0.514,241,0.602,242,0.571,243,0.868,244,0.602,245,0.571,246,0.602,247,0.557,248,0.602,249,0.557,250,0.587,251,1.179,252,0.939,253,0.823,254,0.939,255,0.557,256,0.602,257,0.939,258,0.557,259,0.557,260,0.571,261,0.602,262,0.557,263,0.528,264,0.602,265,0.557,266,0.602,267,0.557,268,0.602,269,0.528,270,1.237,271,0.557,272,0.602,273,0.557,274,0.939,275,0.528,276,0.939,277,0.571,278,0.602,279,0.845,280,1.348,281,1.012,282,0.602,283,0.557,284,0.602,285,0.823,286,0.602,287,0.845,288,1.42,289,0.891,290,0.823,291,0.602,292,0.557,293,0.909,294,0.602,295,0.557,296,0.823,297,0.602,298,0.571,299,0.571,300,0.602,301,0.557,302,0.557,303,0.602,304,0.571,305,0.413,306,0.602,307,0.528,308,0.557,309,0.602,310,0.557,311,0.602,312,0.571,313,1.067,314,0.557,315,0.602,316,0.557,317,0.602,318,1.373,319,1.145,320,2.073,321,1.785,322,3.615,323,2.636,324,2.124,325,2.636,326,2.636,327,0.827,328,0.899,329,0.668,330,1.785,331,1.145,332,1.879,333,2.194,334,2.194,335,1.502,336,2.186,337,2.194,338,2.478,339,1.145,340,1.785,341,1.785,342,1.108,343,1.108,344,0.952,345,0.462,346,0.823,347,0.634,348,1.108,349,2.002,350,1.145,351,2.846,352,1.785,353,1.01,354,1.728,355,1.485,356,0.85,357,1.145,358,1.145,359,1.145,360,1.145,361,1.145,362,1.785,363,1.145,364,0.899,365,1.145,366,1.145,367,1.145,368,1.041,369,1.01,370,1.01,371,0.925,372,1.145,373,1.145,374,1.145,375,1.145,376,1.785,377,1.145,378,1.145,379,1.145,380,1.145,381,2.124,382,1.674,383,1.145,384,1.148,385,1.936,386,1.145,387,1.995,388,0.874,389,2.058,390,1.145,391,1.773,392,2.194,393,1.35,394,1.543,395,1.145,396,1.145,397,1.145,398,1.145,399,1.145,400,1.145,401,1.099,402,1.145,403,1.785,404,1.785,405,1.145,406,1.145,407,1.145,408,1.145,409,1.145,410,1.145,411,1.108,412,1.442,413,1.145,414,1.145,415,1.145,416,1.785,417,1.145,418,1.145,419,1.145,420,1.575,421,1.728,422,1.485,423,2.399,424,2.194,425,1.145,426,1.145,427,1.785,428,1.785,429,1.145,430,2.878,431,1.785,432,1.145,433,1.145,434,1.145,435,1.145,436,2.194,437,1.145,438,1.145,439,1.145,440,1.145,441,1.145,442,1.145,443,0.952,444,0.98,445,1.145,446,1.442,447,1.785,448,0.98,449,0.98,450,1.145,451,0.925,452,1.074,453,1.108,454,0.899,455,1.074,456,2.194,457,1.785,458,1.145,459,0.514,460,0.98,461,1.108,462,0.899,463,0.952,464,1.108,465,0.668,466,1.674,467,1.785,468,1.145,469,1.145,470,1.145,471,1.145,472,1.145,473,1.145,474,1.145,475,2.194,476,1.145,477,1.145,478,1.145,479,1.145,480,1.785,481,1.145,482,1.145,483,1.442,484,1.145,485,1.074,486,1.145,487,1.145,488,1.074,489,1.145,490,1.145,491,1.145,492,1.785,493,1.785,494,0.723,495,1.145,496,1.108,497,1.108,498,1.041,499,1.108,500,1.145,501,1.108,502,1.145,503,1.145,504,1.145,505,1.145,506,1.145,507,1.145,508,1.145,509,1.145,510,1.785,511,1.785,512,1.785,513,1.785,514,1.785,515,1.728,516,1.158,517,1.145,518,1.041,519,1.145,520,1.145,521,0.874,522,1.01,523,1.785,524,1.145,525,1.145,526,1.145,527,2.194,528,1.145,529,1.145,530,1.145,531,1.145,532,1.145,533,1.145,534,1.145,535,1.145,536,1.108,537,1.145,538,1.108,539,1.145,540,1.145,541,1.145,542,1.145,543,1.145,544,0.98,545,1.145,546,1.145,547,1.01,548,1.145,549,1.145,550,1.145,551,1.01,552,0.743,553,1.145,554,1.145,555,1.145,556,1.145,557,1.145,558,0.925]],["title/classes/AngularPage.html",[48,0.084,559,3.894]],["body/classes/AngularPage.html",[2,0.224,3,0.206,4,0.104,7,0.433,8,0.75,16,0.5,19,0.01,28,0.727,30,0.354,47,0.206,48,0.15,63,0.009,64,0.009,132,2.032,194,1.369,559,6.938,560,6.835,561,8.547,562,8.547,563,6.835,564,6.835,565,2.968,566,6.835,567,6.835,568,6.835,569,6.835]],["title/classes/AsynchField.html",[48,0.084,570,3.894]],["body/classes/AsynchField.html",[2,0.133,3,0.122,4,0.062,7,0.257,8,0.537,10,1.344,16,0.557,18,0.755,19,0.011,20,0.486,21,0.504,22,0.729,24,0.738,28,0.669,30,0.436,31,0.294,35,1.726,36,1.344,45,0.584,46,0.567,47,0.171,48,0.123,49,0.964,52,1.927,63,0.006,64,0.006,65,0.213,71,1.396,73,0.749,77,1.415,82,0.557,83,1.236,85,1.474,86,1.607,97,0.77,98,1.396,102,1.525,106,0.672,107,0.95,111,0.837,112,0.658,118,2.492,119,0.618,126,0.902,129,0.55,143,0.487,144,0.567,145,0.567,154,1.142,159,1.508,162,1.308,163,3.729,164,2.515,168,1.927,170,1.508,174,2.652,180,0.791,186,4.97,196,0.837,204,0.856,205,0.902,217,1.171,220,1.162,240,0.791,318,2.1,332,2.102,345,0.71,346,1.132,347,0.976,354,2.376,384,1.139,420,1.553,421,1.704,422,1.464,446,1.423,452,2.302,459,0.791,465,1.028,483,2.469,494,1.112,501,2.376,570,5.722,571,4.054,572,6.509,573,5.651,574,7.401,575,7.665,576,2.106,577,7.038,578,7.038,579,7.038,580,7.038,581,6.506,582,7.038,583,7.038,584,7.038,585,7.038,586,7.038,587,7.401,588,7.401,589,7.038,590,7.038,591,7.665,592,5.651,593,4.97,594,5.651,595,4.97,596,5.651,597,4.054,598,4.054,599,4.054,600,4.054,601,4.054,602,4.054,603,4.054,604,4.054,605,4.054,606,4.054,607,4.054,608,4.054,609,4.054,610,4.054,611,4.054,612,5.651,613,4.054,614,2.395,615,4.054,616,2.026,617,2.811,618,4.054,619,2.811,620,3.919,621,3.919,622,4.054,623,2.811,624,4.054,625,3.566,626,1.423,627,2.026,628,2.289,629,2.193,630,2.515,631,4.054,632,4.054,633,3.003,634,4.054,635,4.054,636,4.054,637,1.884,638,4.054,639,4.054,640,4.054,641,4.054,642,5.651,643,4.054,644,4.054,645,5.651,646,4.054,647,4.054,648,5.651,649,4.054,650,3.673,651,4.054,652,5.651,653,4.054,654,2.936,655,4.054,656,5.651,657,4.054,658,4.054,659,5.651,660,4.054,661,2.289,662,4.054,663,5.651,664,4.054,665,4.054,666,5.651,667,4.054,668,3.566,669,4.054,670,4.054,671,3.566,672,4.054,673,4.054,674,4.054,675,4.054,676,3.244,677,4.054,678,4.054,679,4.054,680,4.054,681,4.372,682,4.054,683,2.811,684,4.054,685,4.054,686,3.244,687,2.193,688,4.054,689,4.054,690,4.054,691,4.054,692,7.401,693,4.054,694,4.054,695,3.003,696,4.054,697,4.054,698,7.038,699,4.054,700,4.054,701,4.054,702,4.054,703,4.054,704,4.054,705,4.054,706,4.054,707,5.651,708,4.054,709,4.054,710,4.054,711,4.054,712,4.054,713,4.054,714,7.038,715,4.054,716,4.054,717,4.054,718,6.506,719,4.054,720,6.506,721,5.651,722,6.506,723,6.506,724,4.054,725,4.054,726,5.651,727,4.054,728,4.054,729,4.054,730,4.054,731,4.054,732,4.054,733,6.506,734,4.054,735,6.506,736,6.506,737,4.054,738,4.054,739,4.054,740,5.651,741,4.054,742,4.054,743,4.054,744,4.054,745,4.054,746,4.054,747,4.054,748,4.054,749,4.054]],["title/classes/BaseService.html",[37,1.923,48,0.084]],["body/classes/BaseService.html",[2,0.166,3,0.198,4,0.077,6,2.73,7,0.32,8,0.623,10,2.172,11,2.622,12,3.23,13,3.136,16,0.564,18,0.813,19,0.011,20,0.505,21,0.506,22,0.81,24,0.63,28,0.754,30,0.431,32,1.584,37,2.844,39,1.845,44,2.572,45,0.726,46,0.706,47,0.152,48,0.146,52,3.101,59,2.346,63,0.007,64,0.007,82,0.645,85,1.396,111,0.97,112,0.762,119,0.769,129,0.889,133,1.349,143,0.787,144,0.916,145,0.916,160,1.312,188,4.344,384,0.884,393,1.943,459,0.984,627,2.522,628,2.849,629,3.543,630,3.131,750,8.927,751,4.542,752,4.542,753,7.695,754,5.386,755,7.271,756,7.695,757,7.695,758,5.76,759,6.767,760,7.695,761,6.549,762,6.549,763,4.852,764,5.24,765,7.271,766,7.271,767,5.76,768,4.038,769,4.438,770,4.438,771,4.438,772,4.038,773,3.739,774,4.038,775,5.047,776,5.76,777,6.767,778,5.047,779,4.038,780,4.438,781,4.438,782,6.549,783,5.047,784,6.549,785,6.549,786,5.047,787,6.549,788,5.047,789,2.982,790,5.047,791,5.047,792,5.047,793,5.047,794,4.852,795,5.336,796,4.438,797,3.301,798,4.038,799,5.047,800,5.047,801,5.047,802,4.438,803,6.549,804,2.345,805,5.047,806,6.395,807,6.549,808,5.047,809,5.76,810,5.047,811,3.301,812,6.549,813,4.852,814,5.047,815,5.047,816,5.24,817,3.5,818,4.438,819,5.047,820,6.549,821,5.047,822,5.047,823,5.047,824,5.047,825,5.047,826,5.047,827,5.047]],["title/components/ButtonBarContainerComponent.html",[65,0.134,207,0.887]],["body/components/ButtonBarContainerComponent.html",[2,0.088,3,0.154,4,0.041,7,0.418,8,0.592,16,0.512,18,0.635,19,0.011,20,0.512,21,0.46,22,0.592,24,0.661,25,0.522,28,0.748,30,0.356,31,0.194,35,1.27,36,0.887,43,1.049,45,0.385,46,0.374,47,0.249,48,0.159,49,1.214,63,0.005,64,0.005,65,0.256,66,0.565,67,0.611,68,0.925,71,2.142,72,0.878,73,1.667,74,0.58,75,2.57,76,1.363,77,1.121,78,0.565,80,2.718,82,0.502,83,1.389,84,1.756,85,1.392,86,1.764,87,1.672,88,1.908,90,1.025,91,1.341,92,1.341,93,1.203,94,1.506,95,1.476,96,1.756,97,1.388,98,1.26,99,1.173,100,1.476,101,1.165,102,1.892,103,1.025,104,1.172,105,1.025,106,0.954,107,1.196,108,1.025,109,1.025,110,1.083,111,0.852,112,0.767,113,1.369,114,1.025,115,1.025,119,0.408,121,1.27,122,1.558,123,1.063,124,0.939,125,1.587,126,1.467,127,1.27,128,1.27,129,1.014,130,0.863,131,0.939,132,1.71,133,1.111,134,0.715,135,0.939,136,1.236,137,1.054,138,0.939,139,1.58,140,0.939,141,1.429,142,1.26,143,0.613,144,0.713,145,0.713,146,0.939,147,1.203,148,2.102,149,1.803,150,1.111,153,0.939,154,1.437,155,0.939,156,0.939,157,1.578,158,0.939,160,1.021,161,1.694,162,0.863,180,1.122,192,0.431,193,0.925,194,0.833,195,0.925,196,1.083,197,0.611,198,1.506,199,0.833,200,0.901,201,0.58,202,0.595,203,1.165,204,0.565,205,0.595,206,0.611,207,1.152,208,0.611,209,0.833,210,1.021,211,0.58,212,1.415,213,0.95,214,0.58,215,0.611,216,0.58,217,0.748,218,0.943,219,0.833,220,0.855,221,0.611,222,0.565,223,0.901,224,1.314,225,0.58,226,0.95,227,1.021,228,0.611,229,0.565,230,0.565,231,0.565,232,0.833,233,0.901,234,0.833,235,0.611,236,0.833,237,0.595,238,0.611,239,0.565,240,0.522,241,0.611,242,0.58,243,0.878,244,0.611,245,0.58,246,0.611,247,0.565,248,0.611,249,0.565,250,0.595,251,1.187,252,0.95,253,0.833,254,0.95,255,0.565,256,0.611,257,0.95,258,0.565,259,0.565,260,0.58,261,0.611,262,0.565,263,0.536,264,0.611,265,0.565,266,0.611,267,0.565,268,0.611,269,0.536,270,1.247,271,0.565,272,0.611,273,0.565,274,0.95,275,0.536,276,0.95,277,0.58,278,0.611,279,0.855,280,1.356,281,1.021,282,0.611,283,0.565,284,0.611,285,0.833,286,0.611,287,0.855,288,1.429,289,0.901,290,0.833,291,0.611,292,0.565,293,0.918,294,0.611,295,0.565,296,0.833,297,0.611,298,0.58,299,0.58,300,0.611,301,0.565,302,0.565,303,0.611,304,0.58,305,0.42,306,0.611,307,0.536,308,0.565,309,0.611,310,0.565,311,0.611,312,0.58,313,1.077,314,0.565,315,0.611,316,0.565,317,0.611,318,0.644,319,1.162,320,2.029,321,1.162,324,1.748,327,0.84,328,0.913,329,0.678,330,1.806,331,1.162,332,1.897,333,2.215,334,2.215,335,1.516,336,2.204,337,2.215,338,2.498,339,1.162,340,1.806,341,1.806,342,1.125,343,1.125,344,0.966,345,0.469,346,0.833,347,0.644,348,1.125,349,2.018,350,1.162,351,2.864,352,1.806,353,1.025,354,1.748,355,1.502,356,0.863,357,1.162,358,1.162,359,1.162,360,1.162,361,1.162,362,1.806,363,1.162,364,0.913,365,1.162,366,1.162,367,1.162,368,1.057,369,1.025,370,1.025,371,0.939,372,1.162,373,1.162,374,1.162,375,1.162,376,1.806,377,1.162,378,1.162,379,1.162,380,1.162,381,2.144,382,1.694,383,1.162,384,1.155,385,1.954,386,1.162,387,2.014,388,0.887,389,2.077,390,1.162,391,1.79,392,2.215,393,1.363,394,1.558,395,1.162,396,1.162,397,1.162,398,1.162,399,1.162,400,1.162,401,1.111,402,1.162,403,1.806,404,1.806,405,1.162,406,1.162,407,1.162,408,1.162,409,1.162,410,1.162,411,1.125,412,1.459,413,1.162,414,1.162,415,1.162,416,1.806,417,1.162,418,1.162,419,1.162,420,1.593,421,1.748,422,1.502,423,2.418,424,2.215,425,1.162,426,1.162,427,1.806,428,1.806,429,1.162,430,2.893,431,1.806,432,1.162,433,1.162,434,1.162,435,1.162,436,2.215,437,1.162,438,1.162,439,1.162,440,1.162,441,1.162,442,1.806,443,0.966,444,0.995,445,1.162,446,1.459,447,1.806,448,0.995,449,0.995,450,1.162,451,0.939,452,1.09,453,1.125,454,0.913,455,1.09,456,2.215,457,1.806,458,1.162,459,0.522,460,0.995,461,1.125,462,0.913,463,0.966,464,1.125,465,0.678,466,1.694,467,1.806,468,1.162,469,1.162,470,1.162,471,1.162,472,1.162,473,1.162,474,1.162,475,2.215,476,1.162,477,1.162,478,1.162,479,1.162,480,1.806,481,1.162,482,1.162,483,1.459,484,1.162,485,1.09,486,1.162,487,1.162,488,1.09,489,1.162,490,1.162,491,1.162,492,1.806,493,1.806,494,0.734,495,1.162,496,1.125,497,1.125,498,1.057,499,1.125,500,1.162,501,1.125,502,1.162,503,1.162,504,1.162,505,1.162,506,1.162,507,1.162,508,1.162,509,1.162,510,1.806,511,1.806,512,1.806,513,1.806,514,1.806,515,1.748,516,1.172,517,1.162,518,1.057,519,1.162,520,1.162,521,0.887,522,1.025,523,1.806,524,1.162,525,1.162,526,1.162,527,2.215,528,1.162,529,1.162,530,1.162,531,1.162,532,1.162,533,1.162,534,1.162,535,1.162,536,1.125,537,1.162,538,1.125,539,1.162,540,1.162,541,1.162,542,1.162,543,1.162,544,0.995,545,1.162,546,1.162,547,1.025,548,1.162,549,1.162,550,1.162,551,1.025,552,0.754,553,1.162,554,1.162,555,1.162,556,1.162,557,1.162,558,0.939]],["title/components/CancelButtonComponent.html",[65,0.134,209,0.887]],["body/components/CancelButtonComponent.html",[2,0.087,3,0.153,4,0.04,7,0.417,8,0.59,16,0.515,18,0.633,19,0.011,20,0.511,21,0.464,22,0.59,24,0.66,25,0.518,28,0.748,30,0.356,31,0.192,35,1.263,36,0.881,43,1.044,45,0.382,46,0.371,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.257,66,0.561,67,0.607,68,0.92,71,2.141,72,0.873,73,1.666,74,0.576,75,2.742,76,1.361,77,1.117,78,0.561,80,2.712,82,0.5,83,1.398,84,1.75,85,1.398,86,1.761,87,1.667,88,1.903,90,1.018,91,1.334,92,1.334,93,1.197,94,1.502,95,1.469,96,1.75,97,1.385,98,1.254,99,1.17,100,1.469,101,1.16,102,1.89,103,1.018,104,1.165,105,1.018,106,0.95,107,1.19,108,1.018,109,1.018,110,1.08,111,0.849,112,0.765,113,1.366,114,1.018,115,1.018,119,0.405,121,1.263,122,1.551,123,1.059,124,0.932,125,1.582,126,1.463,127,1.263,128,1.263,129,1.012,130,0.857,131,0.932,132,1.703,133,1.105,134,0.71,135,0.932,136,1.229,137,1.049,138,0.932,139,1.574,140,0.932,141,1.425,142,1.254,143,0.61,144,0.71,145,0.71,146,0.932,147,1.197,148,2.096,149,1.797,150,1.105,153,0.932,154,1.431,155,0.932,156,0.932,157,1.572,158,0.932,160,1.017,161,1.684,162,0.857,180,1.117,192,0.428,193,0.92,194,0.828,195,0.92,196,1.08,197,0.607,198,1.502,199,0.828,200,0.896,201,0.576,202,0.591,203,1.16,204,0.561,205,0.591,206,0.607,207,0.828,208,0.607,209,1.147,210,1.243,211,0.576,212,1.411,213,0.944,214,0.576,215,0.607,216,0.576,217,0.744,218,0.939,219,0.828,220,0.85,221,0.607,222,0.561,223,0.896,224,1.309,225,0.576,226,0.944,227,1.017,228,0.607,229,0.561,230,0.561,231,0.561,232,0.828,233,0.896,234,0.828,235,0.607,236,0.828,237,0.591,238,0.607,239,0.561,240,0.518,241,0.607,242,0.576,243,0.873,244,0.607,245,0.576,246,0.607,247,0.561,248,0.607,249,0.561,250,0.591,251,1.183,252,0.944,253,0.828,254,0.944,255,0.561,256,0.607,257,0.944,258,0.561,259,0.561,260,0.576,261,0.607,262,0.561,263,0.532,264,0.607,265,0.561,266,0.607,267,0.561,268,0.607,269,0.532,270,1.242,271,0.561,272,0.607,273,0.561,274,0.944,275,0.532,276,0.944,277,0.576,278,0.607,279,0.85,280,1.352,281,1.017,282,0.607,283,0.561,284,0.607,285,0.828,286,0.607,287,0.85,288,1.425,289,0.896,290,0.828,291,0.607,292,0.561,293,0.914,294,0.607,295,0.561,296,0.828,297,0.607,298,0.576,299,0.576,300,0.607,301,0.561,302,0.561,303,0.607,304,0.576,305,0.417,306,0.607,307,0.532,308,0.561,309,0.607,310,0.561,311,0.607,312,0.576,313,1.072,314,0.561,315,0.607,316,0.561,317,0.607,318,0.995,319,1.154,320,2.06,321,1.154,324,1.739,327,0.834,328,0.906,329,0.674,330,1.796,331,1.154,332,1.888,333,2.205,334,2.205,335,1.509,336,2.195,337,2.205,338,2.856,339,1.154,340,1.796,341,1.796,342,1.117,343,1.117,344,0.959,345,0.465,346,0.828,347,0.639,348,1.117,349,2.011,350,1.154,351,2.856,352,1.796,353,1.018,354,1.739,355,1.493,356,0.857,357,1.154,358,1.154,359,1.154,360,1.154,361,1.154,362,1.796,363,1.154,364,0.906,365,1.154,366,1.154,367,1.154,368,1.049,369,1.018,370,1.018,371,0.932,372,1.154,373,1.154,374,1.154,375,1.154,376,1.796,377,1.154,378,1.154,379,1.154,380,1.154,381,2.135,382,1.684,383,1.154,384,1.152,385,1.945,386,1.154,387,2.005,388,0.881,389,2.068,390,1.154,391,1.782,392,2.205,393,1.357,394,1.551,395,1.154,396,1.154,397,1.154,398,1.154,399,1.154,400,1.154,401,1.105,402,1.154,403,1.796,404,1.796,405,1.154,406,1.154,407,1.154,408,1.154,409,1.154,410,1.154,411,1.117,412,1.451,413,1.154,414,1.154,415,1.154,416,1.796,417,1.154,418,1.154,419,1.154,420,1.584,421,1.739,422,1.493,423,2.409,424,2.205,425,1.154,426,1.154,427,1.796,428,1.796,429,1.154,430,2.886,431,1.796,432,1.154,433,1.154,434,1.154,435,1.154,436,2.205,437,1.154,438,1.154,439,1.154,440,1.154,441,1.154,442,1.154,443,0.959,444,0.988,445,1.154,446,1.451,447,1.796,448,0.988,449,0.988,450,1.154,451,0.932,452,1.082,453,1.117,454,0.906,455,1.082,456,2.205,457,1.796,458,1.154,459,0.806,460,0.988,461,1.117,462,0.906,463,0.959,464,1.117,465,0.674,466,1.684,467,1.796,468,1.154,469,1.154,470,1.154,471,1.154,472,1.154,473,1.154,474,1.154,475,2.205,476,1.154,477,1.154,478,1.154,479,1.154,480,1.796,481,1.154,482,1.154,483,1.451,484,1.154,485,1.082,486,1.154,487,1.154,488,1.684,489,1.154,490,1.154,491,1.154,492,1.796,493,1.796,494,0.729,495,1.154,496,1.117,497,1.117,498,1.049,499,1.117,500,1.154,501,1.117,502,1.154,503,1.154,504,1.154,505,1.154,506,1.154,507,1.154,508,1.154,509,1.154,510,1.796,511,1.796,512,1.796,513,1.796,514,1.796,515,1.739,516,1.165,517,1.154,518,1.049,519,1.154,520,1.154,521,0.881,522,1.018,523,1.796,524,1.154,525,1.154,526,1.154,527,2.205,528,1.154,529,1.154,530,1.154,531,1.154,532,1.154,533,1.154,534,1.154,535,1.154,536,1.117,537,1.154,538,1.117,539,1.154,540,1.154,541,1.154,542,1.154,543,1.154,544,0.988,545,1.154,546,1.154,547,1.018,548,1.154,549,1.154,550,1.154,551,1.018,552,0.749,553,1.154,554,1.154,555,1.154,556,1.154,557,1.154,558,0.932,576,1.38,828,2.657]],["title/injectables/ConfigService.html",[0,0.864,13,1.647]],["body/injectables/ConfigService.html",[0,1.572,2,0.188,3,0.173,4,0.087,6,3.1,7,0.363,8,0.675,10,2.354,11,2.977,12,2.955,13,2.64,16,0.548,18,0.787,19,0.01,20,0.489,21,0.486,22,0.733,28,0.736,30,0.448,31,0.415,32,1.798,44,2.6,45,0.825,46,0.801,47,0.173,48,0.109,50,2.864,52,2.993,62,2.864,63,0.008,64,0.008,82,0.699,85,1.244,111,0.849,112,0.667,119,1.082,129,0.964,143,0.853,144,0.992,145,0.992,188,4.551,384,1.004,459,1.118,627,2.864,628,3.235,629,4.567,630,3.555,751,4.923,752,4.923,758,6.244,759,6.244,769,5.04,770,6.244,772,4.585,776,6.244,777,7.09,779,4.585,789,3.386,794,4.246,795,3.974,796,5.04,797,3.748,798,4.585,804,1.848,806,6.244,813,5.259,816,5.68,817,3.974,818,5.04,829,8.718,830,5.259,831,6.244,832,3.419,833,8.062,834,8.062,835,8.062,836,5.731,837,4.585,838,7.099,839,5.04,840,5.731,841,5.04,842,5.731,843,5.731,844,5.731,845,7.099,846,5.731,847,5.731,848,7.099,849,5.731,850,5.731,851,3.974,852,5.731,853,5.731,854,5.731,855,3.974]],["title/modules/DashboardModule.html",[856,1.39,857,3.28]],["body/modules/DashboardModule.html",[2,0.202,3,0.186,4,0.094,19,0.01,21,0.486,28,0.523,30,0.463,31,0.445,32,1.929,42,5.139,47,0.224,48,0.117,63,0.008,64,0.008,143,0.89,144,1.036,145,1.036,192,0.991,214,1.938,283,1.813,345,1.077,346,1.593,347,1.479,349,2.966,459,1.199,565,2.67,856,2.592,857,6.599,858,2.585,859,3.364,860,2.527,861,5.407,862,5.407,863,5.407,864,5.407,865,3.856,866,3.444,867,2.857,868,2.67,869,6.148,870,3.704,871,3.976,872,2.857,873,3.976,874,4.132,875,4.132,876,6.148,877,6.148,878,4.919,879,3.073,880,3.194,881,5.929,882,4.919]],["title/injectables/DashboardService.html",[0,0.864,883,2.896]],["body/injectables/DashboardService.html",[0,1.485,2,0.161,3,0.148,4,0.075,6,2.657,7,0.311,8,0.612,10,2.134,11,2.551,12,3.107,13,3.118,14,3.017,15,3.017,16,0.537,17,3.93,18,0.855,19,0.011,20,0.531,21,0.482,22,0.797,24,0.72,26,3.93,28,0.746,29,5.055,30,0.443,31,0.356,32,1.541,33,2.657,34,2.366,35,1.965,36,1.629,37,2.795,38,3.047,39,2.022,40,5.308,41,3.587,42,3.406,43,1.01,44,1.584,45,0.707,46,0.687,47,0.148,48,0.093,49,0.728,50,2.455,51,2.206,52,2.194,53,3.406,54,3.93,55,2.283,59,3.77,60,4.387,61,5.17,63,0.007,64,0.007,85,1.275,111,1.063,112,0.835,119,0.749,123,1.55,129,0.974,188,2.773,196,1.242,384,1.421,516,1.813,637,2.991,650,4.579,780,4.32,837,3.93,883,4.209,884,6.846,885,5.659,886,6.434,887,7.615,888,6.434,889,6.434,890,6.434,891,6.434,892,6.434,893,4.32,894,3.017,895,4.912,896,4.32,897,7.457,898,4.912,899,6.325,900,4.912,901,5.316,902,4.912,903,4.912,904,4.912,905,7.176,906,6.311,907,4.912,908,4.912,909,5.316,910,4.976,911,4.912,912,4.912,913,5.308,914,6.434,915,4.912,916,7.615,917,4.912,918,4.912,919,2.324,920,4.912,921,4.912,922,6.434,923,2.902,924,4.912,925,5.742,926,2.75,927,4.912,928,4.912,929,4.912,930,6.434,931,4.912,932,4.912,933,4.912,934,4.912,935,4.912,936,4.912,937,4.912,938,4.912,939,4.912,940,4.912,941,4.912,942,4.912,943,4.912,944,4.912,945,4.32,946,2.455,947,4.32,948,4.32,949,4.912,950,4.912,951,4.912,952,4.912,953,4.912,954,2.133,955,4.32,956,4.912,957,4.912,958,4.912,959,3.047]],["title/components/DateTimeComponent.html",[65,0.134,219,0.887]],["body/components/DateTimeComponent.html",[2,0.086,3,0.152,4,0.04,7,0.413,8,0.62,16,0.524,18,0.628,19,0.011,20,0.509,21,0.466,22,0.585,24,0.658,25,0.509,28,0.749,30,0.353,31,0.189,35,1.245,36,0.865,43,1.166,45,0.375,46,0.365,47,0.248,48,0.158,49,1.209,63,0.005,64,0.005,65,0.256,66,0.551,67,0.596,68,0.907,71,2.137,72,0.861,73,1.665,74,0.565,75,2.548,76,1.356,77,1.108,78,0.551,80,2.696,82,0.494,83,1.401,84,1.732,85,1.401,86,1.753,87,1.654,88,1.888,90,0.999,91,1.315,92,1.315,93,1.18,94,1.611,95,1.452,96,1.732,97,1.377,98,1.239,99,1.162,100,1.452,101,1.146,102,1.883,103,0.999,104,1.149,105,0.999,106,0.941,107,1.176,108,0.999,109,0.999,110,1.074,111,0.84,112,0.793,113,1.36,114,0.999,115,0.999,119,0.621,121,1.245,122,1.532,123,1.049,124,0.915,125,1.57,126,1.452,127,1.245,128,1.245,129,1.007,130,0.841,131,0.915,132,1.686,133,1.089,134,0.697,135,0.915,136,1.212,137,1.034,138,0.915,139,1.561,140,0.915,141,1.529,142,1.239,143,0.603,144,0.701,145,0.701,146,0.915,147,1.18,148,2.082,149,1.781,150,1.089,153,0.915,154,1.414,155,0.915,156,0.915,157,1.557,158,0.915,160,1.136,161,1.66,162,0.841,180,1.106,192,0.421,193,0.907,194,0.816,195,0.907,196,1.074,197,0.596,198,1.49,199,0.816,200,0.883,201,0.565,202,0.58,203,1.146,204,0.551,205,0.58,206,0.596,207,0.816,208,0.596,209,0.816,210,1.005,211,0.565,212,1.402,213,0.931,214,0.565,215,0.596,216,0.565,217,0.734,218,0.928,219,1.136,220,1.032,221,0.596,222,0.551,223,0.883,224,1.296,225,0.565,226,0.931,227,1.005,228,0.596,229,0.551,230,0.551,231,0.551,232,0.816,233,0.883,234,0.816,235,0.596,236,0.816,237,0.58,238,0.596,239,0.551,240,0.509,241,0.596,242,0.565,243,0.861,244,0.596,245,0.565,246,0.596,247,0.551,248,0.596,249,0.551,250,0.58,251,1.174,252,0.931,253,0.816,254,0.931,255,0.551,256,0.596,257,0.931,258,0.551,259,0.551,260,0.565,261,0.596,262,0.551,263,0.522,264,0.596,265,0.551,266,0.596,267,0.551,268,0.596,269,0.522,270,1.229,271,0.551,272,0.596,273,0.551,274,0.931,275,0.522,276,0.931,277,0.565,278,0.596,279,0.838,280,1.342,281,1.005,282,0.596,283,0.551,284,0.596,285,0.816,286,0.596,287,0.838,288,1.414,289,0.883,290,0.816,291,0.596,292,0.551,293,0.903,294,0.596,295,0.551,296,0.816,297,0.596,298,0.565,299,0.565,300,0.596,301,0.551,302,0.551,303,0.596,304,0.565,305,0.409,306,0.596,307,0.522,308,0.551,309,0.596,310,0.551,311,0.596,312,0.565,313,1.059,314,0.551,315,0.596,316,0.551,317,0.596,318,1.481,319,1.133,320,2.106,321,1.133,324,1.714,327,0.818,328,0.889,329,0.661,330,1.77,331,1.133,332,1.866,333,2.179,334,2.179,335,1.491,336,2.841,337,2.179,338,2.464,339,1.133,340,1.77,341,1.77,342,1.096,343,1.096,344,0.942,345,0.457,346,0.816,347,0.628,348,1.096,349,1.99,350,1.133,351,2.834,352,1.77,353,0.999,354,1.714,355,1.472,356,0.841,357,1.133,358,1.133,359,1.133,360,1.133,361,1.133,362,1.77,363,1.133,364,0.889,365,1.133,366,1.133,367,1.133,368,1.03,369,0.999,370,0.999,371,0.915,372,1.133,373,1.133,374,1.133,375,1.133,376,1.77,377,1.133,378,1.133,379,1.133,380,1.133,381,2.11,382,1.66,383,1.133,384,1.143,385,1.922,386,1.133,387,1.981,388,0.865,389,2.044,390,1.133,391,2.16,392,2.179,393,1.341,394,1.532,395,1.133,396,1.133,397,1.133,398,1.133,399,1.133,400,1.133,401,1.089,402,1.133,403,1.77,404,1.77,405,1.133,406,1.133,407,1.133,408,1.133,409,1.133,410,1.133,411,1.096,412,1.43,413,1.133,414,1.133,415,1.133,416,1.77,417,1.133,418,1.133,419,1.133,420,1.562,421,1.714,422,1.472,423,2.866,424,2.179,425,1.133,426,1.133,427,1.77,428,1.77,429,1.133,430,2.866,431,1.77,432,1.133,433,1.133,434,1.133,435,1.133,436,2.179,437,1.133,438,1.133,439,1.133,440,1.133,441,1.133,442,1.133,443,0.942,444,0.97,445,1.133,446,1.43,447,1.77,448,0.97,449,0.97,450,1.133,451,0.915,452,1.062,453,1.096,454,0.889,455,1.062,456,2.179,457,1.77,458,1.133,459,0.795,460,0.97,461,1.096,462,0.889,463,0.942,464,1.096,465,0.661,466,2.044,467,1.77,468,1.133,469,1.133,470,1.133,471,1.133,472,1.133,473,1.133,474,1.133,475,2.179,476,1.133,477,1.133,478,1.133,479,1.133,480,1.77,481,1.133,482,1.133,483,1.43,484,1.133,485,1.062,486,1.133,487,1.133,488,1.062,489,1.133,490,1.133,491,1.133,492,1.77,493,1.77,494,0.716,495,1.133,496,1.096,497,1.096,498,1.03,499,1.096,500,1.133,501,1.096,502,1.133,503,1.133,504,1.133,505,1.133,506,1.133,507,1.133,508,1.133,509,1.133,510,1.77,511,1.77,512,1.77,513,1.77,514,1.77,515,1.714,516,1.149,517,1.133,518,1.03,519,1.133,520,1.133,521,0.865,522,0.999,523,1.77,524,1.133,525,1.133,526,1.133,527,2.179,528,1.133,529,1.133,530,1.133,531,1.133,532,1.133,533,1.133,534,1.133,535,1.133,536,1.096,537,1.133,538,1.714,539,1.77,540,1.77,541,1.77,542,2.179,543,1.77,544,0.97,545,1.133,546,1.133,547,1.562,548,1.77,549,2.464,550,1.133,551,0.999,552,0.735,553,1.133,554,1.133,555,1.133,556,1.133,557,1.133,558,0.915,960,2.608,961,2.608,962,2.087,963,2.608,964,2.608]],["title/components/DmpFieldComponent.html",[65,0.134,222,0.935]],["body/components/DmpFieldComponent.html",[0,0.781,2,0.131,3,0.121,4,0.061,7,0.444,8,0.533,10,1.328,16,0.548,18,0.571,19,0.011,20,0.484,21,0.487,22,0.381,24,0.625,25,0.781,28,0.681,30,0.414,31,0.29,35,1.974,36,1.328,43,1.152,45,0.576,46,0.56,47,0.169,48,0.076,52,1.366,63,0.006,64,0.006,65,0.249,66,0.845,67,1.476,68,1.247,71,0.989,72,1.183,73,1.686,74,0.868,76,0.955,77,1.163,78,0.845,82,0.552,83,1.418,85,1.29,88,2.132,90,2.925,97,1.58,98,1.729,99,1.336,100,1.87,101,1.476,104,1.579,106,1.072,107,1.515,110,1.037,111,0.83,112,0.912,113,1.374,119,0.61,123,1.036,129,0.877,143,0.673,144,0.783,145,0.783,159,1.489,160,1.294,180,1.093,188,2.261,192,0.646,193,1.247,194,1.475,195,1.247,196,1.233,197,0.915,198,1.744,199,0.802,200,0.868,201,0.868,202,0.891,203,1.476,204,0.845,205,0.891,206,0.915,207,0.802,208,0.915,209,0.802,210,0.802,211,0.868,212,1.612,213,1.28,214,0.868,215,0.915,216,0.868,217,1.008,218,1.036,219,0.802,220,0.823,221,0.915,222,1.478,223,1.655,224,1.599,225,0.868,226,1.28,227,0.802,228,0.915,229,0.845,230,0.845,231,0.845,232,0.802,233,0.868,234,0.802,235,0.915,236,0.802,237,0.891,238,0.915,239,0.845,240,0.781,241,0.915,242,0.868,243,1.183,244,0.915,245,0.868,246,0.915,247,0.845,248,0.915,249,0.845,250,0.891,251,1.163,252,1.28,253,0.802,254,1.28,255,0.845,256,0.915,257,1.28,258,0.845,259,0.845,260,0.868,261,0.915,262,0.845,263,0.802,264,0.915,265,0.845,266,0.915,267,0.845,268,0.915,269,0.802,270,1.517,271,0.845,272,0.915,273,0.845,274,1.28,275,0.802,276,1.28,277,0.868,278,0.915,279,0.823,280,0.823,281,0.802,282,0.915,283,0.845,284,0.915,285,0.802,286,0.915,287,0.823,288,0.868,289,0.868,290,0.802,291,0.915,292,0.845,293,0.721,294,0.915,295,0.845,296,0.802,297,0.915,298,0.868,299,0.868,300,0.915,301,0.845,302,1.364,303,0.915,304,0.868,305,0.628,306,0.915,307,0.802,308,0.845,309,0.915,310,0.845,311,0.915,312,0.868,313,1.364,314,0.845,315,0.915,316,0.845,317,0.915,327,1.257,328,2.604,345,0.701,346,1.122,347,0.964,353,1.534,355,1.446,356,1.807,364,1.366,384,0.701,388,1.858,459,0.781,465,1.015,521,1.858,626,1.966,637,1.861,764,4.483,789,3.31,962,4.483,965,8.685,966,3.522,967,7.147,968,4.136,969,6.157,970,6.48,971,6.157,972,6.157,973,6.157,974,5.684,975,3.522,976,6.715,977,3.818,978,4.342,979,4.928,980,4.928,981,3.522,982,4.004,983,3.522,984,3.522,985,4.004,986,4.004,987,4.004,988,3.522,989,4.004,990,4.004,991,4.928,992,4.004,993,5.171,994,3.886,995,4.928,996,4.928,997,4.004,998,6.157,999,4.151,1000,3.522,1001,4.004,1002,3.522,1003,4.004,1004,3.522,1005,4.004,1006,3.522,1007,5.684,1008,4.483,1009,3.522,1010,3.522,1011,3.522,1012,3.522,1013,3.522,1014,3.476,1015,4.004,1016,1.631,1017,4.004,1018,4.004,1019,3.204,1020,3.522,1021,3.522,1022,3.522,1023,3.522,1024,5.603,1025,2.967,1026,2.619,1027,3.522,1028,2.619,1029,4.151,1030,3.204,1031,3.522,1032,3.522,1033,3.522,1034,3.522,1035,4.004,1036,4.004,1037,4.004,1038,4.004,1039,4.004,1040,4.004,1041,3.522,1042,4.004,1043,4.004,1044,3.522,1045,3.522,1046,3.522,1047,3.522,1048,3.522,1049,3.522,1050,3.522,1051,4.483,1052,3.522,1053,3.522,1054,3.522,1055,3.522,1056,3.522,1057,3.522,1058,4.004,1059,2.777,1060,4.004,1061,4.004,1062,4.004,1063,4.004,1064,3.204,1065,2.166,1066,4.004,1067,4.004,1068,4.004,1069,3.522,1070,3.522]],["title/modules/DmpModule.html",[856,1.39,1071,3.28]],["body/modules/DmpModule.html",[2,0.195,3,0.18,4,0.09,19,0.01,22,0.565,30,0.454,31,0.431,32,1.865,47,0.219,48,0.113,63,0.008,64,0.008,78,1.255,85,1.317,192,0.959,223,1.288,225,1.93,231,1.724,345,1.041,346,1.57,347,1.43,565,2.581,856,2.278,858,2.499,859,3.193,860,2.476,865,3.825,866,3.375,867,2.763,868,2.581,870,3.629,871,3.629,872,2.763,873,3.629,874,3.088,875,3.772,880,3.088,1071,6.498,1072,5.227,1073,5.227,1074,5.944,1075,5.227,1076,5.944,1077,4.756,1078,3.687,1079,5.227,1080,5.227,1081,5.227,1082,5.227,1083,6.272,1084,5.227,1085,6.532,1086,6.203,1087,5.436,1088,5.379,1089,4.756,1090,5.227,1091,6.272,1092,6.272,1093,6.272,1094,4.756,1095,4.756,1096,4.122,1097,4.756,1098,3.888,1099,4.403,1100,4.756,1101,4.756,1102,3.088,1103,5.379,1104,5.809,1105,4.756,1106,4.756,1107,4.756,1108,4.756,1109,4.403,1110,4.403,1111,3.512,1112,3.888,1113,4.122,1114,4.756,1115,3.512,1116,4.756,1117,4.756,1118,4.756,1119,5.227,1120,5.227,1121,5.227,1122,5.227,1123,5.227,1124,5.227,1125,5.227,1126,5.227,1127,5.227,1128,5.227,1129,5.227,1130,4.403]],["title/components/DropdownFieldComponent.html",[65,0.134,227,0.887]],["body/components/DropdownFieldComponent.html",[2,0.094,3,0.161,4,0.044,7,0.338,8,0.567,16,0.338,18,0.543,19,0.011,20,0.482,21,0.37,22,0.417,24,0.634,25,0.559,28,0.742,30,0.365,31,0.208,35,1.34,36,0.951,43,0.902,45,0.413,46,0.401,47,0.252,48,0.16,49,1.228,63,0.005,64,0.005,65,0.258,66,0.606,67,0.655,68,0.976,71,2.019,72,0.926,73,1.672,74,0.622,75,2.628,76,1.382,77,1.157,78,0.606,80,2.774,82,0.525,83,1.384,84,0.876,85,1.358,86,1.469,87,1.113,88,1.27,90,1.099,94,1.469,96,0.876,97,1.34,98,0.709,99,1.017,100,0.83,101,1.002,102,1.029,104,0.808,106,0.883,107,1.029,110,0.789,111,0.65,112,0.695,113,1.37,121,0.876,122,0.876,123,0.811,125,1.282,126,1.328,127,0.876,128,0.876,129,0.958,132,1.304,133,0.767,136,0.853,137,0.727,139,1.513,141,1.529,142,1.084,143,0.527,144,0.613,145,0.613,147,0.83,148,1.964,149,1.542,150,0.767,154,1.236,157,1.462,160,1.067,161,1.787,162,0.925,180,1.164,192,0.463,193,0.976,194,0.879,195,0.976,196,1.105,197,0.655,198,1.549,199,0.879,200,0.951,201,0.622,202,0.638,203,1.217,204,0.606,205,0.638,206,0.655,207,0.879,208,0.655,209,0.879,210,1.067,211,0.622,212,1.451,213,1.002,214,0.622,215,0.655,216,0.622,217,0.79,218,0.985,219,0.879,220,0.902,221,0.655,222,0.606,223,0.951,224,1.363,225,0.622,226,1.002,227,1.358,228,0.655,229,0.606,230,0.606,231,0.606,232,0.879,233,0.951,234,0.879,235,0.655,236,0.879,237,0.638,238,0.655,239,0.606,240,0.559,241,0.655,242,0.622,243,0.926,244,0.655,245,0.622,246,0.655,247,0.606,248,0.655,249,0.606,250,0.638,251,1.22,252,1.002,253,0.879,254,1.002,255,0.606,256,0.655,257,1.002,258,0.606,259,0.606,260,0.622,261,0.655,262,0.606,263,0.574,264,0.655,265,0.606,266,0.655,267,0.606,268,0.655,269,0.574,270,1.293,271,0.606,272,0.655,273,0.606,274,1.002,275,0.574,276,1.002,277,0.622,278,0.655,279,0.902,280,1.394,281,1.067,282,0.655,283,0.606,284,0.655,285,0.879,286,0.655,287,0.902,288,1.47,289,0.951,290,0.879,291,0.655,292,0.606,293,0.959,294,0.655,295,0.606,296,0.879,297,0.655,298,0.622,299,0.622,300,0.655,301,0.606,302,0.606,303,0.655,304,0.622,305,0.45,306,0.655,307,0.574,308,0.606,309,0.655,310,0.606,311,0.655,312,0.622,313,1.125,314,0.606,315,0.655,316,0.606,317,0.655,318,1.056,319,1.246,320,2.136,321,1.246,324,1.845,327,0.9,328,0.978,329,0.727,330,1.906,331,1.246,332,1.981,333,2.793,334,2.314,335,1.584,336,2.286,337,2.314,338,2.592,339,1.246,340,1.906,341,1.906,342,1.206,343,1.206,344,1.036,345,0.502,346,0.879,347,0.69,348,1.206,349,2.094,350,1.246,351,2.945,352,1.906,353,1.099,354,1.845,355,1.585,356,0.925,357,1.246,358,1.246,359,1.246,360,1.246,361,1.246,362,1.906,363,1.246,364,0.978,365,1.246,366,1.246,367,1.246,368,1.133,369,1.099,370,1.099,371,1.007,372,1.246,373,1.246,374,1.246,375,1.246,376,1.906,377,1.246,378,1.246,379,1.246,380,1.246,381,2.851,382,2.17,383,1.246,384,1.188,385,2.041,386,1.246,387,2.104,388,1.455,389,2.619,390,1.906,391,2.256,392,2.793,393,1.719,394,2.071,395,1.246,396,1.246,397,1.246,398,1.246,399,1.246,400,1.246,401,1.173,402,1.246,403,1.906,404,1.906,405,1.246,406,1.246,407,1.246,408,1.246,409,1.246,410,1.246,411,1.206,412,1.54,413,1.246,414,1.246,415,1.246,416,1.906,417,1.246,418,1.246,419,1.246,420,1.681,421,1.845,422,1.585,423,2.509,424,2.314,425,1.246,426,1.246,427,1.906,428,1.906,429,1.246,430,2.967,431,1.906,432,1.246,433,1.246,434,1.246,435,1.246,436,2.314,437,1.246,438,1.246,439,1.246,440,1.246,441,1.246,442,1.246,443,1.036,444,1.067,445,1.246,446,1.54,447,1.906,448,1.067,449,1.067,450,1.246,451,1.007,452,1.168,453,1.206,454,0.978,455,1.168,456,2.314,457,1.906,458,1.246,459,0.559,460,1.067,461,1.206,462,0.978,463,1.036,464,1.206,465,0.727,466,1.787,467,1.906,468,1.246,469,1.246,470,1.246,471,1.246,472,1.246,473,1.246,474,1.246,475,2.314,476,1.246,477,1.246,478,1.246,479,1.246,480,1.906,481,1.246,482,1.246,483,1.54,484,1.246,485,1.168,486,1.246,487,1.246,488,1.168,489,1.246,490,1.246,491,1.246,492,1.906,493,1.906,494,0.787,495,1.246,496,1.206,497,1.206,498,1.133,499,1.206,500,1.246,501,1.206,502,1.246,503,1.246,504,1.246,505,1.246,506,1.246,507,1.246,508,1.246,509,1.246,510,1.906,511,1.906,512,1.906,513,1.906,514,1.906,515,1.845,516,1.236,517,1.246,518,1.133,519,1.246,520,1.246,521,0.951,522,1.099,523,1.906,524,1.246,525,1.246,526,1.246,527,2.314,528,1.246,529,1.246,530,1.246,531,1.246,532,1.246,533,1.246,534,1.246,535,1.246,536,1.206,537,1.246,538,1.206,539,1.246,540,1.246,541,1.246,542,1.246,543,1.246,544,1.067,545,1.246,546,1.246,547,1.099,548,1.246,549,1.246,550,1.246,551,1.099,552,0.808,553,1.246,554,1.246,555,1.246,556,1.246,557,1.246,558,1.007,1131,3.043,1132,2.523,1133,2.868,1134,2.523]],["title/injectables/EmailNotificationService.html",[0,0.864,1135,3.28]],["body/injectables/EmailNotificationService.html",[0,1.595,2,0.196,3,0.181,4,0.091,6,3.233,7,0.379,8,0.693,10,2.416,11,3.105,12,3.268,13,3.241,16,0.531,18,0.743,19,0.01,20,0.462,21,0.482,22,0.693,24,0.73,28,0.62,29,4.304,30,0.442,31,0.433,32,1.876,33,3.233,34,2.879,37,3.164,38,3.708,39,2.305,44,2.638,47,0.181,48,0.113,49,0.885,50,2.987,51,2.684,52,3.012,55,2.778,60,3.233,63,0.008,64,0.008,76,1.429,82,0.718,111,0.885,112,0.696,129,1.11,143,0.718,188,3.374,196,0.885,217,1.509,305,1.142,459,1.166,576,3.105,629,4.536,754,6.06,771,5.257,772,5.829,773,4.428,794,4.428,795,5.816,811,3.909,1135,5.397,1136,8.529,1137,3.784,1138,7.285,1139,7.285,1140,5.977,1141,5.257,1142,5.977,1143,5.977,1144,7.285,1145,5.977,1146,5.977,1147,5.977,1148,5.257]],["title/classes/EmbeddableComponent.html",[48,0.084,1149,2.616]],["body/classes/EmbeddableComponent.html",[2,0.108,3,0.099,4,0.05,7,0.432,8,0.55,14,2.433,15,2.045,16,0.533,18,0.696,19,0.011,20,0.453,21,0.474,22,0.679,24,0.696,25,0.949,28,0.74,30,0.393,31,0.352,45,0.474,46,0.46,47,0.216,48,0.144,49,1.095,63,0.006,64,0.006,65,0.193,71,2.019,73,0.899,75,2.09,76,0.829,82,0.479,83,1.318,84,1.767,85,1.378,86,1.898,87,1.621,88,1.85,91,1.569,92,1.569,93,1.85,94,1.46,95,1.85,96,1.767,97,1.099,98,1.579,99,0.561,102,1.847,106,0.545,110,1.124,111,1.058,112,0.902,113,1.394,118,1.863,119,0.741,121,1.005,122,1.485,123,1.366,124,1.154,125,1.393,126,1.287,127,1.005,128,1.005,129,1.109,130,1.061,131,1.154,132,1.446,133,0.879,134,1.3,135,1.154,136,0.978,137,1.233,138,1.154,139,1.233,140,1.154,141,0.713,142,1.201,143,0.584,144,0.68,145,0.68,146,1.154,147,0.952,148,1.485,149,1.408,150,0.879,153,1.154,154,0.927,155,1.154,156,1.154,157,0.903,158,1.154,159,1.223,162,1.061,168,1.974,170,2.152,175,1.299,180,1.393,196,0.487,251,1.228,269,0.659,270,1.254,275,0.974,318,1.825,320,1.233,329,1.233,332,1.223,335,1.9,344,1.188,345,0.576,355,1.188,356,1.061,364,1.122,369,1.26,370,1.26,371,1.154,384,1.444,388,1.613,393,0.879,394,1.005,412,2.243,463,1.757,465,0.834,494,0.903,516,2.082,522,1.26,552,0.927,558,1.154,616,2.892,617,2.282,619,3.373,620,4.013,621,3.373,623,2.282,626,1.154,804,2.304,926,2.798,1016,2.357,1059,2.282,1065,3.458,1078,2.041,1115,1.944,1149,1.944,1150,2.437,1151,3.373,1152,2.874,1153,2.874,1154,2.631,1155,2.513,1156,2.874,1157,3.29,1158,2.527,1159,3.29,1160,3.29,1161,3.29,1162,4.346,1163,3.795,1164,2.527,1165,3.41,1166,3.286,1167,3.838,1168,3.419,1169,2.892,1170,3.29,1171,3.29,1172,2.599,1173,3.29,1174,2.874,1175,2.152,1176,3.603,1177,2.282,1178,3.966,1179,2.437,1180,2.437,1181,3.603,1182,2.152,1183,2.437,1184,2.437,1185,2.437,1186,2.437,1187,2.437,1188,2.437,1189,2.437,1190,2.437,1191,2.437,1192,2.437,1193,2.437,1194,2.437,1195,2.437,1196,2.437,1197,2.437,1198,2.437,1199,2.437,1200,2.437,1201,2.437,1202,4.287,1203,2.282,1204,2.437,1205,2.437,1206,2.437,1207,2.437,1208,2.437,1209,3.603,1210,3.603,1211,3.603,1212,2.437,1213,3.603,1214,2.437,1215,2.437,1216,2.437,1217,2.437,1218,2.437,1219,2.437,1220,3.603,1221,4.434,1222,2.437,1223,2.437,1224,2.437,1225,2.437,1226,2.437,1227,3.71,1228,3.017,1229,3.603,1230,3.017,1231,4.287,1232,3.603,1233,2.437,1234,2.437,1235,2.437,1236,2.437,1237,4.736,1238,3.603,1239,4.287,1240,4.287,1241,2.437,1242,2.437,1243,3.603,1244,3.603,1245,4.182,1246,2.437,1247,2.437,1248,2.437,1249,3.603,1250,2.437,1251,2.437,1252,2.437,1253,2.437,1254,4.736,1255,2.437,1256,2.437,1257,2.437,1258,3.603,1259,2.437,1260,2.437,1261,2.437,1262,3.603,1263,2.437,1264,2.437,1265,2.437,1266,2.437,1267,2.437,1268,2.437,1269,2.437,1270,2.631,1271,2.437,1272,2.437,1273,2.437,1274,2.437,1275,2.437,1276,2.437,1277,2.437,1278,2.437,1279,2.437,1280,2.437,1281,2.437,1282,3.603,1283,2.874,1284,2.437,1285,2.437,1286,2.437,1287,2.437,1288,2.437,1289,2.437,1290,2.437,1291,2.437,1292,2.437,1293,2.152,1294,2.437,1295,2.437,1296,2.437,1297,4.736,1298,3.603,1299,3.603,1300,2.437,1301,2.437,1302,2.437,1303,2.437,1304,4.287,1305,2.437,1306,2.437,1307,2.041,1308,2.041,1309,2.437,1310,3.603,1311,2.437,1312,2.437,1313,2.437,1314,2.152,1315,3.603,1316,2.437,1317,2.437,1318,2.437,1319,2.152,1320,2.437,1321,2.437,1322,2.437,1323,2.437,1324,2.437,1325,2.437,1326,2.437,1327,2.041,1328,4.287,1329,3.006,1330,2.746,1331,2.874,1332,2.746,1333,2.874,1334,4.287,1335,2.437,1336,2.437,1337,4.287,1338,1.857,1339,1.857,1340,2.437,1341,2.437,1342,1.78,1343,1.78,1344,1.78,1345,2.631,1346,3.603,1347,2.437,1348,2.437,1349,2.437,1350,2.437,1351,2.437,1352,2.437,1353,2.437,1354,1.857,1355,3.603,1356,3.603,1357,2.437,1358,2.437,1359,4.736,1360,4.736,1361,4.736,1362,4.287,1363,3.603,1364,2.437,1365,2.437,1366,4.287,1367,3.603,1368,2.437,1369,2.437,1370,2.437,1371,2.437,1372,2.437,1373,2.437,1374,2.437,1375,2.437,1376,2.437,1377,2.437,1378,2.437,1379,2.437,1380,3.603,1381,3.603,1382,2.437,1383,2.437,1384,2.437,1385,3.603,1386,2.437,1387,2.437,1388,2.437,1389,2.437,1390,2.437,1391,2.437,1392,2.437,1393,2.437,1394,2.437,1395,2.437,1396,2.437,1397,3.603,1398,5.291,1399,2.437,1400,2.437,1401,2.437,1402,2.437,1403,2.437]],["title/components/ExportFormComponent.html",[65,0.134,229,0.935]],["body/components/ExportFormComponent.html",[0,0.778,2,0.131,3,0.121,4,0.061,7,0.253,8,0.531,10,1.853,14,3.359,15,3.496,16,0.561,18,0.798,19,0.01,20,0.506,21,0.497,22,0.725,24,0.654,25,0.778,28,0.714,30,0.406,31,0.289,35,1.707,36,1.323,39,1.124,45,0.574,46,0.558,47,0.26,48,0.076,49,0.828,52,1.906,63,0.006,64,0.006,65,0.237,66,0.842,67,0.911,68,1.243,72,1.18,73,1.686,74,0.865,76,0.68,77,1.161,78,0.842,82,0.55,85,0.901,87,1.012,97,0.758,99,0.952,102,1.967,106,0.661,110,1.219,111,0.828,112,0.65,113,1.006,119,1.218,143,0.671,144,0.781,145,0.781,163,3.639,180,0.778,192,0.643,193,1.243,194,1.119,195,1.243,196,1.035,197,0.911,198,1.742,199,0.799,200,0.865,201,0.865,202,0.888,203,1.473,204,0.842,205,0.888,206,0.911,207,0.799,208,0.911,209,0.799,210,0.799,211,0.865,212,1.61,213,1.276,214,0.865,215,0.911,216,0.865,217,1.006,218,1.477,219,0.799,220,0.82,221,0.911,222,0.842,223,1.211,224,1.596,225,0.865,226,1.276,227,0.799,228,0.911,229,1.475,230,0.842,231,0.842,232,0.799,233,0.865,234,0.799,235,0.911,236,0.799,237,0.888,238,0.911,239,0.842,240,0.778,241,0.911,242,0.865,243,1.18,244,0.911,245,0.865,246,0.911,247,0.842,248,0.911,249,0.842,250,0.888,251,1.161,252,1.276,253,0.799,254,1.276,255,0.842,256,0.911,257,1.276,258,0.842,259,0.842,260,0.865,261,0.911,262,0.842,263,0.799,264,0.911,265,0.842,266,0.911,267,0.842,268,0.911,269,0.799,270,1.515,271,0.842,272,0.911,273,0.842,274,1.276,275,0.799,276,1.276,277,0.865,278,0.911,279,0.82,280,0.82,281,0.799,282,0.911,283,0.842,284,0.911,285,0.799,286,0.911,287,0.82,288,0.865,289,0.865,290,0.799,291,0.911,292,0.842,293,0.718,294,0.911,295,0.842,296,0.799,297,0.911,298,0.865,299,0.865,300,0.911,301,0.842,302,0.842,303,0.911,304,0.865,305,0.626,306,0.911,307,0.799,308,0.842,309,0.911,310,0.842,311,0.911,312,0.865,313,1.362,314,0.842,315,0.911,316,0.842,317,0.911,384,1.13,422,1.441,459,0.778,498,2.76,547,1.528,625,3.509,687,3.023,763,4.14,789,3.302,860,2.384,919,1.441,994,4.473,1016,1.625,1096,4.847,1163,2.692,1404,8.512,1405,3.99,1406,5.588,1407,5.938,1408,4.915,1409,4.915,1410,4.778,1411,4.14,1412,4.778,1413,5.588,1414,6.989,1415,6.989,1416,6.989,1417,6.989,1418,6.989,1419,6.989,1420,7.626,1421,7.626,1422,6.989,1423,5.161,1424,5.161,1425,4.778,1426,6.147,1427,6.989,1428,5.588,1429,5.161,1430,4.471,1431,5.161,1432,4.14,1433,4.471,1434,5.161,1435,4.778,1436,3.99,1437,4.335,1438,6.45,1439,5.588,1440,5.588,1441,3.99,1442,3.99,1443,5.588,1444,3.99,1445,4.14,1446,3.509,1447,3.192,1448,4.471,1449,3.509,1450,3.509,1451,3.192,1452,3.509,1453,3.192,1454,3.509,1455,3.509,1456,3.509,1457,3.192,1458,3.509,1459,3.192,1460,3.99,1461,3.99,1462,3.99,1463,3.99,1464,3.99,1465,3.99,1466,3.99,1467,3.99,1468,3.509,1469,3.509,1470,3.509,1471,3.509,1472,3.192,1473,3.192,1474,3.192,1475,3.99,1476,3.99,1477,3.99,1478,3.99,1479,3.99,1480,2.956,1481,5.588,1482,3.509,1483,3.99,1484,3.509,1485,3.509,1486,3.99,1487,5.588,1488,3.99,1489,3.99,1490,3.99,1491,5.588,1492,3.99,1493,3.192,1494,3.99,1495,3.99,1496,5.588,1497,5.588,1498,3.99,1499,3.99,1500,3.99,1501,3.99,1502,3.99,1503,3.99,1504,6.989]],["title/modules/ExportModule.html",[856,1.39,1505,3.28]],["body/modules/ExportModule.html",[2,0.189,3,0.174,4,0.088,19,0.01,22,0.549,30,0.455,31,0.418,32,1.812,47,0.234,48,0.11,63,0.008,64,0.008,78,1.219,85,1.304,125,1.39,192,0.931,218,1.431,229,1.896,231,1.706,336,2.212,345,1.011,346,1.55,347,1.39,565,2.508,856,2.238,858,2.428,859,3.152,860,2.832,865,3.799,866,3.315,867,2.684,868,2.508,870,3.565,871,3.565,872,2.684,873,3.565,874,3.705,875,3.705,880,3,1077,4.621,1078,3.582,1079,5.079,1080,5.079,1081,5.079,1082,5.079,1083,6.192,1084,5.079,1085,6.467,1086,6.152,1087,5.367,1088,5.284,1089,4.621,1090,5.079,1091,6.192,1092,6.192,1093,6.192,1094,4.621,1095,4.621,1096,4.005,1097,4.621,1098,3.777,1099,4.278,1100,4.621,1101,4.621,1102,3,1103,5.284,1104,5.707,1105,4.621,1106,4.621,1107,4.621,1108,4.621,1109,4.278,1110,4.278,1111,3.412,1112,3.777,1113,4.005,1114,4.621,1115,3.412,1116,4.621,1117,4.621,1118,4.621,1119,5.079,1120,5.079,1121,5.079,1122,5.079,1123,5.079,1124,5.079,1125,5.079,1126,5.079,1127,5.079,1128,5.079,1129,5.079,1130,4.278,1410,5.734,1411,5.734,1412,5.734,1505,6.467,1506,5.079,1507,5.079,1508,5.079,1509,5.775,1510,5.079,1511,5.775,1512,5.707,1513,4.621]],["title/classes/ExternalLookupDataService.html",[48,0.084,1514,3.28]],["body/classes/ExternalLookupDataService.html",[0,1.04,2,0.094,3,0.087,4,0.044,7,0.378,8,0.417,10,1.456,12,2.966,13,2.22,16,0.408,18,0.609,19,0.011,20,0.378,21,0.343,22,0.568,24,0.733,25,1.255,28,0.738,30,0.42,31,0.208,32,0.901,33,1.553,34,1.383,35,0.877,37,1.907,39,1.237,44,0.926,45,0.413,46,0.401,47,0.161,48,0.129,49,1.005,51,1.289,52,0.979,55,1.334,59,1.334,62,1.435,63,0.007,64,0.007,65,0.161,71,1.084,73,0.531,76,0.489,83,1.094,85,1.422,86,1.003,94,0.656,97,1.382,99,0.489,100,0.831,101,1.003,106,0.476,107,0.673,110,1.178,112,0.789,113,1.31,119,0.91,123,0.985,125,0.691,126,0.639,129,1.013,134,0.767,137,1.113,142,0.709,143,0.345,144,0.401,145,0.401,150,0.767,157,0.788,159,1.068,160,0.879,168,0.979,170,1.068,175,2.787,179,4.212,180,1.485,210,1.414,212,0.59,217,1.501,251,0.517,263,1.067,305,0.836,307,0.575,318,1.632,320,1.113,327,0.901,329,0.728,345,0.503,356,0.926,364,0.979,371,1.007,384,1.468,391,1.54,393,0.767,412,1.87,420,1.682,422,1.925,446,1.007,449,1.068,465,1.113,494,0.788,518,1.134,551,1.1,552,1.502,614,1.696,616,2.194,626,1.54,627,1.435,629,3.229,630,1.781,637,2.04,654,1.491,797,1.878,804,2.277,817,3.044,830,3.252,855,1.991,859,1.169,860,0.979,879,1.435,919,2.836,923,1.696,926,1.037,946,2.664,954,3.703,968,4.498,1065,1.553,1098,3.486,1152,1.696,1153,1.696,1154,2.375,1155,2.315,1156,1.696,1158,1.491,1162,2.281,1163,2.114,1164,1.491,1165,1.435,1166,1.383,1167,1.491,1169,1.435,1172,2.889,1174,3.8,1227,3.101,1228,1.781,1307,1.781,1327,1.781,1338,1.621,1339,3.009,1437,2.723,1480,2.127,1514,3.949,1515,2.297,1516,5.147,1517,3.861,1518,4.776,1519,2.525,1520,4.265,1521,4.776,1522,5.147,1523,5.147,1524,2.871,1525,2.871,1526,4.265,1527,2.871,1528,6.429,1529,4.776,1530,2.871,1531,4.265,1532,2.871,1533,2.127,1534,4.14,1535,2.297,1536,2.127,1537,2.127,1538,2.127,1539,2.297,1540,4.776,1541,3.513,1542,2.297,1543,2.297,1544,2.297,1545,2.297,1546,3.513,1547,3.252,1548,2.297,1549,4.265,1550,5.647,1551,2.297,1552,2.297,1553,2.297,1554,2.297,1555,2.297,1556,2.297,1557,2.297,1558,2.297,1559,1.696,1560,1.781,1561,4.265,1562,2.297,1563,4.265,1564,2.297,1565,5.147,1566,2.297,1567,4.265,1568,2.297,1569,3.513,1570,2.297,1571,5.647,1572,2.297,1573,2.297,1574,2.297,1575,4.776,1576,3.513,1577,2.297,1578,3.513,1579,2.297,1580,2.297,1581,2.297,1582,2.297,1583,3.513,1584,3.513,1585,2.297,1586,3.513,1587,3.513,1588,3.513,1589,3.513,1590,3.513,1591,3.513,1592,2.297,1593,5.647,1594,5.147,1595,2.297,1596,2.297,1597,2.297,1598,1.878,1599,2.297,1600,4.14,1601,2.297,1602,2.297,1603,2.297,1604,3.513,1605,2.297,1606,2.297,1607,2.297,1608,2.127,1609,1.878,1610,2.297,1611,2.297,1612,2.297,1613,5.824,1614,2.297,1615,2.297,1616,3.513,1617,2.297,1618,2.127,1619,2.297,1620,2.297,1621,2.297,1622,2.127,1623,2.297,1624,2.297,1625,4.265,1626,4.776,1627,2.297,1628,1.991,1629,2.297,1630,2.297,1631,4.265,1632,2.127,1633,3.905,1634,1.781,1635,2.297,1636,2.127,1637,2.127,1638,2.297,1639,2.297,1640,2.297,1641,2.297,1642,1.781,1643,2.297,1644,3.252,1645,3.513,1646,2.297,1647,2.297,1648,2.297,1649,4.265,1650,5.428,1651,5.647,1652,6.361,1653,5.147,1654,4.776,1655,3.513,1656,4.766,1657,3.307,1658,4.766,1659,4.265,1660,4.265,1661,4.265,1662,4.265,1663,2.297,1664,2.297,1665,2.297,1666,5.428,1667,2.127,1668,2.127,1669,2.297,1670,2.297,1671,2.297,1672,3.513,1673,3.513,1674,2.297,1675,2.297,1676,2.297,1677,5.528,1678,2.297,1679,3.513,1680,1.991,1681,2.127,1682,2.297,1683,2.297,1684,2.297,1685,3.513,1686,2.297,1687,2.297,1688,2.297,1689,2.297,1690,3.513,1691,3.513,1692,3.513,1693,3.513,1694,2.297,1695,2.297,1696,2.297,1697,2.297,1698,2.297,1699,2.297,1700,2.297,1701,2.297,1702,2.297,1703,2.127,1704,2.297,1705,2.297,1706,2.297,1707,2.297,1708,2.297,1709,2.297,1710,2.297,1711,2.297,1712,2.297,1713,2.297,1714,2.297,1715,2.297,1716,2.297,1717,2.297,1718,1.781,1719,2.297,1720,1.991,1721,2.297,1722,2.297,1723,2.297,1724,2.297,1725,2.297,1726,3.513,1727,3.252,1728,2.297,1729,2.297,1730,2.297,1731,2.297,1732,2.297,1733,2.297,1734,2.297,1735,2.297,1736,2.297,1737,3.044,1738,2.297,1739,2.297,1740,2.297,1741,2.297,1742,2.297,1743,2.297,1744,4.265,1745,2.297,1746,1.696,1747,2.297,1748,1.991,1749,2.297,1750,2.297,1751,2.297,1752,4.265,1753,2.297,1754,2.297,1755,2.297,1756,2.297,1757,2.297,1758,2.127,1759,2.297,1760,1.621,1761,2.297,1762,2.297,1763,2.127,1764,2.127,1765,1.878,1766,2.297,1767,2.297,1768,3.513,1769,2.297,1770,2.297,1771,2.297,1772,2.297]],["title/injectables/FieldControlMetaService.html",[0,0.864,1773,2.616]],["body/injectables/FieldControlMetaService.html",[0,1.502,2,0.166,3,0.153,4,0.077,7,0.321,8,0.624,10,2.176,11,2.629,12,3.133,13,3.171,14,2.127,15,3.547,16,0.518,18,0.814,19,0.011,20,0.506,21,0.459,22,0.759,24,0.596,28,0.745,30,0.449,31,0.367,32,1.588,37,2.849,39,2.17,44,1.632,45,0.728,46,0.707,47,0.153,48,0.155,49,0.75,50,2.529,51,2.272,52,2.839,53,3.509,55,2.352,63,0.007,64,0.007,65,0.153,82,0.646,83,1.287,111,0.972,112,0.589,119,0.771,125,1.218,129,0.89,160,1.013,318,2.003,384,1.349,401,2.224,443,2.882,444,2.968,465,1.283,627,2.529,628,2.857,637,3.049,654,2.629,668,4.45,802,4.45,804,1.632,968,3.876,977,4.301,978,4.778,1051,4.049,1175,3.31,1270,4.564,1308,4.07,1314,3.31,1319,3.31,1534,5.851,1618,4.86,1718,5.233,1720,4.55,1727,4.86,1773,3.876,1774,5.06,1775,6.561,1776,5.77,1777,6.561,1778,5.249,1779,6.561,1780,6.561,1781,7.702,1782,5.06,1783,5.77,1784,5.06,1785,4.45,1786,6.561,1787,5.06,1788,6.561,1789,5.06,1790,6.774,1791,3.749,1792,5.06,1793,4.45,1794,4.45,1795,5.06,1796,6.561,1797,5.06,1798,5.06,1799,6.561,1800,5.06,1801,5.06,1802,5.06,1803,5.06,1804,5.06,1805,5.06,1806,7.28,1807,5.06,1808,5.06,1809,5.06,1810,6.561,1811,6.561,1812,2.99,1813,5.06,1814,5.06,1815,5.06,1816,5.06,1817,5.06,1818,5.06,1819,5.06,1820,5.06,1821,5.06,1822,5.06,1823,5.06,1824,6.561,1825,5.06,1826,5.06,1827,5.06,1828,5.06,1829,5.06,1830,7.499,1831,5.06,1832,5.06,1833,5.06,1834,5.06,1835,5.06,1836,5.06,1837,4.45,1838,5.06,1839,5.06,1840,3.749,1841,5.06,1842,4.45,1843,5.06]],["title/injectables/FieldControlService.html",[0,0.864,1844,3.28]],["body/injectables/FieldControlService.html",[0,1.523,2,0.172,3,0.159,4,0.08,7,0.333,8,0.639,10,2.227,13,3.121,14,2.206,15,3.529,16,0.544,18,0.856,19,0.011,20,0.532,21,0.483,22,0.798,28,0.745,30,0.459,31,0.38,39,2.274,43,1.381,44,1.692,45,0.755,46,0.734,47,0.159,48,0.153,51,2.356,52,2.899,53,3.639,63,0.008,64,0.008,82,0.662,83,1.384,98,2.137,101,1.783,106,1.392,107,1.574,111,0.995,112,0.782,119,1.024,125,1.263,126,1.167,129,0.912,143,0.807,144,0.939,145,0.939,160,1.051,318,2.082,345,0.919,384,0.919,401,1.402,459,1.023,626,1.841,627,2.623,628,2.962,654,2.726,797,3.432,798,4.198,804,2.166,894,3.114,968,3.1,977,4.376,978,4.844,1155,2.279,1172,2.356,1270,4.54,1534,5.726,1720,4.657,1773,4.613,1776,5.906,1778,5.373,1783,5.906,1785,4.615,1790,6.867,1791,3.887,1793,4.615,1794,4.615,1844,4.975,1845,5.247,1846,6.716,1847,6.716,1848,7.808,1849,6.716,1850,6.716,1851,6.716,1852,5.247,1853,5.487,1854,6.716,1855,6.716,1856,5.247,1857,5.247,1858,5.247,1859,5.247,1860,5.247,1861,6.716,1862,5.247,1863,6.716,1864,5.247,1865,6.716,1866,5.247,1867,5.247,1868,5.247,1869,3.639,1870,3.887,1871,5.247,1872,5.247,1873,5.247,1874,5.247,1875,5.247,1876,5.247,1877,5.247,1878,5.247,1879,5.247,1880,5.247,1881,5.247,1882,5.247,1883,5.247,1884,5.247,1885,5.247,1886,5.247]],["title/components/GenericGroupComponent.html",[65,0.134,230,0.935]],["body/components/GenericGroupComponent.html",[2,0.127,3,0.117,4,0.059,7,0.402,8,0.52,16,0.502,18,0.647,19,0.01,20,0.55,21,0.495,22,0.52,24,0.636,25,0.755,28,0.466,30,0.329,31,0.28,45,0.557,46,0.541,47,0.192,48,0.162,49,0.94,63,0.008,64,0.006,65,0.254,66,0.817,67,0.884,68,1.217,72,1.155,73,1.684,74,0.839,76,1.081,77,1.142,78,0.817,82,0.539,83,1.318,85,0.882,93,1.583,94,1.575,97,1.205,98,0.956,99,1.422,102,1.82,106,1.315,110,0.573,111,1.078,112,0.847,113,0.697,118,2.096,119,0.59,123,0.716,129,0.743,134,1.034,137,0.981,139,2.073,141,1.747,143,0.657,144,0.765,145,0.765,149,1.583,180,1.687,192,0.624,193,1.217,194,1.096,195,1.217,196,1.022,197,0.884,198,1.725,199,0.775,200,0.839,201,0.839,202,0.861,203,1.449,204,0.817,205,0.861,206,0.884,207,0.775,208,0.884,209,0.775,210,0.775,211,0.839,212,1.596,213,1.249,214,0.839,215,0.884,216,0.839,217,0.984,218,1.011,219,0.775,220,0.796,221,0.884,222,0.817,223,1.186,224,1.575,225,0.839,226,1.249,227,0.775,228,0.884,229,0.817,230,1.702,231,1.674,232,0.775,233,0.839,234,0.775,235,0.884,236,0.775,237,0.861,238,0.884,239,0.817,240,0.755,241,0.884,242,0.839,243,1.155,244,0.884,245,0.839,246,0.884,247,0.817,248,0.884,249,0.817,250,0.861,251,1.514,252,1.249,253,0.775,254,1.249,255,0.817,256,0.884,257,1.249,258,0.817,259,0.817,260,0.839,261,0.884,262,0.817,263,0.775,264,0.884,265,0.817,266,0.884,267,0.817,268,0.884,269,0.775,270,1.637,271,1.456,272,0.884,273,0.817,274,1.249,275,0.775,276,1.249,277,0.839,278,0.884,279,0.796,280,0.796,281,0.775,282,0.884,283,0.817,284,0.884,285,0.775,286,0.884,287,0.796,288,0.839,289,0.839,290,0.775,291,0.884,292,0.817,293,0.697,294,0.884,295,0.817,296,0.775,297,0.884,298,0.839,299,0.839,300,0.884,301,0.817,302,0.817,303,0.884,304,0.839,305,0.607,306,0.884,307,0.775,308,0.817,309,0.884,310,0.817,311,0.884,312,0.839,313,1.339,314,0.817,315,0.884,316,0.817,317,0.884,318,1.316,320,1.845,327,1.215,328,1.32,329,0.981,335,1.886,393,1.843,394,2.222,401,2.155,454,2.869,459,0.755,558,1.92,576,2.011,919,2.291,926,1.398,954,2.756,1016,2.228,1026,4.15,1137,4.294,1149,4.829,1151,3.794,1152,3.232,1153,3.232,1154,3.935,1155,2.376,1156,3.232,1158,2.011,1162,3.582,1163,2.635,1164,2.011,1165,1.935,1166,1.864,1167,2.011,1168,2.287,1169,1.935,1172,1.738,1178,2.401,1182,2.532,1329,2.842,1342,2.094,1343,2.094,1344,2.094,1345,2.094,1737,4.782,1812,4.074,1887,3.404,1888,4.811,1889,4.377,1890,7.4,1891,5.787,1892,5.58,1893,5.274,1894,6.451,1895,5.58,1896,6.614,1897,7.27,1898,7.091,1899,7.091,1900,7.606,1901,6.451,1902,7.091,1903,5.58,1904,5.58,1905,2.867,1906,2.867,1907,2.867,1908,2.867,1909,2.867,1910,2.867,1911,2.867,1912,3.871,1913,2.401]],["title/components/HiddenValueComponent.html",[65,0.134,232,0.887]],["body/components/HiddenValueComponent.html",[2,0.087,3,0.188,4,0.04,7,0.417,8,0.59,16,0.515,18,0.67,19,0.011,20,0.515,21,0.464,22,0.625,24,0.67,25,0.518,28,0.749,30,0.356,31,0.192,35,1.263,36,0.881,43,1.044,45,0.382,46,0.371,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.256,66,0.561,67,0.607,68,0.92,71,2.141,72,0.873,73,1.666,74,0.576,75,2.564,76,1.361,77,1.117,78,0.561,80,2.712,82,0.5,83,1.391,84,1.75,85,1.391,86,1.761,87,1.667,88,1.903,90,1.018,91,1.334,92,1.334,93,1.197,94,1.502,95,1.469,96,1.75,97,1.385,98,1.254,99,1.17,100,1.469,101,1.16,102,1.89,103,1.018,104,1.165,105,1.018,106,0.95,107,1.19,108,1.018,109,1.018,110,1.08,111,0.849,112,0.799,113,1.366,114,1.018,115,1.018,119,0.63,121,1.263,122,1.551,123,1.059,124,0.932,125,1.582,126,1.463,127,1.263,128,1.263,129,1.012,130,0.857,131,0.932,132,1.703,133,1.105,134,0.71,135,0.932,136,1.229,137,1.049,138,0.932,139,1.574,140,0.932,141,1.425,142,1.254,143,0.61,144,0.71,145,0.71,146,0.932,147,1.197,148,2.096,149,1.797,150,1.105,153,0.932,154,1.431,155,0.932,156,0.932,157,1.572,158,0.932,160,1.017,161,1.684,162,0.857,180,1.117,192,0.428,193,0.92,194,0.828,195,0.92,196,1.08,197,0.607,198,1.502,199,0.828,200,0.896,201,0.576,202,0.591,203,1.16,204,0.561,205,0.591,206,0.607,207,0.828,208,0.607,209,0.828,210,1.017,211,0.576,212,1.411,213,0.944,214,0.576,215,0.607,216,0.576,217,0.744,218,0.939,219,0.828,220,0.85,221,0.607,222,0.561,223,0.896,224,1.309,225,0.576,226,0.944,227,1.017,228,0.607,229,0.561,230,0.561,231,0.561,232,1.147,233,1.1,234,0.828,235,0.607,236,0.828,237,0.591,238,0.607,239,0.561,240,0.518,241,0.607,242,0.576,243,0.873,244,0.607,245,0.576,246,0.607,247,0.561,248,0.607,249,0.561,250,0.591,251,1.183,252,0.944,253,0.828,254,0.944,255,0.561,256,0.607,257,0.944,258,0.561,259,0.561,260,0.576,261,0.607,262,0.561,263,0.532,264,0.607,265,0.561,266,0.607,267,0.561,268,0.607,269,0.532,270,1.242,271,0.561,272,0.607,273,0.561,274,0.944,275,0.532,276,0.944,277,0.576,278,0.607,279,0.85,280,1.352,281,1.017,282,0.607,283,0.561,284,0.607,285,0.828,286,0.607,287,0.85,288,1.425,289,0.896,290,0.828,291,0.607,292,0.561,293,0.914,294,0.607,295,0.561,296,0.828,297,0.607,298,0.576,299,0.576,300,0.607,301,0.561,302,0.561,303,0.607,304,0.576,305,0.417,306,0.607,307,0.532,308,0.561,309,0.607,310,0.561,311,0.607,312,0.576,313,1.072,314,0.561,315,0.607,316,0.561,317,0.607,318,0.995,319,1.154,320,2.026,321,1.154,324,1.739,327,0.834,328,0.906,329,0.674,330,1.796,331,1.154,332,1.888,333,2.205,334,2.205,335,1.509,336,2.195,337,2.205,338,2.489,339,1.154,340,1.796,341,1.796,342,1.117,343,1.117,344,0.959,345,0.465,346,0.828,347,0.639,348,1.117,349,2.011,350,1.154,351,2.856,352,1.796,353,1.018,354,1.739,355,1.493,356,0.857,357,1.154,358,1.154,359,1.154,360,1.154,361,1.154,362,1.796,363,1.154,364,0.906,365,1.154,366,1.154,367,1.154,368,1.049,369,1.018,370,1.018,371,0.932,372,1.154,373,1.154,374,1.154,375,1.154,376,1.796,377,1.154,378,1.154,379,1.154,380,1.154,381,2.135,382,1.684,383,1.154,384,1.152,385,1.945,386,1.154,387,2.005,388,0.881,389,2.068,390,1.154,391,1.782,392,2.205,393,1.357,394,1.551,395,1.154,396,1.154,397,1.154,398,1.154,399,1.154,400,1.154,401,1.105,402,1.154,403,1.796,404,1.796,405,1.154,406,1.154,407,1.154,408,1.154,409,1.154,410,1.154,411,1.117,412,1.451,413,1.154,414,1.154,415,1.154,416,1.796,417,1.154,418,1.154,419,1.154,420,1.584,421,1.739,422,1.493,423,2.409,424,2.205,425,1.154,426,1.154,427,1.796,428,1.796,429,1.154,430,2.886,431,1.796,432,1.154,433,1.154,434,1.154,435,1.154,436,2.205,437,1.154,438,1.154,439,1.154,440,1.154,441,1.154,442,1.154,443,0.959,444,0.988,445,1.154,446,1.451,447,1.796,448,0.988,449,0.988,450,1.154,451,0.932,452,1.082,453,1.117,454,0.906,455,1.082,456,2.205,457,1.796,458,1.154,459,0.518,460,0.988,461,1.117,462,0.906,463,0.959,464,1.117,465,0.674,466,1.684,467,1.796,468,1.154,469,1.154,470,1.154,471,1.154,472,1.154,473,1.154,474,1.154,475,2.205,476,1.154,477,1.154,478,1.154,479,1.154,480,1.796,481,1.154,482,1.154,483,1.451,484,1.154,485,1.082,486,1.154,487,1.154,488,1.082,489,1.154,490,1.154,491,1.154,492,1.796,493,1.796,494,0.729,495,1.154,496,1.117,497,1.117,498,1.049,499,1.117,500,1.154,501,1.117,502,1.154,503,1.154,504,1.154,505,1.154,506,1.154,507,1.154,508,1.154,509,1.154,510,1.796,511,1.796,512,1.796,513,1.796,514,1.796,515,1.739,516,1.165,517,1.154,518,1.049,519,1.796,520,1.154,521,0.881,522,1.018,523,1.796,524,1.154,525,1.154,526,1.154,527,2.205,528,1.154,529,1.154,530,1.154,531,1.154,532,1.154,533,1.154,534,1.154,535,1.154,536,1.117,537,1.154,538,1.117,539,1.154,540,1.154,541,1.154,542,1.154,543,1.154,544,0.988,545,1.154,546,1.154,547,1.018,548,1.154,549,1.154,550,1.154,551,1.018,552,0.749,553,1.154,554,1.154,555,1.154,556,1.154,557,1.154,558,0.932,1914,4.135,1915,2.657]],["title/components/HtmlRawComponent.html",[65,0.134,234,0.887]],["body/components/HtmlRawComponent.html",[2,0.087,3,0.154,4,0.041,7,0.417,8,0.591,16,0.515,18,0.634,19,0.011,20,0.511,21,0.464,22,0.591,24,0.661,25,0.52,28,0.748,30,0.356,31,0.193,35,1.267,36,0.884,43,1.047,45,0.384,46,0.373,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.256,66,0.563,67,0.609,68,0.923,71,2.142,72,0.876,73,1.666,74,0.578,75,2.567,76,1.363,77,1.119,78,0.563,80,2.715,82,0.501,83,1.398,84,1.753,85,1.392,86,1.763,87,1.67,88,1.906,90,1.022,91,1.338,92,1.338,93,1.2,94,1.504,95,1.473,96,1.753,97,1.386,98,1.257,99,1.172,100,1.473,101,1.162,102,1.891,103,1.022,104,1.169,105,1.022,106,0.952,107,1.193,108,1.022,109,1.022,110,1.082,111,0.851,112,0.766,113,1.368,114,1.022,115,1.022,119,0.407,121,1.267,122,1.554,123,1.062,124,0.936,125,1.585,126,1.465,127,1.267,128,1.267,129,1.013,130,0.86,131,0.936,132,1.707,133,1.109,134,0.713,135,0.936,136,1.233,137,1.052,138,0.936,139,1.577,140,0.936,141,1.427,142,1.257,143,0.611,144,0.712,145,0.712,146,0.936,147,1.2,148,2.099,149,1.8,150,1.109,153,0.936,154,1.434,155,0.936,156,0.936,157,1.576,158,0.936,160,1.019,161,1.69,162,0.86,180,1.12,192,0.43,193,0.923,194,0.831,195,0.923,196,1.082,197,0.609,198,1.504,199,0.831,200,0.899,201,0.578,202,0.593,203,1.162,204,0.563,205,0.593,206,0.609,207,0.831,208,0.609,209,0.831,210,1.019,211,0.578,212,1.413,213,0.947,214,0.578,215,0.609,216,0.578,217,0.746,218,0.941,219,0.831,220,0.853,221,0.609,222,0.563,223,0.899,224,1.311,225,0.578,226,0.947,227,1.019,228,0.609,229,0.563,230,0.563,231,0.563,232,0.831,233,0.899,234,1.15,235,0.609,236,0.831,237,0.593,238,0.609,239,0.563,240,0.52,241,0.609,242,0.578,243,0.876,244,0.609,245,0.578,246,0.609,247,0.563,248,0.609,249,0.563,250,0.593,251,1.185,252,0.947,253,0.831,254,0.947,255,0.563,256,0.609,257,0.947,258,0.563,259,0.563,260,0.578,261,0.609,262,0.563,263,0.534,264,0.609,265,0.563,266,0.609,267,0.563,268,0.609,269,0.534,270,1.244,271,0.563,272,0.609,273,0.563,274,0.947,275,0.534,276,0.947,277,0.578,278,0.609,279,0.853,280,1.354,281,1.019,282,0.609,283,0.563,284,0.609,285,0.831,286,0.609,287,0.853,288,1.427,289,0.899,290,0.831,291,0.609,292,0.563,293,0.916,294,0.609,295,0.563,296,0.831,297,0.609,298,0.578,299,0.578,300,0.609,301,0.563,302,0.563,303,0.609,304,0.578,305,0.418,306,0.609,307,0.534,308,0.563,309,0.609,310,0.563,311,0.609,312,0.578,313,1.075,314,0.563,315,0.609,316,0.563,317,0.609,318,0.998,319,1.158,320,2.027,321,1.158,324,1.744,327,0.837,328,0.91,329,0.676,330,1.802,331,1.158,332,1.893,333,2.211,334,2.86,335,1.513,336,2.2,337,2.211,338,2.494,339,1.158,340,1.802,341,1.802,342,1.121,343,1.121,344,0.963,345,0.467,346,0.831,347,0.642,348,1.121,349,2.015,350,1.158,351,2.86,352,1.802,353,1.022,354,1.744,355,1.498,356,0.86,357,1.158,358,1.158,359,1.158,360,1.158,361,1.158,362,1.802,363,1.158,364,0.91,365,1.158,366,1.158,367,1.158,368,1.053,369,1.022,370,1.022,371,0.936,372,1.158,373,1.158,374,1.158,375,1.158,376,1.802,377,1.158,378,1.158,379,1.158,380,1.158,381,2.14,382,1.69,383,1.158,384,1.153,385,1.95,386,1.158,387,2.01,388,0.884,389,2.073,390,1.158,391,1.786,392,2.211,393,1.36,394,1.554,395,1.158,396,1.158,397,1.158,398,1.158,399,1.158,400,1.158,401,1.109,402,1.158,403,1.802,404,1.802,405,1.158,406,1.158,407,1.158,408,1.158,409,1.158,410,1.158,411,1.121,412,1.455,413,1.158,414,1.158,415,1.158,416,1.802,417,1.158,418,1.158,419,1.158,420,1.589,421,1.744,422,1.498,423,2.414,424,2.211,425,1.158,426,1.158,427,1.802,428,1.802,429,1.158,430,2.89,431,1.802,432,1.158,433,1.158,434,1.158,435,1.158,436,2.211,437,1.158,438,1.158,439,1.158,440,1.158,441,1.158,442,1.158,443,0.963,444,0.992,445,1.158,446,1.455,447,1.802,448,0.992,449,0.992,450,1.158,451,0.936,452,1.086,453,1.121,454,0.91,455,1.086,456,2.211,457,1.802,458,1.158,459,0.52,460,0.992,461,1.121,462,0.91,463,0.963,464,1.121,465,0.676,466,1.69,467,1.802,468,1.158,469,1.158,470,1.158,471,1.158,472,1.158,473,1.158,474,1.158,475,2.211,476,1.158,477,1.158,478,1.158,479,1.158,480,1.802,481,1.158,482,1.158,483,1.455,484,1.158,485,1.086,486,1.158,487,1.158,488,1.086,489,1.158,490,1.158,491,1.158,492,1.802,493,1.802,494,0.732,495,1.158,496,1.121,497,1.121,498,1.053,499,1.121,500,1.158,501,1.121,502,1.158,503,1.158,504,1.158,505,1.158,506,1.158,507,1.158,508,1.158,509,1.158,510,1.802,511,1.802,512,1.802,513,1.802,514,1.802,515,1.744,516,1.169,517,1.158,518,1.053,519,1.158,520,1.158,521,0.884,522,1.022,523,1.802,524,1.158,525,1.158,526,1.158,527,2.211,528,1.158,529,1.158,530,1.158,531,1.158,532,1.158,533,1.158,534,1.158,535,1.158,536,1.121,537,1.158,538,1.121,539,1.158,540,1.158,541,1.158,542,1.158,543,1.158,544,0.992,545,1.158,546,1.158,547,1.022,548,1.158,549,1.158,550,1.158,551,1.022,552,0.752,553,1.158,554,1.158,555,1.158,556,1.158,557,1.158,558,0.936,1916,2.667]],["title/components/LinkValueComponent.html",[65,0.134,236,0.887]],["body/components/LinkValueComponent.html",[2,0.087,3,0.154,4,0.041,7,0.417,8,0.591,16,0.515,18,0.634,19,0.011,20,0.511,21,0.46,22,0.591,24,0.66,25,0.519,28,0.749,30,0.356,31,0.193,35,1.265,36,0.883,43,1.046,45,0.383,46,0.372,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.256,66,0.562,67,0.608,68,0.922,71,2.141,72,0.875,73,1.666,74,0.577,75,2.566,76,1.362,77,1.119,78,0.562,80,2.825,82,0.501,83,1.388,84,1.752,85,1.392,86,1.762,87,1.669,88,1.905,90,1.02,91,1.336,92,1.336,93,1.199,94,1.503,95,1.472,96,1.752,97,1.386,98,1.256,99,1.171,100,1.472,101,1.161,102,1.891,103,1.02,104,1.167,105,1.02,106,0.951,107,1.192,108,1.02,109,1.02,110,1.105,111,0.85,112,0.8,113,1.367,114,1.02,115,1.02,119,0.406,121,1.265,122,1.553,123,1.061,124,0.935,125,1.584,126,1.464,127,1.265,128,1.265,129,1.013,130,0.859,131,0.935,132,1.705,133,1.107,134,0.712,135,0.935,136,1.232,137,1.051,138,0.935,139,1.576,140,0.935,141,1.426,142,1.256,143,0.611,144,0.711,145,0.711,146,0.935,147,1.199,148,2.098,149,1.799,150,1.107,153,0.935,154,1.433,155,0.935,156,0.935,157,1.574,158,0.935,160,1.018,161,1.688,162,0.859,180,1.119,192,0.429,193,0.922,194,0.83,195,0.922,196,1.081,197,0.608,198,1.503,199,0.83,200,0.898,201,0.577,202,0.593,203,1.161,204,0.562,205,0.593,206,0.608,207,0.83,208,0.608,209,0.83,210,1.018,211,0.577,212,1.413,213,0.946,214,0.577,215,0.608,216,0.577,217,0.746,218,0.94,219,0.83,220,0.852,221,0.608,222,0.562,223,0.898,224,1.31,225,0.577,226,0.946,227,1.018,228,0.608,229,0.562,230,0.562,231,0.562,232,0.83,233,0.898,234,0.83,235,0.608,236,1.149,237,0.922,238,0.608,239,0.562,240,0.519,241,0.608,242,0.577,243,0.875,244,0.608,245,0.577,246,0.608,247,0.562,248,0.608,249,0.562,250,0.593,251,1.184,252,0.946,253,0.83,254,0.946,255,0.562,256,0.608,257,0.946,258,0.562,259,0.562,260,0.577,261,0.608,262,0.562,263,0.533,264,0.608,265,0.562,266,0.608,267,0.562,268,0.608,269,0.533,270,1.243,271,0.562,272,0.608,273,0.562,274,0.946,275,0.533,276,0.946,277,0.577,278,0.608,279,0.852,280,1.353,281,1.018,282,0.608,283,0.562,284,0.608,285,0.83,286,0.608,287,0.852,288,1.426,289,0.898,290,0.83,291,0.608,292,0.562,293,0.915,294,0.608,295,0.562,296,0.83,297,0.608,298,0.577,299,0.577,300,0.608,301,0.562,302,0.562,303,0.608,304,0.577,305,0.418,306,0.608,307,0.533,308,0.562,309,0.608,310,0.562,311,0.608,312,0.577,313,1.074,314,0.562,315,0.608,316,0.562,317,0.608,318,0.997,319,1.157,320,2.061,321,1.157,324,1.742,327,0.836,328,0.908,329,0.675,330,1.8,331,1.157,332,1.891,333,2.209,334,2.209,335,1.512,336,2.198,337,2.209,338,2.492,339,1.157,340,1.8,341,1.8,342,1.12,343,1.12,344,0.962,345,0.466,346,0.83,347,0.641,348,1.12,349,2.013,350,1.157,351,2.859,352,1.8,353,1.02,354,1.742,355,1.496,356,0.859,357,1.157,358,1.157,359,1.157,360,1.157,361,1.157,362,1.8,363,1.157,364,0.908,365,1.157,366,1.157,367,1.157,368,1.052,369,1.02,370,1.02,371,0.935,372,1.157,373,1.157,374,1.157,375,1.157,376,1.8,377,1.157,378,1.157,379,1.157,380,1.157,381,2.138,382,1.688,383,1.157,384,1.153,385,1.948,386,1.157,387,2.008,388,0.883,389,2.071,390,1.157,391,1.784,392,2.209,393,1.359,394,1.553,395,1.157,396,1.157,397,1.157,398,1.157,399,1.157,400,1.157,401,1.107,402,1.157,403,1.8,404,1.8,405,1.157,406,1.157,407,1.157,408,1.157,409,1.157,410,1.157,411,1.12,412,1.454,413,1.157,414,1.157,415,1.157,416,1.8,417,1.157,418,1.157,419,1.157,420,1.587,421,1.742,422,1.496,423,2.412,424,2.209,425,1.157,426,1.157,427,1.8,428,1.8,429,1.157,430,2.889,431,1.8,432,1.157,433,1.157,434,1.157,435,1.157,436,2.209,437,1.157,438,1.157,439,1.157,440,1.157,441,1.157,442,1.157,443,0.962,444,0.99,445,1.157,446,1.454,447,1.8,448,0.99,449,0.99,450,1.157,451,0.935,452,1.085,453,1.12,454,0.908,455,1.085,456,2.209,457,1.8,458,1.157,459,0.519,460,0.99,461,1.12,462,0.908,463,0.962,464,1.12,465,0.675,466,1.688,467,1.8,468,1.157,469,1.157,470,1.157,471,1.157,472,1.157,473,1.157,474,1.157,475,2.209,476,1.157,477,1.157,478,1.157,479,1.157,480,1.8,481,1.157,482,1.157,483,1.454,484,1.157,485,1.085,486,1.157,487,1.157,488,1.085,489,1.157,490,1.157,491,1.157,492,1.8,493,1.8,494,0.731,495,1.157,496,1.12,497,1.12,498,1.052,499,1.12,500,1.157,501,1.12,502,1.157,503,1.157,504,1.157,505,1.157,506,1.157,507,1.157,508,1.157,509,1.157,510,1.8,511,1.8,512,1.8,513,1.8,514,1.8,515,1.742,516,1.167,517,2.492,518,1.052,519,1.157,520,1.157,521,0.883,522,1.02,523,1.8,524,1.157,525,1.157,526,1.157,527,2.209,528,1.157,529,1.157,530,1.157,531,1.157,532,1.157,533,1.157,534,1.157,535,1.157,536,1.12,537,1.157,538,1.12,539,1.157,540,1.157,541,1.157,542,1.157,543,1.157,544,0.99,545,1.157,546,1.157,547,1.02,548,1.157,549,1.157,550,1.157,551,1.02,552,0.75,553,1.157,554,1.157,555,1.157,556,1.157,557,1.157,558,0.935,1917,2.663]],["title/classes/LoadableComponent.html",[48,0.084,1407,3.071]],["body/classes/LoadableComponent.html",[2,0.175,3,0.162,4,0.081,7,0.339,8,0.646,10,2.478,14,2.248,15,3.649,16,0.559,18,0.802,19,0.011,20,0.498,21,0.485,22,0.748,24,0.644,28,0.754,30,0.352,39,1.915,45,0.77,46,0.748,47,0.162,48,0.149,63,0.008,64,0.008,82,0.67,85,1.205,87,1.895,110,1.276,111,1.007,112,0.791,119,1.265,141,1.159,143,0.817,144,0.95,145,0.95,147,1.967,180,1.583,196,0.792,346,1.071,347,1.798,384,1.309,449,2.528,459,1.043,536,2.248,538,2.858,650,3.019,763,5.036,789,4.415,813,5.036,1016,3.044,1407,4.714,1423,6.292,1424,6.292,1425,5.825,1429,6.292,1430,5.439,1431,6.292,1432,5.036,1433,5.439,1434,6.292,1435,5.825,1447,5.439,1448,6.292,1451,5.439,1453,5.439,1457,5.439,1459,4.279,1493,4.279,1830,4.704,1842,6.572,1918,5.348,1919,6.798,1920,5.348,1921,5.348,1922,5.348,1923,5.348,1924,5.348,1925,5.348,1926,5.348,1927,5.348,1928,5.348,1929,5.348,1930,5.348,1931,7.863,1932,6.798,1933,5.348,1934,6.572,1935,5.348,1936,5.348,1937,5.348,1938,5.348,1939,5.348,1940,5.348,1941,5.348,1942,4.704,1943,5.348,1944,5.348,1945,5.348,1946,5.348,1947,5.348,1948,5.348,1949,5.348,1950,6.798,1951,5.348,1952,5.348,1953,5.348,1954,5.348,1955,5.348,1956,5.348,1957,5.348,1958,5.348,1959,5.348,1960,5.348]],["title/components/LocalAuthComponent.html",[65,0.134,239,0.935]],["body/components/LocalAuthComponent.html",[0,1.302,2,0.14,3,0.129,4,0.065,7,0.27,8,0.556,10,1.938,14,2.457,15,3.592,16,0.554,18,0.813,19,0.01,20,0.514,21,0.488,22,0.74,24,0.617,25,0.83,28,0.716,30,0.413,31,0.308,39,1.199,43,0.875,47,0.177,48,0.081,49,0.866,52,2.277,63,0.007,64,0.007,65,0.241,66,0.898,67,0.972,68,1.3,72,1.234,73,1.69,74,0.922,76,0.725,77,1.201,78,0.898,82,0.576,85,0.942,87,1.079,99,1.225,102,1.989,106,0.706,107,1.685,110,1.235,111,0.866,112,0.68,113,0.766,118,1.63,119,1.237,126,0.947,143,0.702,144,0.817,145,0.817,162,1.373,180,1.14,192,0.686,193,1.3,194,1.17,195,1.3,196,1.065,197,0.972,198,1.777,199,0.852,200,0.922,201,0.922,202,0.947,203,1.524,204,0.898,205,0.947,206,0.972,207,0.852,208,0.972,209,0.852,210,0.852,211,0.922,212,1.639,213,1.335,214,0.922,215,0.972,216,0.922,217,1.052,218,1.08,219,0.852,220,0.875,221,0.972,222,0.898,223,1.267,224,1.641,225,0.922,226,1.335,227,0.852,228,0.972,229,0.898,230,0.898,231,0.898,232,0.852,233,0.922,234,0.852,235,0.972,236,0.852,237,0.947,238,0.972,239,1.517,240,1.554,241,0.972,242,0.922,243,1.234,244,0.972,245,0.922,246,0.972,247,0.898,248,0.972,249,0.898,250,0.947,251,1.201,252,1.335,253,0.852,254,1.335,255,0.898,256,0.972,257,1.335,258,0.898,259,0.898,260,0.922,261,0.972,262,0.898,263,0.852,264,0.972,265,0.898,266,0.972,267,0.898,268,0.972,269,0.852,270,1.557,271,0.898,272,0.972,273,0.898,274,1.335,275,0.852,276,1.335,277,0.922,278,0.972,279,0.875,280,0.875,281,0.852,282,0.972,283,0.898,284,0.972,285,0.852,286,0.972,287,0.875,288,0.922,289,0.922,290,0.852,291,0.972,292,0.898,293,0.766,294,0.972,295,0.898,296,0.852,297,0.972,298,0.922,299,0.922,300,0.972,301,0.898,302,0.898,303,0.972,304,0.922,305,0.667,306,0.972,307,0.852,308,0.898,309,0.972,310,0.898,311,0.972,312,0.922,313,1.409,314,0.898,315,0.972,316,0.898,317,0.972,345,0.745,422,1.537,459,0.83,463,1.537,464,1.789,565,1.848,626,1.493,687,3.162,763,4.33,789,3.453,795,4.053,860,1.993,872,1.978,1008,3.405,1016,1.734,1230,3.625,1407,5.991,1408,5.14,1409,5.14,1423,5.341,1424,5.341,1425,4.945,1429,5.341,1430,4.676,1431,5.341,1432,4.33,1433,4.676,1434,5.341,1435,4.945,1446,3.743,1447,3.405,1448,4.676,1449,3.743,1450,3.743,1451,3.405,1452,3.743,1453,3.405,1454,3.743,1455,3.743,1456,3.743,1457,3.405,1458,3.743,1459,3.405,1468,3.743,1469,3.743,1470,3.743,1471,3.743,1472,3.405,1473,3.405,1484,3.743,1485,3.743,1493,3.405,1961,4.256,1962,4.676,1963,5.14,1964,5.845,1965,7.186,1966,7.781,1967,7.186,1968,5.845,1969,4.256,1970,4.7,1971,6.675,1972,6.32,1973,3.768,1974,5.845,1975,5.845,1976,4.256,1977,4.256,1978,4.256,1979,4.256,1980,4.256,1981,3.743,1982,2.514,1983,3.405,1984,4.256,1985,4.256,1986,4.256,1987,4.256,1988,4.256,1989,4.256,1990,3.036,1991,3.3,1992,4.256,1993,7.531,1994,5.845,1995,5.14,1996,5.845,1997,4.256,1998,3.743,1999,4.256,2000,4.256,2001,4.256,2002,4.256,2003,4.256,2004,4.256,2005,4.256,2006,4.256,2007,6.675,2008,4.256,2009,4.256,2010,4.053,2011,5.845,2012,5.845]],["title/modules/LocalAuthModule.html",[856,1.39,2013,3.28]],["body/modules/LocalAuthModule.html",[2,0.213,3,0.196,4,0.099,19,0.01,30,0.461,31,0.47,32,2.036,47,0.231,48,0.123,63,0.009,64,0.009,192,1.046,239,1.899,345,1.136,346,1.63,347,1.561,565,2.817,856,2.401,858,2.727,859,3.315,860,2.61,865,3.903,866,3.556,867,3.015,868,2.817,870,3.824,871,3.824,872,3.015,873,3.824,875,3.975,880,3.37,2013,6.588,2014,5.705,2015,5.705,2016,6.487,2017,5.705,2018,6.487,2019,6.487]],["title/classes/LoginResult.html",[48,0.084,1982,2.616]],["body/classes/LoginResult.html",[2,0.213,3,0.196,4,0.099,7,0.411,16,0.533,19,0.01,20,0.485,21,0.493,24,0.746,47,0.254,48,0.163,63,0.009,64,0.009,82,0.754,110,0.962,133,1.735,305,1.401,483,2.278,661,4.842,919,3.037,1982,4.523,1990,3.373,1991,3.665,2020,6.354,2021,3.836,2022,6.44,2023,6.493,2024,6.493,2025,6.493,2026,6.493,2027,3.127,2028,3.784,2029,4.027]],["title/modules/ManageRolesModule.html",[856,1.39,2030,3.28]],["body/modules/ManageRolesModule.html",[2,0.212,3,0.196,4,0.099,19,0.01,30,0.46,31,0.469,32,2.032,47,0.231,48,0.123,63,0.009,64,0.009,192,1.044,242,1.95,345,1.134,346,1.629,347,1.558,565,2.813,856,2.399,858,2.723,859,3.313,860,2.607,865,3.902,866,3.553,867,3.01,868,2.813,870,3.82,871,3.82,872,3.01,873,3.82,874,3.971,875,3.971,880,3.364,2030,6.587,2031,5.695,2032,5.695,2033,6.476,2034,5.695,2035,6.476,2036,6.476]],["title/modules/ManageUsersModule.html",[856,1.39,2037,3.28]],["body/modules/ManageUsersModule.html",[2,0.211,3,0.194,4,0.098,19,0.01,30,0.462,31,0.466,32,2.02,47,0.23,48,0.122,63,0.009,64,0.009,192,1.038,245,1.948,345,1.127,346,1.625,347,1.549,565,2.796,856,2.39,858,2.706,859,3.415,860,2.598,865,3.896,866,3.54,867,2.992,868,2.796,870,3.807,871,3.807,872,2.992,873,3.807,874,3.957,875,3.957,879,3.217,880,3.344,2037,6.581,2038,5.661,2039,5.661,2040,6.437,2041,5.661,2042,6.437,2043,5.661,2044,6.437,2045,5.661]],["title/components/MapComponent.html",[65,0.134,247,0.935]],["body/components/MapComponent.html",[0,0.562,2,0.095,3,0.087,4,0.044,7,0.379,8,0.508,16,0.526,18,0.61,19,0.011,20,0.514,21,0.467,22,0.765,24,0.624,25,0.562,28,0.702,30,0.387,31,0.209,43,0.906,44,0.93,45,0.415,46,0.403,47,0.161,48,0.122,49,0.792,63,0.005,64,0.005,65,0.234,66,0.609,67,0.658,68,0.98,71,2.061,72,0.93,73,1.661,74,0.625,76,0.751,77,0.962,78,0.609,82,0.589,83,1.329,84,1.632,85,1.25,86,1.741,87,1.723,88,1.731,91,1.421,92,1.421,93,1.274,94,1.472,95,1.547,96,1.632,97,1.015,98,1.088,99,1.02,100,1.274,101,1.221,102,1.918,103,1.104,104,2.322,105,1.104,106,0.73,107,1.032,108,1.104,109,1.104,110,1.047,111,1.047,112,0.75,113,1.372,114,1.104,115,1.104,119,0.671,121,0.88,122,1.345,123,0.814,124,1.012,125,1.286,126,1.189,127,0.88,128,0.88,129,0.922,130,0.93,131,1.012,132,1.309,133,0.77,134,0.77,135,1.012,136,0.857,137,0.731,138,1.012,139,1.792,140,1.012,141,1.158,142,1.088,143,0.529,144,0.403,145,0.403,146,1.012,147,0.834,148,1.345,149,2.109,150,0.77,153,1.012,154,0.812,155,1.012,156,1.012,157,0.791,158,1.012,159,1.072,160,0.577,163,1.34,164,1.788,168,0.983,170,1.072,179,1.627,180,1.257,182,1.886,192,0.465,193,0.98,194,1.198,195,0.98,196,1.107,197,0.658,198,1.552,199,0.577,200,0.625,201,0.625,202,0.641,203,1.221,204,0.609,205,0.641,206,0.658,207,0.577,208,0.658,209,0.577,210,0.577,211,0.625,212,1.536,213,1.006,214,0.625,215,0.658,216,0.625,217,0.793,218,0.814,219,0.577,220,0.593,221,0.658,222,0.609,223,0.955,224,1.366,225,0.625,226,1.006,227,0.577,228,0.658,229,0.609,230,0.609,231,0.93,232,0.577,233,0.625,234,0.577,235,0.658,236,0.577,237,0.641,238,0.658,239,0.609,240,0.562,241,0.658,242,0.625,243,0.93,244,0.658,245,0.625,246,0.658,247,1.434,248,0.658,249,0.609,250,0.641,251,1.272,252,1.006,253,0.577,254,1.006,255,0.609,256,0.658,257,1.006,258,0.609,259,0.609,260,0.625,261,0.658,262,0.609,263,0.577,264,0.658,265,0.609,266,0.658,267,0.609,268,0.658,269,0.577,270,1.297,271,0.609,272,0.658,273,0.609,274,1.006,275,0.577,276,1.006,277,0.625,278,0.658,279,0.593,280,0.593,281,0.577,282,0.658,283,0.609,284,0.658,285,0.577,286,0.658,287,0.593,288,1.473,289,0.625,290,0.577,291,0.658,292,0.609,293,0.519,294,0.658,295,0.609,296,0.577,297,0.658,298,0.625,299,0.625,300,0.658,301,0.609,302,0.609,303,0.658,304,0.625,305,0.452,306,0.658,307,0.577,308,0.609,309,0.658,310,0.609,311,0.658,312,0.625,313,1.128,314,0.609,315,0.658,316,0.609,317,0.658,318,1.44,320,1.117,329,0.731,345,0.505,346,1.198,347,0.694,356,0.93,384,0.771,423,2.515,430,2.857,443,1.591,451,2.261,453,1.852,454,1.502,459,1.042,461,1.852,462,0.983,465,1.634,496,1.212,497,1.212,498,2.11,499,1.212,516,0.812,521,1.984,544,1.072,614,1.703,616,2.201,626,1.875,637,2.047,671,2.535,687,2.382,804,1.421,832,2.121,858,2.515,866,2.996,894,2.515,919,1.041,926,1.041,994,3.054,1026,4.215,1028,1.886,1065,2.382,1102,2.288,1111,3.535,1112,3.913,1165,1.441,1166,2.121,1227,2.288,1338,1.627,1339,2.486,1482,2.535,1608,2.136,1632,2.136,1680,1.999,1760,3.378,1812,2.602,1973,3.017,2046,2.883,2047,4.404,2048,2.732,2049,6.795,2050,4.404,2051,4.404,2052,4.404,2053,7.069,2054,4.404,2055,5.983,2056,5.976,2057,6.445,2058,3.873,2059,6.445,2060,4.404,2061,4.404,2062,3.524,2063,3.524,2064,5.262,2065,3.711,2066,5.977,2067,3.873,2068,4.404,2069,4.404,2070,2.881,2071,4.404,2072,4.404,2073,3.535,2074,7.751,2075,4.432,2076,6.445,2077,4.404,2078,4.404,2079,4.404,2080,4.7,2081,4.404,2082,5.344,2083,5.344,2084,5.344,2085,5.437,2086,4.404,2087,5.983,2088,4.404,2089,4.404,2090,4.404,2091,4.404,2092,5.983,2093,2.883,2094,2.883,2095,6.795,2096,2.883,2097,2.535,2098,2.535,2099,2.883,2100,2.883,2101,2.883,2102,2.883,2103,2.883,2104,2.883,2105,2.883,2106,2.883,2107,4.404,2108,4.404,2109,4.404,2110,4.404,2111,4.404,2112,4.404,2113,4.404,2114,2.883,2115,2.883,2116,2.883,2117,2.883,2118,5.344,2119,2.883,2120,2.883,2121,2.883,2122,2.883,2123,2.883,2124,2.883,2125,2.883,2126,4.404,2127,2.883,2128,2.535,2129,2.883,2130,4.404,2131,2.883,2132,2.883,2133,2.883,2134,2.883,2135,2.883,2136,2.883,2137,2.883,2138,4.404,2139,2.883,2140,2.883,2141,4.404,2142,2.883,2143,2.883,2144,4.404,2145,2.883,2146,2.883,2147,2.883,2148,4.404,2149,2.883,2150,3.873,2151,4.404,2152,3.873,2153,2.883,2154,2.883,2155,5.344,2156,2.883,2157,2.883,2158,2.883,2159,4.404,2160,2.883,2161,7.069,2162,2.883,2163,2.883,2164,2.883,2165,2.883,2166,2.883,2167,2.883,2168,4.404,2169,4.404,2170,4.404,2171,2.883,2172,2.535,2173,2.883,2174,2.535,2175,4.404,2176,4.404,2177,4.404,2178,2.883,2179,2.883,2180,2.883,2181,2.883,2182,2.883,2183,4.404,2184,2.883,2185,4.404,2186,2.307,2187,1.999,2188,4.404,2189,2.883,2190,2.883,2191,6.445,2192,2.883,2193,5.344,2194,5.983,2195,6.445,2196,6.445,2197,5.344,2198,2.883,2199,4.404,2200,4.404,2201,2.883,2202,2.883,2203,4.404,2204,4.404,2205,4.404,2206,2.883,2207,2.883,2208,2.883,2209,2.883,2210,2.883,2211,2.883,2212,2.883,2213,2.883,2214,2.883,2215,2.883,2216,2.883,2217,2.883,2218,2.883,2219,5.344,2220,2.602,2221,5.983,2222,2.883,2223,2.883,2224,1.999,2225,2.883,2226,2.883,2227,2.883,2228,4.404,2229,4.404,2230,5.344,2231,2.883,2232,2.883,2233,2.883,2234,2.883,2235,3.873,2236,2.535,2237,2.307,2238,2.535,2239,4.404,2240,2.535,2241,2.883,2242,2.883,2243,2.883,2244,2.883,2245,2.883,2246,5.262,2247,5.983]],["title/components/MarkdownTextAreaComponent.html",[65,0.134,249,0.935]],["body/components/MarkdownTextAreaComponent.html",[2,0.136,3,0.126,4,0.063,7,0.418,8,0.547,16,0.519,18,0.672,19,0.011,20,0.451,21,0.471,22,0.547,24,0.661,25,0.811,28,0.561,30,0.368,31,0.301,43,0.855,45,0.598,46,0.581,47,0.244,48,0.15,49,1.196,63,0.007,64,0.007,65,0.248,66,0.878,67,0.949,68,1.279,72,1.214,73,1.69,74,0.901,76,1.273,77,1.186,78,0.878,80,2.452,82,0.566,83,1.302,85,0.927,86,1.764,93,1.664,94,1.764,97,1.252,99,0.98,101,1.625,102,1.856,106,0.689,110,0.616,111,1.054,112,0.869,113,0.748,118,2.203,119,0.877,123,1.428,129,0.966,134,1.111,137,1.054,141,1.674,143,0.691,144,0.804,145,0.804,160,0.833,168,2.249,170,2.452,175,2.949,192,0.67,193,1.279,194,1.152,195,1.279,196,1.106,197,0.949,198,1.764,199,0.833,200,0.901,201,0.901,202,0.925,203,1.506,204,0.878,205,0.925,206,0.949,207,0.833,208,0.949,209,0.833,210,0.833,211,0.901,212,1.628,213,1.313,214,0.901,215,0.949,216,0.901,217,1.035,218,1.063,219,0.833,220,0.855,221,0.949,222,0.878,223,1.246,224,1.625,225,0.901,226,1.313,227,0.833,228,0.949,229,0.878,230,0.878,231,0.878,232,0.833,233,0.901,234,0.833,235,0.949,236,0.833,237,0.925,238,0.949,239,0.878,240,0.811,241,0.949,242,0.901,243,1.214,244,0.949,245,0.901,246,0.949,247,0.878,248,0.949,249,1.502,250,1.467,251,1.452,252,1.313,253,0.833,254,1.313,255,0.878,256,0.949,257,1.313,258,0.878,259,0.878,260,0.901,261,0.949,262,0.878,263,0.833,264,0.949,265,0.878,266,0.949,267,0.878,268,0.949,269,0.833,270,1.619,271,0.878,272,0.949,273,1.392,274,1.313,275,0.833,276,1.313,277,0.901,278,0.949,279,0.855,280,0.855,281,0.833,282,0.949,283,0.878,284,0.949,285,0.833,286,0.949,287,0.855,288,0.901,289,0.901,290,0.833,291,0.949,292,1.214,293,0.748,294,0.949,295,1.214,296,0.833,297,0.949,298,0.901,299,0.901,300,0.949,301,0.878,302,0.878,303,0.949,304,0.901,305,0.652,306,0.949,307,0.833,308,0.878,309,0.949,310,0.878,311,0.949,312,0.901,313,1.392,314,0.878,315,0.949,316,0.878,317,0.949,318,1.587,320,2.212,327,1.305,328,1.418,329,1.804,346,0.833,347,1,384,0.728,391,2.711,393,1.111,394,1.27,401,1.537,494,2.12,544,2.139,552,1.858,913,3.567,926,1.501,1149,4.992,1151,3.988,1152,3.397,1153,3.397,1154,3.567,1155,2.498,1156,3.397,1158,2.16,1162,3.696,1163,2.77,1164,2.16,1165,2.078,1166,2.002,1167,2.16,1168,2.456,1169,2.078,1172,1.867,1283,2.456,1329,2.987,1330,2.347,1331,2.456,1332,2.347,1333,2.456,1342,2.249,1343,2.249,1344,2.249,1345,2.249,1559,3.895,1560,2.579,1746,3.397,1893,4.312,1905,3.08,1906,3.08,1907,3.08,1908,3.08,1909,3.08,1910,3.08,1911,3.08,1913,2.579,2220,2.456,2248,3.08,2249,4.572,2250,4.884,2251,4.157,2252,5.27,2253,4.157,2254,2.579,2255,3.08,2256,5.27,2257,4.26,2258,3.08,2259,4.26,2260,4.572,2261,4.26,2262,4.26,2263,3.988,2264,4.26,2265,4.26,2266,5.27,2267,3.08,2268,4.26,2269,4.26,2270,4.26,2271,4.26]],["title/classes/MintLookupDataService.html",[48,0.084,1644,3.28]],["body/classes/MintLookupDataService.html",[0,1.037,2,0.094,3,0.086,4,0.044,7,0.378,8,0.416,10,1.452,12,2.964,13,2.216,16,0.429,18,0.608,19,0.011,20,0.378,21,0.369,22,0.567,24,0.731,25,1.252,28,0.738,30,0.42,31,0.207,32,0.897,33,1.547,34,1.377,35,0.873,37,1.901,39,1.233,44,0.922,45,0.412,46,0.4,47,0.161,48,0.128,49,1.003,51,1.284,52,0.975,55,1.329,59,1.329,62,1.429,63,0.007,64,0.007,65,0.161,71,1.081,73,0.529,76,0.487,82,0.431,83,1.172,85,1.421,86,1,94,0.653,97,1.381,99,0.487,100,0.828,101,1,106,0.474,107,0.67,110,1.177,112,0.788,113,1.308,119,0.908,123,0.983,125,0.688,126,0.636,129,1.012,134,0.764,137,1.11,142,0.706,143,0.344,144,0.4,145,0.4,150,0.764,157,0.785,159,1.063,160,0.877,168,0.975,170,1.063,175,2.784,179,4.208,180,1.483,210,1.412,212,0.588,217,1.5,251,0.515,263,1.065,305,0.834,307,0.573,318,1.696,320,1.11,327,0.897,329,0.725,345,0.501,356,0.922,364,0.975,371,1.003,384,1.467,391,1.536,393,0.764,412,1.866,420,1.677,422,1.921,446,1.003,449,1.063,465,1.11,494,0.785,518,1.129,551,1.096,552,1.498,614,1.69,616,2.188,626,1.536,627,1.429,629,3.223,630,1.774,637,2.035,654,1.486,797,1.871,804,2.274,817,3.036,830,3.243,855,1.983,859,1.165,860,0.975,879,1.429,919,2.834,923,1.69,926,1.033,946,2.658,954,3.702,968,4.494,1065,1.547,1098,3.478,1152,1.69,1153,1.69,1154,2.368,1155,2.31,1156,1.69,1158,1.486,1162,2.274,1163,2.108,1164,1.486,1165,1.429,1166,1.377,1167,1.486,1169,1.429,1172,2.884,1174,3.794,1227,3.095,1228,1.774,1307,1.774,1327,1.774,1338,1.614,1339,3.002,1437,2.715,1480,2.119,1514,3.243,1515,2.288,1516,5.138,1517,3.85,1518,4.767,1519,2.515,1520,2.288,1521,4.767,1522,5.138,1523,5.138,1526,4.255,1528,6.424,1529,4.767,1531,4.255,1533,2.119,1534,4.132,1535,2.288,1536,2.119,1537,2.119,1538,2.119,1539,2.288,1540,4.767,1541,3.502,1542,2.288,1543,2.288,1544,2.288,1545,2.288,1546,5.138,1547,3.243,1548,2.288,1549,4.255,1550,5.64,1551,2.288,1552,2.288,1553,2.288,1554,2.288,1555,2.288,1556,2.288,1557,2.288,1558,2.288,1559,1.69,1560,1.774,1561,4.255,1562,2.288,1563,4.255,1564,2.288,1565,5.138,1566,2.288,1567,4.255,1568,2.288,1569,3.502,1570,2.288,1571,5.64,1572,2.288,1573,2.288,1574,2.288,1575,4.767,1576,3.502,1577,2.288,1578,3.502,1579,2.288,1580,2.288,1581,2.288,1582,2.288,1583,3.502,1584,3.502,1585,2.288,1586,3.502,1587,3.502,1588,3.502,1589,3.502,1590,3.502,1591,3.502,1592,2.288,1593,5.64,1594,5.138,1595,2.288,1596,2.288,1597,2.288,1598,1.871,1599,2.288,1600,4.132,1601,2.288,1602,2.288,1603,2.288,1604,3.502,1605,2.288,1606,2.288,1607,2.288,1608,2.119,1609,1.871,1610,2.288,1611,2.288,1612,2.288,1613,5.817,1614,2.288,1615,2.288,1616,3.502,1617,2.288,1618,2.119,1619,2.288,1620,2.288,1621,2.288,1622,2.119,1623,2.288,1624,2.288,1625,4.255,1626,4.767,1627,2.288,1628,1.983,1629,2.288,1630,2.288,1631,4.255,1632,2.119,1633,3.897,1634,1.774,1635,2.288,1636,2.119,1637,2.119,1638,2.288,1639,2.288,1640,2.288,1641,2.288,1642,1.774,1643,2.288,1644,3.94,1645,3.502,1646,2.288,1647,2.288,1648,2.288,1649,4.255,1650,5.419,1651,5.64,1652,6.356,1653,5.138,1654,4.767,1655,3.502,1656,4.757,1657,3.299,1658,4.757,1659,4.255,1660,4.255,1661,4.255,1662,4.255,1663,2.288,1664,2.288,1665,2.288,1666,5.419,1667,2.119,1668,2.119,1669,2.288,1670,2.288,1671,2.288,1672,3.502,1673,3.502,1674,2.288,1675,2.288,1676,2.288,1677,5.522,1678,2.288,1679,3.502,1680,1.983,1681,2.119,1682,2.288,1683,2.288,1684,2.288,1685,3.502,1686,2.288,1687,2.288,1688,2.288,1689,2.288,1690,3.502,1691,3.502,1692,3.502,1693,3.502,1694,4.255,1695,2.288,1696,2.288,1697,2.288,1698,2.288,1699,2.288,1700,2.288,1701,2.288,1702,2.288,1703,2.119,1704,2.288,1705,2.288,1706,2.288,1707,2.288,1708,2.288,1709,2.288,1710,2.288,1711,2.288,1712,2.288,1713,2.288,1714,2.288,1715,2.288,1716,2.288,1717,2.288,1718,1.774,1719,2.288,1720,1.983,1721,2.288,1722,2.288,1723,2.288,1724,2.288,1725,2.288,1726,3.502,1727,3.243,1728,2.288,1729,2.288,1730,2.288,1731,2.288,1732,2.288,1733,2.288,1734,2.288,1735,2.288,1736,2.288,1737,3.036,1738,2.288,1739,2.288,1740,2.288,1741,2.288,1742,2.288,1743,2.288,1744,4.255,1745,2.288,1746,1.69,1747,2.288,1748,1.983,1749,2.288,1750,2.288,1751,2.288,1752,4.255,1753,2.288,1754,2.288,1755,2.288,1756,2.288,1757,2.288,1758,2.119,1759,2.288,1760,1.614,1761,2.288,1762,2.288,1763,2.119,1764,2.119,1765,1.871,1766,2.288,1767,2.288,1768,3.502,1769,2.288,1770,2.288,1771,2.288,1772,2.288,2272,4.377,2273,2.86,2274,2.86,2275,2.86,2276,2.86]],["title/pipes/MultivalueFieldPipe.html",[2277,3.071,2278,3.28]],["body/pipes/MultivalueFieldPipe.html",[0,1.304,2,0.219,3,0.202,4,0.102,8,0.636,16,0.424,18,0.682,19,0.01,20,0.522,21,0.385,22,0.636,24,0.675,28,0.663,30,0.346,31,0.485,47,0.202,48,0.127,63,0.009,64,0.009,72,1.412,85,1.256,112,0.778,196,0.991,460,2.487,552,1.885,1155,3.687,2277,5.716,2278,5.771,2279,6.689,2280,7.79,2281,5.883,2282,6.689,2283,6.233,2284,6.689,2285,6.851,2286,6.689,2287,5.883,2288,5.883,2289,6.689,2290,6.689]],["title/components/PDFListComponent.html",[65,0.134,255,0.935]],["body/components/PDFListComponent.html",[0,0.752,2,0.127,3,0.117,4,0.059,7,0.436,8,0.602,16,0.55,18,0.741,19,0.01,20,0.518,21,0.487,22,0.691,24,0.66,25,0.752,28,0.729,30,0.402,31,0.279,35,1.666,36,1.279,41,3.441,43,1.122,45,0.555,46,0.539,47,0.191,48,0.12,49,0.938,63,0.006,64,0.006,65,0.239,66,0.814,67,0.881,68,1.214,71,2.144,72,1.152,73,1.684,74,0.836,76,0.657,77,1.307,78,0.814,82,0.538,83,1.374,84,1.934,85,1.381,86,1.865,87,1.746,88,1.992,91,1.76,92,1.76,93,1.579,94,1.446,95,1.832,96,1.934,97,1.202,98,1.348,99,1.079,100,1.579,101,1.446,102,2.008,103,1.478,104,1.087,105,1.478,106,0.905,107,1.279,108,1.478,109,1.478,110,1.194,111,0.938,112,0.737,113,1.14,114,1.478,115,1.478,119,0.832,121,1.178,122,1.666,123,1.009,124,1.353,125,1.524,126,1.409,127,1.178,128,1.178,129,0.986,130,1.244,131,1.353,132,1.622,133,1.031,134,1.031,135,1.353,136,1.146,137,0.978,138,1.353,139,0.978,140,1.353,141,0.836,142,0.953,143,0.656,144,0.763,145,0.763,146,1.353,147,1.116,148,2.102,149,1.579,150,1.031,153,1.353,154,1.784,155,1.353,156,1.353,157,1.058,158,1.353,159,1.434,160,0.772,163,2.943,164,2.392,168,1.315,170,1.434,174,2.523,175,2.719,177,2.857,178,2.857,179,2.177,182,2.523,192,0.622,193,1.214,194,1.093,195,1.214,196,1.118,197,0.881,198,1.723,199,0.772,200,0.836,201,0.836,202,0.858,203,1.446,204,0.814,205,0.858,206,0.881,207,0.772,208,0.881,209,0.772,210,0.772,211,0.836,212,1.657,213,1.246,214,0.836,215,0.881,216,0.836,217,1.357,218,1.009,219,0.772,220,1.302,221,0.881,222,0.814,223,1.183,224,1.572,225,0.836,226,1.246,227,0.772,228,0.881,229,0.814,230,0.814,231,0.814,232,0.772,233,0.836,234,0.772,235,0.881,236,0.772,237,0.858,238,0.881,239,0.814,240,0.752,241,0.881,242,0.836,243,1.152,244,0.881,245,0.836,246,0.881,247,0.814,248,0.881,249,0.814,250,0.858,251,1.14,252,1.246,253,0.772,254,1.246,255,1.453,256,1.865,257,1.246,258,0.814,259,0.814,260,0.836,261,0.881,262,0.814,263,0.772,264,0.881,265,0.814,266,0.881,267,0.814,268,0.881,269,0.772,270,1.492,271,0.814,272,0.881,273,0.814,274,1.246,275,0.772,276,1.246,277,0.836,278,0.881,279,0.793,280,0.793,281,0.772,282,0.881,283,0.814,284,0.881,285,0.772,286,0.881,287,0.793,288,0.836,289,0.836,290,0.772,291,0.881,292,0.814,293,0.694,294,0.881,295,0.814,296,0.772,297,0.881,298,0.836,299,0.836,300,0.881,301,0.814,302,0.814,303,0.881,304,0.836,305,0.605,306,0.881,307,0.772,308,0.814,309,0.881,310,0.814,311,0.881,312,0.836,313,1.337,314,0.814,315,0.881,316,0.814,317,0.881,318,1.657,329,1.606,345,0.675,384,0.956,455,2.223,459,0.752,494,1.889,516,1.94,552,1.538,558,1.915,614,2.278,616,2.727,626,1.915,637,1.793,681,3.224,683,2.675,687,2.952,804,1.76,894,3.171,926,2.486,994,3.784,1028,2.523,1087,4.775,1137,2.835,1163,1.858,1227,2.835,1354,2.177,1426,6.967,1598,2.523,2224,2.675,2291,3.857,2292,4.042,2293,5.457,2294,5.457,2295,5.457,2296,3.857,2297,4.042,2298,3.857,2299,6.885,2300,3.857,2301,2.857,2302,2.857,2303,4.799,2304,3.086,2305,3.086,2306,3.086,2307,2.675,2308,3.857,2309,3.857,2310,3.857,2311,3.857,2312,4.799,2313,3.086,2314,3.392,2315,3.086,2316,3.086,2317,3.857,2318,3.857,2319,3.086,2320,3.857,2321,2.857,2322,4.799,2323,3.857,2324,3.857,2325,3.857,2326,3.857,2327,3.857,2328,3.857,2329,3.857,2330,3.857,2331,3.857,2332,5.457,2333,3.857,2334,3.857,2335,3.857,2336,3.857,2337,3.857,2338,3.857,2339,3.857,2340,3.857,2341,3.857,2342,3.857,2343,3.086,2344,3.857,2345,3.857,2346,3.392,2347,3.857,2348,3.392,2349,3.857,2350,5.457,2351,5.457,2352,5.457,2353,6.055,2354,5.457,2355,5.457,2356,5.457]],["title/components/ParameterRetrieverComponent.html",[65,0.134,253,0.887]],["body/components/ParameterRetrieverComponent.html",[2,0.087,3,0.153,4,0.04,7,0.416,8,0.589,16,0.522,18,0.698,19,0.011,20,0.514,21,0.467,22,0.624,24,0.669,25,0.515,28,0.75,30,0.355,31,0.191,35,1.257,36,0.876,43,1.04,45,0.38,46,0.369,47,0.249,48,0.159,49,1.211,63,0.005,64,0.005,65,0.256,66,0.558,67,0.603,68,0.916,71,2.139,72,0.869,73,1.666,74,0.572,75,2.558,76,1.36,77,1.114,78,0.558,80,2.707,82,0.498,83,1.397,84,1.744,85,1.39,86,1.759,87,1.663,88,1.898,90,1.012,91,1.328,92,1.328,93,1.191,94,1.498,95,1.464,96,1.744,97,1.382,98,1.249,99,1.167,100,1.464,101,1.155,102,1.888,103,1.012,104,1.16,105,1.012,106,0.947,107,1.186,108,1.012,109,1.012,110,1.078,111,0.846,112,0.763,113,1.364,114,1.012,115,1.012,119,0.627,121,1.257,122,1.545,123,1.056,124,0.927,125,1.578,126,1.459,127,1.257,128,1.257,129,1.01,130,0.852,131,0.927,132,1.698,133,1.1,134,0.706,135,0.927,136,1.224,137,1.044,138,0.927,139,1.57,140,0.927,141,1.421,142,1.249,143,0.608,144,0.707,145,0.707,146,0.927,147,1.191,148,2.092,149,1.792,150,1.1,153,0.927,154,1.425,155,0.927,156,0.927,157,1.567,158,0.927,160,1.013,161,1.677,162,0.852,180,1.114,192,0.426,193,0.916,194,0.824,195,0.916,196,1.078,197,0.603,198,1.498,199,0.824,200,0.892,201,0.572,202,0.588,203,1.155,204,0.558,205,0.588,206,0.603,207,0.824,208,0.603,209,0.824,210,1.013,211,0.572,212,1.408,213,0.94,214,0.572,215,0.603,216,0.572,217,0.741,218,0.935,219,0.824,220,0.846,221,0.603,222,0.558,223,0.892,224,1.304,225,0.572,226,0.94,227,1.013,228,0.603,229,0.558,230,0.558,231,0.558,232,0.824,233,0.892,234,0.824,235,0.603,236,0.824,237,0.588,238,0.603,239,0.558,240,0.515,241,0.603,242,0.572,243,0.869,244,0.603,245,0.572,246,0.603,247,0.558,248,0.603,249,0.558,250,0.588,251,1.18,252,0.94,253,1.144,254,0.94,255,0.558,256,0.603,257,0.94,258,0.558,259,0.558,260,0.572,261,0.603,262,0.558,263,0.529,264,0.603,265,0.558,266,0.603,267,0.558,268,0.603,269,0.529,270,1.238,271,0.558,272,0.603,273,0.558,274,0.94,275,0.529,276,0.94,277,0.572,278,0.603,279,0.846,280,1.349,281,1.013,282,0.603,283,0.558,284,0.603,285,0.824,286,0.603,287,0.846,288,1.421,289,0.892,290,0.824,291,0.603,292,0.558,293,0.91,294,0.603,295,0.558,296,0.824,297,0.603,298,0.572,299,0.572,300,0.603,301,0.558,302,0.558,303,0.603,304,0.572,305,0.414,306,0.603,307,0.529,308,0.558,309,0.603,310,0.558,311,0.603,312,0.572,313,1.068,314,0.558,315,0.603,316,0.558,317,0.603,318,1.374,319,1.147,320,2.023,321,1.147,324,1.731,327,0.829,328,0.901,329,0.67,330,2.197,331,1.147,332,1.881,333,2.197,334,2.197,335,1.503,336,2.188,337,2.197,338,2.481,339,1.147,340,1.788,341,1.788,342,1.11,343,1.11,344,0.954,345,0.463,346,0.824,347,0.636,348,1.11,349,2.172,350,1.147,351,2.849,352,1.788,353,1.012,354,1.731,355,1.487,356,0.852,357,1.147,358,1.147,359,1.147,360,1.147,361,1.147,362,1.788,363,1.147,364,0.901,365,1.147,366,1.147,367,1.147,368,1.043,369,1.012,370,1.012,371,0.927,372,1.147,373,1.147,374,1.147,375,1.147,376,1.788,377,1.147,378,1.147,379,1.147,380,1.147,381,2.127,382,1.677,383,1.147,384,1.149,385,1.938,386,1.147,387,1.997,388,0.876,389,2.06,390,1.147,391,1.775,392,2.197,393,1.352,394,1.545,395,1.147,396,1.147,397,1.147,398,1.147,399,1.147,400,1.147,401,1.1,402,1.147,403,1.788,404,1.788,405,1.147,406,1.147,407,1.147,408,1.147,409,1.147,410,1.147,411,1.11,412,1.444,413,1.147,414,1.147,415,1.147,416,1.788,417,1.147,418,1.147,419,1.147,420,1.577,421,1.731,422,1.487,423,2.88,424,2.197,425,1.147,426,1.147,427,1.788,428,1.788,429,1.147,430,2.88,431,1.788,432,1.147,433,1.147,434,1.147,435,1.147,436,2.197,437,1.147,438,1.147,439,1.147,440,1.147,441,1.147,442,1.147,443,0.954,444,0.982,445,1.147,446,1.444,447,1.788,448,0.982,449,0.982,450,1.147,451,0.927,452,1.076,453,1.11,454,0.901,455,1.076,456,2.197,457,1.788,458,1.147,459,0.515,460,0.982,461,1.11,462,0.901,463,0.954,464,1.11,465,0.67,466,1.677,467,1.788,468,1.147,469,1.147,470,1.147,471,1.147,472,1.147,473,1.147,474,1.147,475,2.197,476,1.147,477,1.147,478,1.147,479,1.147,480,1.788,481,1.147,482,1.147,483,1.444,484,1.147,485,1.076,486,1.147,487,1.147,488,1.076,489,1.147,490,1.147,491,1.147,492,1.788,493,1.788,494,0.725,495,1.147,496,1.11,497,1.11,498,1.043,499,1.11,500,1.147,501,1.11,502,1.147,503,1.147,504,1.147,505,1.147,506,1.147,507,1.147,508,1.147,509,1.147,510,1.788,511,1.788,512,1.788,513,1.788,514,1.788,515,1.731,516,1.16,517,1.147,518,1.043,519,1.147,520,1.147,521,0.876,522,1.012,523,1.788,524,1.147,525,1.147,526,1.147,527,2.197,528,1.147,529,1.147,530,1.147,531,1.147,532,1.147,533,1.147,534,1.147,535,1.147,536,1.11,537,1.147,538,1.11,539,1.147,540,1.147,541,1.147,542,1.147,543,1.147,544,0.982,545,1.147,546,1.147,547,1.012,548,1.147,549,1.147,550,1.147,551,1.577,552,1.16,553,2.197,554,1.147,555,1.147,556,1.147,557,1.147,558,0.927,2357,4.116,2358,2.641,2359,2.641,2360,2.641,2361,2.641]],["title/classes/Plan.html",[41,2.213,48,0.084]],["body/classes/Plan.html",[2,0.216,3,0.199,4,0.1,7,0.417,16,0.546,19,0.01,21,0.495,24,0.743,40,4.084,41,4.093,47,0.233,48,0.155,63,0.009,64,0.009,82,0.76,123,1.514,681,4.99,884,6.977,946,3.291,954,3.668,2021,3.889,2362,7.428,2363,7.428,2364,7.428,2365,5.79,2366,5.79,2367,5.79,2368,6.583,2369,6.583,2370,4.877,2371,4.877,2372,4.877]],["title/classes/PlanTable.html",[40,2.747,48,0.084]],["body/classes/PlanTable.html",[2,0.218,3,0.201,4,0.101,7,0.421,16,0.537,19,0.01,21,0.487,24,0.707,40,4.812,41,4.233,47,0.234,48,0.156,63,0.009,64,0.009,82,0.764,123,1.65,681,3.924,884,6.904,946,4.233,954,2.885,2021,3.924,2362,5.841,2363,5.841,2364,5.841,2370,6.275,2371,6.275,2372,6.275,2373,5.841,2374,5.841,2375,5.841,2376,5.841]],["title/components/PublishDataLocationSelectorComponent.html",[65,0.134,258,0.935]],["body/components/PublishDataLocationSelectorComponent.html",[0,0.686,2,0.115,3,0.106,4,0.092,7,0.464,8,0.572,16,0.554,18,0.77,19,0.011,20,0.52,21,0.489,22,0.718,24,0.7,25,0.686,28,0.736,30,0.391,31,0.255,43,1.051,44,1.135,45,0.507,46,0.492,47,0.212,48,0.114,49,0.891,63,0.006,64,0.006,65,0.234,66,0.743,67,0.804,68,1.137,71,2.12,72,1.079,73,1.679,74,0.763,76,0.6,77,1.083,78,1.27,82,0.503,83,1.355,84,1.837,85,1.43,86,1.828,87,1.674,88,1.911,91,1.648,92,1.648,93,1.479,94,1.601,95,1.741,96,1.837,97,1.143,98,1.262,99,1.125,100,1.479,101,1.374,102,1.982,103,1.348,104,0.992,105,1.348,106,0.847,107,1.198,108,1.348,109,1.348,110,1.145,111,0.978,112,0.917,113,0.633,114,1.348,115,1.348,119,1.115,121,1.075,122,1.561,123,0.945,124,1.235,125,1.448,126,1.339,127,1.075,128,1.075,129,0.817,130,1.135,131,1.235,132,1.519,133,0.941,134,0.941,135,1.235,136,1.046,137,0.892,138,1.235,139,1.778,140,1.235,141,0.763,142,0.869,143,0.614,144,0.714,145,0.714,146,1.235,147,1.018,148,1.561,149,1.479,150,0.941,153,1.235,154,1.695,155,1.235,156,1.235,157,0.966,158,1.235,159,1.309,160,0.705,163,2.797,164,2.183,168,1.2,170,1.309,174,2.302,175,2.607,176,2.607,177,2.607,179,2.885,180,0.997,181,3.095,182,2.302,192,0.568,193,1.137,194,1.023,195,1.137,196,1.039,197,0.804,198,1.67,199,0.705,200,0.763,201,0.763,202,0.783,203,1.374,204,0.743,205,0.783,206,0.804,207,0.705,208,0.804,209,0.705,210,1.023,211,0.763,212,1.552,213,1.167,214,0.763,215,0.804,216,0.763,217,1.188,218,1.429,219,0.705,220,0.724,221,0.804,222,0.743,223,1.108,224,1.508,225,0.763,226,1.167,227,0.705,228,0.804,229,0.743,230,0.743,231,0.743,232,0.705,233,0.763,234,0.705,235,0.804,236,0.705,237,0.783,238,0.804,239,0.743,240,0.686,241,0.804,242,0.763,243,1.079,244,0.804,245,0.763,246,0.804,247,0.743,248,0.804,249,0.743,250,0.783,251,1.083,252,1.167,253,0.705,254,1.167,255,0.743,256,0.804,257,1.167,258,1.394,259,0.743,260,0.763,261,0.804,262,0.743,263,0.705,264,0.804,265,0.743,266,0.804,267,0.743,268,0.804,269,0.705,270,1.431,271,0.743,272,0.804,273,0.743,274,1.167,275,0.705,276,1.167,277,0.763,278,0.804,279,0.724,280,0.724,281,0.705,282,0.804,283,0.743,284,0.804,285,0.705,286,0.804,287,0.724,288,0.763,289,0.763,290,0.705,291,0.804,292,0.743,293,0.633,294,0.804,295,0.743,296,0.705,297,0.804,298,0.763,299,0.763,300,0.804,301,0.743,302,0.743,303,0.804,304,0.763,305,0.552,306,0.804,307,0.705,308,0.743,309,0.804,310,0.743,311,0.804,312,0.763,313,1.27,314,0.743,315,0.804,316,0.743,317,0.804,318,1.926,320,1.296,329,0.892,345,0.616,346,0.705,347,0.847,401,0.941,459,0.686,466,1.433,494,1.812,626,1.793,683,2.441,687,2.764,894,2.948,919,1.846,926,1.846,1026,4.586,1137,2.655,1293,3.342,1339,2.885,1354,1.987,1609,2.302,1681,2.607,1760,2.885,2073,3.019,2224,2.441,2297,4.457,2301,2.607,2302,2.607,2304,2.816,2305,2.816,2307,2.441,2313,2.816,2315,2.816,2316,2.816,2321,4.457,2377,3.519,2378,3.544,2379,2.655,2380,5.11,2381,6.602,2382,5.11,2383,5.11,2384,6.602,2385,6.602,2386,6.602,2387,5.11,2388,5.11,2389,3.519,2390,3.519,2391,3.519,2392,3.519,2393,3.519,2394,3.519,2395,3.519,2396,3.519,2397,5.11,2398,3.519,2399,4.494,2400,3.519,2401,6.602,2402,3.519,2403,5.11,2404,3.519,2405,5.11,2406,5.11,2407,3.519,2408,4.494,2409,4.494,2410,3.519,2411,3.519,2412,3.519,2413,3.519,2414,3.519,2415,3.519,2416,3.519,2417,3.519,2418,3.519,2419,3.519,2420,3.519,2421,3.519,2422,3.519,2423,3.519,2424,3.519,2425,3.519,2426,3.519,2427,3.519,2428,3.519,2429,3.519,2430,3.519,2431,2.607,2432,3.519,2433,3.519,2434,3.519,2435,3.519,2436,3.519,2437,3.519,2438,3.519,2439,3.519,2440,3.519,2441,3.519,2442,3.519,2443,3.519,2444,3.519,2445,3.519,2446,3.519,2447,3.519,2448,3.095,2449,5.11,2450,3.519,2451,3.519,2452,3.519,2453,3.519,2454,3.519,2455,3.519,2456,3.519,2457,3.519,2458,3.519,2459,3.519,2460,3.519,2461,3.519,2462,3.519,2463,3.519,2464,3.519,2465,3.519,2466,3.519,2467,3.519,2468,3.519,2469,3.519,2470,6.017,2471,3.519,2472,3.519,2473,5.11,2474,3.519,2475,3.519,2476,5.11,2477,5.11,2478,5.11,2479,5.11,2480,5.11,2481,6.602,2482,5.11]],["title/classes/RbValidator.html",[48,0.084,2483,3.894]],["body/classes/RbValidator.html",[2,0.195,3,0.18,4,0.091,7,0.377,8,0.777,16,0.46,18,0.741,19,0.01,20,0.46,21,0.418,22,0.691,24,0.669,28,0.734,30,0.376,45,0.856,46,0.832,47,0.18,48,0.138,63,0.008,64,0.008,83,1.265,106,1.204,107,1.394,110,1.162,112,0.95,113,1.07,129,1.108,142,1.794,143,0.873,144,1.015,145,1.015,212,1.494,335,2.159,345,1.042,384,1.43,393,2.327,401,2.096,459,1.16,483,2.549,516,1.676,626,2.939,894,3.054,1016,2.423,1064,5.812,1308,3.69,2070,5.342,2483,6.388,2484,5.948,2485,6.388,2486,5.037,2487,8.375,2488,7.264,2489,7.264,2490,8.375,2491,5.948,2492,6.388,2493,7.264,2494,7.842,2495,5.948,2496,6.388,2497,5.381,2498,8.167,2499,7.842,2500,5.948,2501,5.948,2502,5.948,2503,5.948,2504,5.948,2505,5.948,2506,7.842,2507,7.264,2508,5.948,2509,5.948,2510,5.948,2511,5.948]],["title/classes/RecordActionResult.html",[48,0.084,2512,3.28]],["body/classes/RecordActionResult.html",[0,1.237,2,0.127,3,0.117,4,0.059,7,0.245,10,1.283,12,2.43,13,2.564,16,0.402,19,0.011,20,0.402,21,0.418,24,0.727,28,0.76,30,0.418,31,0.28,32,1.214,34,1.863,37,2.375,39,1.787,41,1.934,44,2.224,45,0.557,46,0.541,47,0.208,48,0.143,49,0.573,50,1.934,51,1.737,52,2.351,55,1.798,59,3.204,60,4.471,61,4.149,62,4.283,63,0.006,64,0.006,77,1.309,82,0.539,83,1.023,87,0.981,99,1.323,101,0.883,110,1.021,112,0.879,113,0.696,129,1.053,143,0.465,144,0.541,145,0.541,160,1.095,163,1.798,168,1.319,175,2.16,180,1.066,194,0.775,196,0.81,293,0.696,335,1.15,346,0.775,349,1.357,353,1.482,368,1.528,384,1.412,401,1.034,443,1.975,444,2.034,454,1.319,463,2.291,465,0.981,516,1.09,627,1.934,628,2.184,633,2.866,654,2.01,661,3.892,681,4.763,695,2.866,751,2.683,752,2.683,804,1.248,811,5.406,851,2.683,894,1.626,901,5.107,909,2.866,910,4.781,919,1.975,923,2.285,954,1.68,959,5.001,977,2.285,978,3.392,1445,2.866,1657,2.4,1760,3.087,1765,2.53,1773,3.231,1812,2.285,1840,2.866,1853,2.866,1869,2.683,1870,2.866,1891,2.683,1990,2.01,2027,1.863,2028,1.798,2048,3.392,2070,2.53,2187,2.683,2220,2.285,2254,3.392,2512,5.75,2513,3.095,2514,3.869,2515,3.869,2516,3.869,2517,3.095,2518,3.095,2519,3.095,2520,3.095,2521,3.095,2522,3.095,2523,3.095,2524,3.095,2525,3.095,2526,3.095,2527,3.095,2528,4.375,2529,2.683,2530,3.095,2531,3.095,2532,3.095,2533,3.095,2534,3.095,2535,3.095,2536,3.095,2537,3.095,2538,3.095,2539,3.095,2540,2.866,2541,2.683,2542,3.095,2543,2.866,2544,3.095,2545,3.095,2546,3.095,2547,3.095,2548,3.095,2549,3.095,2550,3.095,2551,4.699,2552,3.095,2553,4.375,2554,5.516,2555,3.095,2556,3.095,2557,3.095,2558,3.095,2559,3.095,2560,3.095,2561,3.095,2562,3.095,2563,3.095,2564,3.095,2565,3.095,2566,3.095,2567,3.095,2568,3.095,2569,4.375,2570,3.095,2571,3.095,2572,3.095,2573,3.095,2574,3.095,2575,3.095,2576,3.095,2577,3.095,2578,3.095,2579,3.095,2580,4.051,2581,4.375,2582,3.095,2583,3.095,2584,4.375,2585,4.375,2586,4.375,2587,4.375,2588,3.095,2589,5.383,2590,5.498,2591,5.075,2592,3.792,2593,3.095,2594,3.095,2595,3.095,2596,3.095,2597,3.095,2598,3.095,2599,3.095,2600,3.095,2601,3.095,2602,3.095,2603,3.095,2604,3.095,2605,3.095,2606,3.095,2607,3.095,2608,3.095,2609,3.095,2610,3.095,2611,3.095,2612,3.095,2613,3.095,2614,3.095,2615,3.095,2616,3.095,2617,3.095,2618,4.375,2619,3.095,2620,3.095,2621,3.095,2622,3.095,2623,2.866,2624,2.866,2625,3.095,2626,3.095,2627,3.095,2628,3.095,2629,3.095,2630,3.095,2631,3.095,2632,3.095,2633,3.095,2634,3.095,2635,3.095,2636,3.095,2637,3.095,2638,4.699,2639,3.095,2640,2.866,2641,3.095,2642,3.095,2643,2.866,2644,4.375,2645,4.375,2646,5.82,2647,5.075,2648,4.375,2649,3.095,2650,3.095,2651,3.095,2652,3.095,2653,4.375,2654,2.683,2655,3.792,2656,2.866,2657,3.095,2658,3.095,2659,3.095,2660,3.095,2661,5.107,2662,4.375,2663,3.095,2664,3.095,2665,3.095,2666,3.095,2667,3.095,2668,3.095,2669,4.375,2670,4.375,2671,3.095,2672,3.095,2673,3.095,2674,3.095,2675,3.095,2676,3.095,2677,3.095,2678,3.095,2679,3.095,2680,4.375,2681,3.095,2682,3.095,2683,4.375,2684,4.375,2685,3.095,2686,3.095,2687,3.095,2688,3.095,2689,3.095,2690,3.095,2691,3.095,2692,3.095,2693,2.866,2694,3.095,2695,3.095,2696,5.516,2697,3.095,2698,3.095,2699,3.095,2700,3.095,2701,3.095,2702,3.095]],["title/components/RecordMetadataRetrieverComponent.html",[65,0.134,259,0.935]],["body/components/RecordMetadataRetrieverComponent.html",[2,0.149,3,0.137,4,0.069,7,0.468,8,0.656,16,0.556,18,0.752,19,0.01,20,0.529,21,0.499,22,0.702,24,0.683,25,0.885,28,0.718,30,0.382,31,0.329,43,0.933,44,1.463,47,0.208,48,0.131,49,1.022,63,0.007,64,0.007,65,0.24,66,0.958,67,1.036,68,1.358,71,2.182,72,1.558,73,1.694,74,0.983,76,0.773,77,1.386,78,0.958,82,0.601,83,1.391,84,2.106,85,1.372,86,1.906,87,1.871,88,2.135,91,1.968,92,1.968,93,1.766,94,1.575,95,1.996,96,2.106,97,1.159,98,1.508,99,1.175,100,1.766,101,1.575,102,2.051,103,1.738,104,1.278,105,1.738,106,1.012,107,1.063,108,1.738,109,1.738,110,1.175,111,1.022,112,0.803,113,0.816,114,1.738,115,1.738,119,0.691,121,1.385,122,1.864,123,1.128,124,1.591,125,1.66,126,1.358,127,1.385,128,1.385,129,0.936,130,1.463,131,1.591,132,1.814,133,1.212,134,1.212,135,1.591,136,1.348,137,1.15,138,1.591,139,1.15,140,1.591,141,0.983,142,1.12,143,0.545,144,0.634,145,0.634,146,1.591,147,1.312,148,1.864,149,1.766,150,1.212,153,1.591,154,1.278,155,1.591,156,1.591,157,1.245,158,1.591,159,1.687,160,0.908,163,3.206,164,2.813,168,1.547,170,1.687,174,2.967,192,0.731,193,1.358,194,1.222,195,1.358,196,1.093,197,1.036,198,1.811,199,0.908,200,0.983,201,0.983,202,1.009,203,1.575,204,0.958,205,1.009,206,1.036,207,0.908,208,1.036,209,0.908,210,0.908,211,0.983,212,1.666,213,1.394,214,0.983,215,1.036,216,0.983,217,1.098,218,1.128,219,0.908,220,0.933,221,1.036,222,0.958,223,1.323,224,1.685,225,0.983,226,1.394,227,0.908,228,1.036,229,0.958,230,0.958,231,0.958,232,0.908,233,0.983,234,0.908,235,1.036,236,0.908,237,1.009,238,1.036,239,0.958,240,0.885,241,1.036,242,0.983,243,1.288,244,1.036,245,0.983,246,1.036,247,0.958,248,1.036,249,0.958,250,1.009,251,1.241,252,1.394,253,0.908,254,1.394,255,0.958,256,1.036,257,1.394,258,0.958,259,1.558,260,0.983,261,1.036,262,0.958,263,0.908,264,1.036,265,0.958,266,1.036,267,0.958,268,1.036,269,0.908,270,1.599,271,0.958,272,1.036,273,0.958,274,1.394,275,0.908,276,1.394,277,0.983,278,1.036,279,0.933,280,0.933,281,0.908,282,1.036,283,0.958,284,1.036,285,0.908,286,1.036,287,0.933,288,0.983,289,0.983,290,0.908,291,1.036,292,0.958,293,0.816,294,1.036,295,0.958,296,0.908,297,1.036,298,0.983,299,0.983,300,1.036,301,0.958,302,0.958,303,1.036,304,0.983,305,0.711,306,1.036,307,0.908,308,0.958,309,1.036,310,0.958,311,1.036,312,0.983,313,1.456,314,0.958,315,1.036,316,0.958,317,1.036,342,3.102,515,1.907,551,2.338,681,2.68,683,3.145,2703,6.103,2704,4.536,2705,4.536,2706,4.536,2707,4.536,2708,4.536,2709,4.536,2710,4.536,2711,4.536]],["title/modules/RecordSearchModule.html",[856,1.39,2712,3.28]],["body/modules/RecordSearchModule.html",[2,0.205,3,0.189,4,0.095,19,0.01,30,0.46,31,0.453,32,1.961,47,0.226,48,0.119,63,0.009,64,0.009,192,1.008,218,1.481,260,1.961,262,1.839,345,1.095,346,1.604,347,1.504,565,2.714,856,2.349,858,2.628,859,3.263,860,2.896,865,3.87,866,3.479,867,2.905,868,2.714,870,3.741,871,3.741,872,2.905,873,3.741,874,3.888,875,3.888,880,3.247,1410,5.935,1411,5.935,1412,5.935,2712,6.613,2713,5.497,2714,5.497,2715,6.25,2716,6.25,2717,5.497,2718,6.25]],["title/classes/RecordSearchParams.html",[48,0.084,2580,3.28]],["body/classes/RecordSearchParams.html",[0,1.188,2,0.118,3,0.109,4,0.055,7,0.228,8,0.494,10,1.722,12,2.334,13,2.481,16,0.534,18,0.775,19,0.011,20,0.516,21,0.478,22,0.722,24,0.732,28,0.765,30,0.41,31,0.261,32,1.129,34,1.733,37,2.255,39,1.717,41,1.799,44,2.282,45,0.518,46,0.503,47,0.202,48,0.14,49,0.533,50,1.799,51,1.616,52,2.275,55,1.673,59,3.101,60,4.407,61,3.985,62,4.239,63,0.006,64,0.006,77,1.273,82,0.512,83,0.983,87,0.912,99,1.295,101,0.822,110,0.903,112,0.858,113,0.648,119,1.124,129,1.031,143,0.432,144,0.503,145,0.503,160,1.04,163,1.673,168,1.227,175,2.051,180,1.013,194,0.721,196,0.769,293,0.648,335,1.07,346,0.721,349,1.263,353,1.379,368,1.421,384,1.388,401,0.962,443,1.875,444,1.931,454,1.227,465,0.912,516,1.014,627,1.799,628,2.031,633,2.666,654,1.869,661,2.031,681,4.354,695,2.666,751,2.495,752,2.495,804,1.161,811,5.329,851,2.495,894,1.513,901,5.629,909,4.942,910,4.906,919,1.875,923,2.126,954,1.563,959,4.916,977,2.126,978,3.221,1445,3.847,1657,2.232,1703,2.666,1760,2.932,1765,2.354,1773,3.068,1812,2.126,1840,2.666,1853,2.666,1869,2.495,1870,2.666,1891,2.495,1990,1.869,2027,1.733,2028,1.673,2048,3.221,2070,2.354,2187,2.495,2220,2.126,2254,3.221,2512,5.46,2513,2.879,2517,2.879,2518,2.879,2519,2.879,2520,2.879,2521,2.879,2522,2.879,2523,2.879,2524,2.879,2525,2.879,2526,2.879,2527,2.879,2528,4.155,2529,2.495,2530,2.879,2531,2.879,2532,2.879,2533,2.879,2534,2.879,2535,2.879,2536,2.879,2537,2.879,2538,2.879,2539,2.879,2540,2.666,2541,2.495,2542,2.879,2543,2.666,2544,2.879,2545,2.879,2546,2.879,2547,2.879,2548,2.879,2549,2.879,2550,2.879,2551,4.514,2552,2.879,2553,4.155,2554,5.338,2555,2.879,2556,2.879,2557,2.879,2558,2.879,2559,2.879,2560,2.879,2561,2.879,2562,2.879,2563,2.879,2564,2.879,2565,2.879,2566,2.879,2567,2.879,2568,2.879,2569,4.155,2570,2.879,2571,2.879,2572,2.879,2573,2.879,2574,2.879,2575,2.879,2576,2.879,2577,2.879,2578,2.879,2579,2.879,2580,4.514,2581,4.155,2582,2.879,2583,2.879,2584,4.155,2585,4.155,2586,4.155,2587,4.155,2588,2.879,2589,5.394,2590,5.807,2591,4.875,2592,3.601,2593,2.879,2594,2.879,2595,2.879,2596,2.879,2597,2.879,2598,2.879,2599,2.879,2600,2.879,2601,2.879,2602,2.879,2603,2.879,2604,2.879,2605,2.879,2606,2.879,2607,2.879,2608,2.879,2609,2.879,2610,2.879,2611,2.879,2612,2.879,2613,2.879,2614,2.879,2615,2.879,2616,2.879,2617,2.879,2618,4.155,2619,2.879,2620,2.879,2621,2.879,2622,2.879,2623,2.666,2624,2.666,2625,2.879,2626,2.879,2627,2.879,2628,2.879,2629,2.879,2630,2.879,2631,2.879,2632,2.879,2633,2.879,2634,2.879,2635,2.879,2636,2.879,2637,5.338,2638,5.46,2639,4.155,2640,2.666,2641,2.879,2642,2.879,2643,4.942,2644,4.155,2645,4.155,2646,5.66,2647,4.875,2648,4.155,2649,4.155,2650,2.879,2651,2.879,2652,4.155,2653,4.155,2654,2.495,2655,3.601,2656,2.666,2657,2.879,2658,2.879,2659,2.879,2660,4.155,2661,4.942,2662,4.155,2663,2.879,2664,2.879,2665,2.879,2666,2.879,2667,5.897,2668,4.155,2669,4.155,2670,4.155,2671,2.879,2672,2.879,2673,2.879,2674,2.879,2675,2.879,2676,2.879,2677,4.155,2678,2.879,2679,2.879,2680,4.155,2681,2.879,2682,2.879,2683,4.155,2684,4.155,2685,2.879,2686,2.879,2687,2.879,2688,2.879,2689,2.879,2690,2.879,2691,2.879,2692,5.338,2693,2.666,2694,2.879,2695,5.338,2696,5.338,2697,2.879,2698,4.155,2699,2.879,2700,2.879,2701,2.879,2702,2.879,2719,5.193,2720,5.193,2721,5.193,2722,5.193,2723,5.193,2724,5.193,2725,3.598,2726,3.598,2727,3.598,2728,3.598,2729,3.598,2730,3.598,2731,3.598,2732,3.598,2733,3.598,2734,3.598,2735,3.598,2736,3.598,2737,3.598,2738,3.598]],["title/classes/RecordSearchRefiner.html",[48,0.084,2590,3.071]],["body/classes/RecordSearchRefiner.html",[0,1.217,2,0.123,3,0.113,4,0.057,7,0.238,8,0.509,10,1.776,12,2.391,13,2.53,16,0.507,18,0.546,19,0.011,20,0.499,21,0.485,22,0.509,24,0.73,28,0.76,30,0.415,31,0.272,32,1.179,34,1.809,37,2.326,39,1.759,41,1.878,44,2.195,45,0.541,46,0.525,47,0.206,48,0.142,49,0.557,50,1.878,51,1.687,52,2.321,55,1.746,59,3.162,60,4.445,61,4.082,62,4.266,63,0.006,64,0.006,77,1.294,82,0.528,83,1.006,87,0.953,99,1.312,101,0.858,110,1.008,112,0.945,113,0.676,119,0.573,129,1.045,143,0.451,144,0.525,145,0.525,160,1.073,163,1.746,168,1.827,175,2.115,180,1.044,194,0.752,196,0.793,293,0.676,335,1.117,346,0.752,349,1.318,353,1.439,368,1.483,384,1.402,385,1.439,401,1.004,443,1.934,444,1.992,454,1.281,465,0.953,516,1.058,627,1.878,628,2.121,633,2.783,654,1.951,661,2.121,681,4.418,695,2.783,751,2.605,752,2.605,804,1.212,811,5.375,851,2.605,894,1.579,901,5.041,909,2.783,910,4.718,919,1.934,923,2.219,954,2.955,959,4.967,977,2.219,978,3.322,1445,2.783,1657,2.33,1760,3.024,1765,2.457,1773,3.164,1812,2.219,1840,2.783,1853,2.783,1869,2.605,1870,2.783,1891,2.605,1990,1.951,2027,1.809,2028,1.746,2048,3.322,2070,2.457,2187,2.605,2220,2.219,2254,3.322,2512,5.54,2513,3.006,2517,3.006,2518,3.006,2519,3.006,2520,3.006,2521,3.006,2522,3.006,2523,3.006,2524,3.006,2525,3.006,2526,3.006,2527,3.006,2528,4.285,2529,2.605,2530,3.006,2531,3.006,2532,3.006,2533,3.006,2534,3.006,2535,3.006,2536,3.006,2537,3.006,2538,3.006,2539,3.006,2540,2.783,2541,2.605,2542,3.006,2543,2.783,2544,3.006,2545,3.006,2546,3.006,2547,3.006,2548,3.006,2549,3.006,2550,3.006,2551,4.624,2552,3.006,2553,4.285,2554,5.444,2555,3.006,2556,3.006,2557,3.006,2558,3.006,2559,3.006,2560,3.006,2561,3.006,2562,3.006,2563,3.006,2564,3.006,2565,3.006,2566,3.006,2567,3.006,2568,3.006,2569,4.285,2570,3.006,2571,3.006,2572,3.006,2573,3.006,2574,3.006,2575,3.006,2576,3.006,2577,3.006,2578,3.006,2579,3.006,2580,3.968,2581,4.285,2582,3.006,2583,3.006,2584,4.285,2585,4.285,2586,4.285,2587,4.285,2588,3.006,2589,5.337,2590,5.553,2591,4.994,2592,3.714,2593,3.006,2594,3.006,2595,3.006,2596,3.006,2597,3.006,2598,3.006,2599,3.006,2600,3.006,2601,3.006,2602,3.006,2603,3.006,2604,3.006,2605,3.006,2606,3.006,2607,3.006,2608,3.006,2609,3.006,2610,3.006,2611,3.006,2612,3.006,2613,3.006,2614,3.006,2615,3.006,2616,3.006,2617,3.006,2618,4.285,2619,3.006,2620,3.006,2621,3.006,2622,3.006,2623,5.041,2624,5.041,2625,5.444,2626,3.006,2627,3.006,2628,3.006,2629,3.006,2630,3.006,2631,3.006,2632,3.006,2633,3.006,2634,3.006,2635,4.285,2636,3.006,2637,3.006,2638,4.624,2639,3.006,2640,2.783,2641,3.006,2642,3.006,2643,2.783,2644,4.285,2645,4.285,2646,5.755,2647,4.994,2648,4.285,2649,3.006,2650,3.006,2651,3.006,2652,3.006,2653,4.285,2654,2.605,2655,3.714,2656,2.783,2657,3.006,2658,3.006,2659,3.006,2660,3.006,2661,5.041,2662,4.285,2663,3.006,2664,3.006,2665,3.006,2666,3.006,2667,3.006,2668,3.006,2669,4.285,2670,4.285,2671,3.006,2672,3.006,2673,3.006,2674,3.006,2675,3.006,2676,3.006,2677,3.006,2678,3.006,2679,3.006,2680,4.285,2681,3.006,2682,3.006,2683,4.285,2684,4.285,2685,3.006,2686,3.006,2687,3.006,2688,3.006,2689,3.006,2690,3.006,2691,3.006,2692,3.006,2693,2.783,2694,3.006,2695,3.006,2696,5.444,2697,3.006,2698,3.006,2699,3.006,2700,3.006,2701,3.006,2702,3.006,2739,5.356,2740,5.356,2741,3.756,2742,3.756,2743,3.756,2744,3.756,2745,3.756,2746,3.756,2747,3.756]],["title/components/RecordSearchRefinerComponent.html",[65,0.134,262,0.935]],["body/components/RecordSearchRefinerComponent.html",[0,0.978,2,0.164,3,0.151,4,0.076,7,0.318,8,0.62,14,3.429,16,0.504,18,0.665,19,0.01,20,0.459,21,0.441,22,0.477,25,0.978,28,0.617,30,0.375,31,0.363,45,0.722,46,0.701,47,0.197,48,0.095,63,0.007,64,0.007,65,0.24,66,1.058,67,1.145,68,1.451,72,1.377,73,1.699,74,1.086,76,0.854,77,1.432,78,1.058,97,1.511,106,0.831,110,1.074,111,0.743,112,0.583,118,2.498,119,0.764,129,0.885,192,0.808,193,1.451,194,1.306,195,1.451,196,1.137,197,1.145,198,1.863,199,1.004,200,1.086,201,1.086,202,1.115,203,1.655,204,1.058,205,1.115,206,1.145,207,1.004,208,1.145,209,1.004,210,1.004,211,1.086,212,1.708,213,1.489,214,1.086,215,1.145,216,1.086,217,1.173,218,1.206,219,1.004,220,1.031,221,1.145,222,1.058,223,1.413,224,1.753,225,1.086,226,1.489,227,1.004,228,1.145,229,1.058,230,1.058,231,1.058,232,1.004,233,1.086,234,1.004,235,1.145,236,1.004,237,1.115,238,1.145,239,1.058,240,0.978,241,1.145,242,1.086,243,1.377,244,1.145,245,1.086,246,1.145,247,1.058,248,1.145,249,1.058,250,1.115,251,1.304,252,1.489,253,1.004,254,1.489,255,1.058,256,1.145,257,1.489,258,1.058,259,1.058,260,1.086,261,1.145,262,1.62,263,1.732,264,1.145,265,1.058,266,1.145,267,1.058,268,1.145,269,1.004,270,1.663,271,1.058,272,1.145,273,1.058,274,1.489,275,1.004,276,1.489,277,1.086,278,1.145,279,1.031,280,1.031,281,1.004,282,1.145,283,1.058,284,1.145,285,1.004,286,1.145,287,1.031,288,1.086,289,1.086,290,1.004,291,1.145,292,1.058,293,0.902,294,1.145,295,1.058,296,1.004,297,1.145,298,1.086,299,1.086,300,1.145,301,1.058,302,1.058,303,1.145,304,1.086,305,0.786,306,1.145,307,1.004,308,1.058,309,1.145,310,1.058,311,1.145,312,1.086,313,1.53,314,1.058,315,1.145,316,1.058,317,1.145,516,1.837,687,3.527,804,1.617,1155,3.333,1172,3.447,1437,3.11,1474,4.011,1998,4.409,2431,4.831,2589,5.323,2590,5.026,2638,5.369,2661,5.369,2748,8.156,2749,5.013,2750,6.521,2751,6.521,2752,6.141,2753,7.247,2754,7.247,2755,5.013,2756,5.013,2757,5.013,2758,5.013,2759,5.013,2760,5.013,2761,5.013,2762,5.013,2763,5.013,2764,5.013,2765,5.013,2766,5.013,2767,6.521,2768,6.521,2769,4.831,2770,7.675,2771,6.521]],["title/components/RelatedObjectDataComponent.html",[65,0.134,265,0.935]],["body/components/RelatedObjectDataComponent.html",[0,0.765,2,0.129,3,0.119,4,0.06,7,0.44,8,0.608,16,0.547,18,0.707,19,0.011,20,0.513,21,0.488,22,0.66,24,0.651,25,0.765,28,0.727,30,0.419,31,0.284,43,1.136,45,0.565,46,0.548,47,0.193,48,0.121,49,0.947,63,0.006,64,0.006,65,0.244,66,0.828,67,0.896,68,1.229,71,2.148,72,1.349,73,1.685,74,0.85,76,0.941,77,1.402,78,0.828,82,0.544,83,1.385,84,1.952,85,1.322,86,1.872,87,1.976,88,2.007,91,1.781,92,1.781,93,1.598,94,1.46,95,1.85,96,1.952,97,1.214,98,1.364,99,1.089,100,1.598,101,1.46,102,2.013,103,1.503,104,1.105,105,1.503,106,0.916,107,1.295,108,1.503,109,1.503,110,1.198,111,0.947,112,0.744,113,0.994,114,1.503,115,1.503,119,0.598,121,1.198,122,1.687,123,1.021,124,1.377,125,1.538,126,1.422,127,1.198,128,1.198,129,0.868,130,1.265,131,1.377,132,1.642,133,1.048,134,1.048,135,1.377,136,1.166,137,0.995,138,1.377,139,0.995,140,1.377,141,0.85,142,0.969,143,0.663,144,0.772,145,0.772,146,1.377,147,1.135,148,1.687,149,1.598,150,1.048,153,1.377,154,1.801,155,1.377,156,1.377,157,1.076,158,1.377,159,1.459,160,0.786,163,2.971,164,2.434,168,1.338,170,1.459,174,2.566,175,2.887,176,2.906,178,2.906,179,2.215,182,2.566,192,0.633,193,1.229,194,1.106,195,1.229,196,1.154,197,0.896,198,1.732,199,0.786,200,0.85,201,0.85,202,0.873,203,1.46,204,0.828,205,0.873,206,0.896,207,0.786,208,0.896,209,0.786,210,0.786,211,0.85,212,1.663,213,1.261,214,0.85,215,0.896,216,0.85,217,0.994,218,1.021,219,0.786,220,0.807,221,0.896,222,0.828,223,1.197,224,1.584,225,0.85,226,1.261,227,0.786,228,0.896,229,0.828,230,0.828,231,1.166,232,0.786,233,0.85,234,0.786,235,0.896,236,0.786,237,0.873,238,0.896,239,0.828,240,0.765,241,0.896,242,0.85,243,1.166,244,0.896,245,0.85,246,0.896,247,0.828,248,0.896,249,0.828,250,0.873,251,1.15,252,1.261,253,0.786,254,1.261,255,0.828,256,0.896,257,1.261,258,0.828,259,0.828,260,0.85,261,0.896,262,0.828,263,0.786,264,0.896,265,1.465,266,0.896,267,0.828,268,0.896,269,0.786,270,1.503,271,0.828,272,0.896,273,0.828,274,1.261,275,0.786,276,1.261,277,0.85,278,0.896,279,0.807,280,0.807,281,0.786,282,0.896,283,0.828,284,0.896,285,0.786,286,0.896,287,0.807,288,0.85,289,0.85,290,0.786,291,0.896,292,0.828,293,0.706,294,0.896,295,0.828,296,0.786,297,0.896,298,0.85,299,0.85,300,0.896,301,0.828,302,0.828,303,0.896,304,0.85,305,0.615,306,0.896,307,0.786,308,0.828,309,0.896,310,0.828,311,0.896,312,0.85,313,1.349,314,0.828,315,0.896,316,0.828,317,0.896,318,1.538,329,0.995,345,0.687,346,0.786,443,1.417,459,0.765,465,0.995,516,1.105,614,2.318,616,2.76,626,1.938,627,1.961,628,2.215,637,2.567,683,2.721,687,2.987,804,1.265,894,3.276,919,1.417,946,1.961,1137,3.32,1227,2.869,1354,2.215,1598,2.566,1609,2.566,1633,2.566,1680,2.721,1837,4.857,1973,2.215,2073,3.263,2224,2.721,2235,4.857,2236,3.45,2237,3.139,2238,3.45,2240,3.45,2301,2.906,2302,2.906,2303,4.857,2304,3.139,2305,3.139,2306,3.139,2307,2.721,2312,4.857,2313,3.139,2314,3.45,2315,3.139,2316,3.139,2321,2.906,2378,3.83,2379,2.869,2772,3.923,2773,5.523,2774,6.937,2775,6.101,2776,3.923,2777,3.923,2778,3.923,2779,3.923,2780,3.139,2781,3.923,2782,3.923,2783,3.923,2784,3.923,2785,3.923,2786,5.523,2787,3.923,2788,5.114,2789,3.45,2790,3.923,2791,3.923,2792,3.923,2793,3.923,2794,3.923,2795,5.523,2796,5.523,2797,5.523,2798,5.523,2799,6.937,2800,6.937,2801,5.523,2802,4.857,2803,5.523]],["title/components/RelatedObjectSelectorComponent.html",[65,0.134,267,0.935]],["body/components/RelatedObjectSelectorComponent.html",[0,0.754,2,0.127,3,0.117,4,0.059,7,0.437,8,0.603,14,3.174,16,0.548,18,0.703,19,0.011,20,0.524,21,0.487,22,0.656,24,0.649,25,0.754,28,0.726,30,0.402,31,0.28,39,1.09,40,3.935,41,3.446,42,3.792,43,1.304,44,1.248,45,0.557,46,0.541,47,0.192,48,0.12,49,0.94,63,0.006,64,0.006,65,0.239,66,0.817,67,0.883,68,1.217,71,2.144,72,1.154,73,1.684,74,0.838,76,0.659,77,1.241,78,0.817,82,0.539,83,1.366,84,1.937,85,1.318,86,1.867,87,1.748,88,1.995,91,1.764,92,1.764,93,1.582,94,1.661,95,1.836,96,1.937,97,1.309,98,1.351,99,1.081,100,1.582,101,1.449,102,2.009,103,1.482,104,1.09,105,1.482,106,0.907,107,1.282,108,1.482,109,1.482,110,1.211,111,0.94,112,0.738,113,1.141,114,1.482,115,1.482,118,1.482,119,0.59,121,1.181,122,1.67,123,1.011,124,1.357,125,1.526,126,1.411,127,1.181,128,1.181,129,0.936,130,1.248,131,1.357,132,1.626,133,1.034,134,1.034,135,1.357,136,1.15,137,0.981,138,1.357,139,0.981,140,1.357,141,0.838,142,0.956,143,0.657,144,0.765,145,0.765,146,1.357,147,1.119,148,1.67,149,1.582,150,1.034,153,1.357,154,1.787,155,1.357,156,1.357,157,1.062,158,1.357,159,1.439,160,0.775,168,1.319,170,1.439,175,2.872,176,2.866,177,2.866,178,2.866,179,2.184,182,2.53,192,0.624,193,1.217,194,1.095,195,1.217,196,1.078,197,0.883,198,1.724,199,0.775,200,0.838,201,0.838,202,0.861,203,1.449,204,0.817,205,0.861,206,0.883,207,0.775,208,0.883,209,0.775,210,0.775,211,0.838,212,1.658,213,1.249,214,0.838,215,0.883,216,0.838,217,0.984,218,1.011,219,0.775,220,0.795,221,0.883,222,0.817,223,1.185,224,1.575,225,0.838,226,1.249,227,0.775,228,0.883,229,0.817,230,0.817,231,0.817,232,0.775,233,0.838,234,0.775,235,0.883,236,0.775,237,0.861,238,0.883,239,0.817,240,0.754,241,0.883,242,0.838,243,1.154,244,0.883,245,0.838,246,0.883,247,0.817,248,0.883,249,0.817,250,0.861,251,1.309,252,1.249,253,0.775,254,1.249,255,0.817,256,0.883,257,1.249,258,0.817,259,0.817,260,0.838,261,0.883,262,0.817,263,1.27,264,0.883,265,0.817,266,0.883,267,1.455,268,0.883,269,0.775,270,1.494,271,0.817,272,0.883,273,0.817,274,1.249,275,0.775,276,1.249,277,0.838,278,0.883,279,0.795,280,0.795,281,0.775,282,0.883,283,0.817,284,0.883,285,0.775,286,0.883,287,0.795,288,0.838,289,0.838,290,0.775,291,0.883,292,0.817,293,0.696,294,0.883,295,0.817,296,0.775,297,0.883,298,0.838,299,1.375,300,0.883,301,0.817,302,0.817,303,0.883,304,0.838,305,0.607,306,0.883,307,0.775,308,0.817,309,0.883,310,0.817,311,0.883,312,0.838,313,1.339,314,0.817,315,0.883,316,0.817,317,0.883,318,1.526,320,1.748,329,0.981,345,0.678,384,0.678,459,0.754,516,1.09,521,1.813,614,2.285,616,2.733,626,1.919,637,1.798,687,2.958,804,2.046,867,2.542,883,4.149,894,2.299,954,2.375,955,5.579,1137,2.841,1172,3.096,1227,2.841,1338,2.184,1354,2.184,1598,2.53,1609,3.577,2073,3.231,2224,2.683,2301,2.866,2302,2.866,2306,3.095,2321,2.866,2378,3.792,2379,2.841,2640,2.866,2775,3.402,2804,3.869,2805,5.469,2806,5.469,2807,6.894,2808,6.343,2809,3.869,2810,3.869,2811,3.869,2812,3.869,2813,3.869,2814,3.869,2815,3.869,2816,3.869,2817,3.869,2818,3.869,2819,3.869,2820,3.869,2821,3.869,2822,3.869,2823,3.869,2824,3.869,2825,3.869,2826,5.469,2827,5.469,2828,5.469,2829,6.894,2830,5.469,2831,3.869,2832,3.869,2833,3.869,2834,3.869,2835,3.869,2836,3.869,2837,3.869,2838,3.869,2839,3.869,2840,3.869,2841,3.869,2842,3.869,2843,3.869,2844,3.869,2845,3.869,2846,3.869,2847,3.869,2848,3.869,2849,3.869,2850,3.869,2851,3.869,2852,6.894,2853,4.81,2854,5.469]],["title/classes/RepeatableComponent.html",[48,0.084,1329,2.3]],["body/classes/RepeatableComponent.html",[2,0.111,3,0.102,4,0.051,7,0.372,8,0.558,14,2.467,15,2.081,16,0.525,18,0.703,19,0.011,20,0.457,21,0.456,22,0.685,24,0.678,25,0.965,28,0.743,30,0.396,31,0.359,45,0.485,46,0.471,47,0.218,48,0.145,49,1.103,63,0.006,64,0.006,65,0.195,71,2.028,73,0.915,75,2.119,76,0.844,82,0.488,83,1.354,84,1.792,85,1.369,86,1.905,87,1.64,88,1.872,91,1.597,92,1.597,93,1.433,94,1.477,95,2.155,96,1.792,97,0.64,98,1.598,99,0.574,102,1.858,106,0.559,110,1.132,111,0.733,112,0.802,113,1.375,118,1.897,119,0.895,121,1.029,122,1.512,123,1.412,124,1.182,125,1.412,126,1.306,127,1.029,128,1.029,129,1.091,130,1.087,131,1.182,132,1.471,133,0.901,134,0.901,135,1.182,136,1.002,137,0.854,138,1.182,139,1.255,140,1.182,141,0.73,142,1.223,143,0.595,144,0.692,145,0.692,146,1.182,147,0.975,148,1.512,149,1.433,150,0.901,153,1.182,154,0.949,155,1.182,156,1.182,157,0.925,158,1.182,159,1.253,162,1.087,168,2.001,170,2.182,175,1.331,180,1.405,196,0.499,251,1.164,269,0.675,270,1.272,275,0.991,318,1.658,320,1.255,329,1.255,332,1.253,335,1.922,344,1.217,345,0.59,355,1.217,356,1.087,364,1.149,369,1.291,370,1.291,371,1.182,384,1.45,388,1.642,393,0.901,394,1.029,412,2.269,463,1.788,465,0.854,494,0.925,516,2.098,522,1.291,552,0.949,558,1.182,616,2.933,617,2.337,619,3.433,620,4.069,621,3.433,623,2.337,626,1.182,804,2.323,926,2.815,1016,2.39,1059,2.337,1065,3.499,1078,2.09,1115,1.991,1150,2.496,1155,1.463,1158,1.75,1162,4.223,1163,3.679,1164,1.75,1165,3.233,1166,3.115,1167,3.742,1168,2.925,1169,2.474,1172,2.223,1174,2.925,1175,2.204,1176,3.667,1177,2.337,1178,4.468,1179,2.496,1180,2.496,1181,3.667,1182,2.204,1183,2.496,1184,2.496,1185,2.496,1186,2.496,1187,2.496,1188,2.496,1189,2.496,1190,2.496,1191,2.496,1192,2.496,1193,2.496,1194,2.496,1195,2.496,1196,2.496,1197,2.496,1198,2.496,1199,2.496,1200,2.496,1201,2.496,1202,4.347,1203,2.337,1204,2.496,1205,2.496,1206,2.496,1207,2.496,1208,2.496,1209,3.667,1210,3.667,1211,3.667,1212,2.496,1213,3.667,1214,2.496,1215,2.496,1216,2.496,1217,2.496,1218,2.496,1219,2.496,1220,3.667,1221,4.485,1222,2.496,1223,2.496,1224,2.496,1225,2.496,1226,2.496,1227,3.742,1228,3.071,1229,3.667,1230,3.071,1231,4.347,1232,3.667,1233,2.496,1234,2.496,1235,2.496,1236,2.496,1237,4.791,1238,3.667,1239,4.347,1240,4.347,1241,2.496,1242,2.496,1243,3.667,1244,3.667,1245,4.23,1246,2.496,1247,2.496,1248,2.496,1249,3.667,1250,2.496,1251,2.496,1252,2.496,1253,2.496,1254,4.791,1255,2.496,1256,2.496,1257,2.496,1258,3.667,1259,2.496,1260,2.496,1261,2.496,1262,3.667,1263,2.496,1264,2.496,1265,2.496,1266,2.496,1267,2.496,1268,2.496,1269,2.496,1270,2.678,1271,2.496,1272,2.496,1273,2.496,1274,2.496,1275,2.496,1276,2.496,1277,2.496,1278,2.496,1279,2.496,1280,2.496,1281,2.496,1282,3.667,1283,2.925,1284,2.496,1285,2.496,1286,2.496,1287,2.496,1288,2.496,1289,2.496,1290,2.496,1291,2.496,1292,2.496,1293,2.204,1294,2.496,1295,2.496,1296,2.496,1297,4.791,1298,3.667,1299,3.667,1300,2.496,1301,2.496,1302,2.496,1303,2.496,1304,4.347,1305,2.496,1306,2.496,1307,2.09,1308,2.09,1309,2.496,1310,3.667,1311,2.496,1312,2.496,1313,2.496,1314,2.204,1315,3.667,1316,2.496,1317,2.496,1318,2.496,1319,2.204,1320,2.496,1321,2.496,1322,2.496,1323,2.496,1324,2.496,1325,2.496,1326,2.496,1327,2.09,1328,4.347,1329,3.36,1330,3.313,1331,2.925,1332,3.313,1333,2.925,1334,4.347,1335,2.496,1336,2.496,1337,4.347,1338,1.902,1339,1.902,1340,2.496,1341,2.496,1342,1.823,1343,1.823,1344,1.823,1345,2.678,1346,3.667,1347,2.496,1348,2.496,1349,2.496,1350,2.496,1351,2.496,1352,2.496,1353,2.496,1354,1.902,1355,3.667,1356,3.667,1357,2.496,1358,2.496,1359,4.791,1360,4.791,1361,4.791,1362,4.347,1363,3.667,1364,2.496,1365,2.496,1366,4.347,1367,3.667,1368,2.496,1369,2.496,1370,2.496,1371,2.496,1372,2.496,1373,2.496,1374,2.496,1375,2.496,1376,2.496,1377,2.496,1378,2.496,1379,2.496,1380,3.667,1381,3.667,1382,2.496,1383,2.496,1384,2.496,1385,3.667,1386,2.496,1387,2.496,1388,2.496,1389,2.496,1390,2.496,1391,2.496,1392,2.496,1393,2.496,1394,2.496,1395,2.496,1396,2.496,1397,3.667,1398,5.337,1399,2.496,1400,2.496,1401,2.496,1402,2.496,1403,2.496,2855,3.433,2856,3.433,2857,3.37,2858,3.37,2859,3.37,2860,3.37]],["title/components/RepeatableContributorComponent.html",[65,0.134,269,0.887]],["body/components/RepeatableContributorComponent.html",[2,0.097,3,0.089,4,0.045,7,0.343,8,0.426,14,3.161,15,1.883,16,0.494,18,0.748,19,0.011,20,0.476,21,0.432,22,0.677,24,0.601,25,1.057,28,0.723,30,0.38,31,0.324,45,0.424,46,0.412,47,0.215,48,0.13,49,1.055,63,0.005,64,0.005,65,0.207,66,0.622,67,0.673,68,0.996,71,1.106,72,0.946,73,1.664,74,0.639,75,2.715,76,0.923,77,0.975,78,0.622,82,0.441,83,1.342,85,1.303,86,1.676,94,1.237,95,1.751,97,0.56,98,1.495,99,0.502,102,1.419,106,0.743,110,0.803,112,0.631,113,1.321,118,2.626,119,1.119,123,1.461,126,0.656,129,0.996,139,1.374,142,0.728,143,0.354,144,0.412,145,0.412,159,1.096,162,0.951,168,1.848,170,2.015,175,1.164,180,1.337,192,0.475,193,0.996,194,0.897,195,0.996,196,0.964,197,0.673,198,1.565,199,0.59,200,0.639,201,0.639,202,0.656,203,1.237,204,0.622,205,0.656,206,0.673,207,0.59,208,0.673,209,0.59,210,0.59,211,0.639,212,1.465,213,1.023,214,0.639,215,0.673,216,0.639,217,0.806,218,0.828,219,0.59,220,0.606,221,0.673,222,0.622,223,0.971,224,1.382,225,0.639,226,1.023,227,0.59,228,0.673,229,0.622,230,0.622,231,0.622,232,0.59,233,0.639,234,0.59,235,0.673,236,0.59,237,0.656,238,0.673,239,0.622,240,0.575,241,0.673,242,0.639,243,0.946,244,0.673,245,0.639,246,0.673,247,0.622,248,0.673,249,0.622,250,0.656,251,1.282,252,1.023,253,0.59,254,1.023,255,0.622,256,0.673,257,1.023,258,0.622,259,0.622,260,0.639,261,0.673,262,0.622,263,0.59,264,0.673,265,0.622,266,0.673,267,0.622,268,0.673,269,1.212,270,1.591,271,0.622,272,0.673,273,0.622,274,1.023,275,1.085,276,1.023,277,0.639,278,0.673,279,0.606,280,0.606,281,0.59,282,0.673,283,0.622,284,0.673,285,0.59,286,0.673,287,0.606,288,0.639,289,0.639,290,0.59,291,0.673,292,0.622,293,0.53,294,0.673,295,0.622,296,0.59,297,0.673,298,0.639,299,0.639,300,0.673,301,0.622,302,0.622,303,0.673,304,0.639,305,0.462,306,0.673,307,0.59,308,0.622,309,0.673,310,0.622,311,0.673,312,0.639,313,1.144,314,0.622,315,0.673,316,0.622,317,0.673,318,1.766,320,1.136,329,1.374,332,1.096,335,1.799,344,1.064,345,0.516,355,1.064,356,0.951,364,1.005,369,1.129,370,1.129,371,1.034,384,1.415,388,1.485,393,0.788,394,0.9,412,2.123,463,1.618,465,0.747,494,1.66,516,2.007,522,1.129,552,1.262,558,1.034,595,3.939,616,2.708,617,2.044,619,3.757,620,4.514,621,4.197,623,3.106,626,1.034,804,2.211,926,2.988,1016,2.207,1059,2.044,1065,3.273,1078,1.828,1115,1.741,1150,2.183,1155,1.28,1158,1.531,1162,4.104,1163,3.535,1164,1.531,1165,3.025,1166,2.915,1167,3.56,1168,2.646,1169,2.239,1172,2.011,1174,2.646,1175,1.928,1176,3.318,1177,2.044,1178,4.251,1179,2.183,1180,2.183,1181,3.318,1182,1.928,1183,2.183,1184,2.183,1185,2.183,1186,2.183,1187,2.183,1188,2.183,1189,2.183,1190,2.183,1191,2.183,1192,2.183,1193,2.183,1194,2.183,1195,2.183,1196,2.183,1197,2.183,1198,2.183,1199,2.183,1200,2.183,1201,2.183,1202,4.013,1203,2.044,1204,2.183,1205,2.183,1206,2.183,1207,2.183,1208,2.183,1209,3.318,1210,4.483,1211,3.318,1212,2.183,1213,4.483,1214,2.183,1215,2.183,1216,2.183,1217,2.183,1218,2.183,1219,2.183,1220,3.318,1221,4.197,1222,2.183,1223,2.183,1224,2.183,1225,2.183,1226,2.183,1227,3.56,1228,2.778,1229,3.318,1230,2.778,1231,4.013,1232,3.318,1233,2.183,1234,4.013,1235,2.183,1236,2.183,1237,4.483,1238,3.318,1239,4.013,1240,4.013,1241,2.183,1242,2.183,1243,3.318,1244,3.318,1245,3.958,1246,2.183,1247,2.183,1248,2.183,1249,3.318,1250,2.183,1251,2.183,1252,2.183,1253,2.183,1254,4.483,1255,2.183,1256,2.183,1257,2.183,1258,3.318,1259,2.183,1260,2.183,1261,2.183,1262,3.318,1263,2.183,1264,2.183,1265,2.183,1266,2.183,1267,2.183,1268,2.183,1269,2.183,1270,2.423,1271,2.183,1272,2.183,1273,2.183,1274,2.183,1275,2.183,1276,2.183,1277,2.183,1278,2.183,1279,2.183,1280,2.183,1281,2.183,1282,3.318,1283,2.646,1284,2.183,1285,2.183,1286,2.183,1287,2.183,1288,2.183,1289,2.183,1290,2.183,1291,2.183,1292,2.183,1293,1.928,1294,2.183,1295,2.183,1296,2.183,1297,4.483,1298,3.318,1299,3.318,1300,2.183,1301,2.183,1302,2.183,1303,2.183,1304,4.013,1305,2.183,1306,2.183,1307,1.828,1308,1.828,1309,2.183,1310,3.318,1311,2.183,1312,2.183,1313,2.183,1314,1.928,1315,3.318,1316,2.183,1317,2.183,1318,2.183,1319,1.928,1320,2.183,1321,2.183,1322,2.183,1323,2.183,1324,2.183,1325,2.183,1326,2.183,1327,1.828,1328,4.013,1329,3.813,1330,3.416,1331,2.646,1332,3.416,1333,2.646,1334,4.013,1335,2.183,1336,2.183,1337,4.013,1338,1.664,1339,1.664,1340,2.183,1341,2.183,1342,1.594,1343,1.594,1344,1.594,1345,3.273,1346,4.483,1347,2.183,1348,2.183,1349,2.183,1350,2.183,1351,2.183,1352,2.183,1353,2.183,1354,2.529,1355,5.077,1356,5.077,1357,4.013,1358,4.013,1359,5.438,1360,5.853,1361,5.853,1362,5.569,1363,4.483,1364,4.013,1365,4.013,1366,5.569,1367,5.077,1368,4.013,1369,4.013,1370,3.318,1371,4.013,1372,4.013,1373,4.013,1374,4.013,1375,4.013,1376,4.013,1377,4.013,1378,4.013,1379,2.183,1380,3.318,1381,3.318,1382,2.183,1383,2.183,1384,2.183,1385,3.318,1386,2.183,1387,2.183,1388,2.183,1389,2.183,1390,2.183,1391,2.183,1392,2.183,1393,2.183,1394,2.183,1395,2.183,1396,3.318,1397,3.318,1398,5.077,1399,2.183,1400,2.183,1401,2.183,1402,2.183,1403,3.318,2855,4.197,2856,4.197,2861,4.479,2862,4.479,2863,2.947,2864,2.947,2865,2.947,2866,2.947,2867,2.947,2868,2.947,2869,2.183,2870,2.183,2871,2.183,2872,2.947,2873,2.183,2874,6.051,2875,4.479,2876,2.947]],["title/components/RepeatableGroupComponent.html",[65,0.134,271,0.935]],["body/components/RepeatableGroupComponent.html",[2,0.129,3,0.119,4,0.06,7,0.249,8,0.526,16,0.464,18,0.652,19,0.01,20,0.551,21,0.485,22,0.526,24,0.453,25,0.766,28,0.544,30,0.331,31,0.285,45,0.566,46,0.549,47,0.193,48,0.163,49,0.948,63,0.007,64,0.006,65,0.25,66,0.829,67,0.897,68,1.23,72,1.167,73,1.685,74,0.852,76,1.09,77,1.151,78,0.829,82,0.545,83,1.36,94,1.585,95,1.851,97,0.746,98,1.366,99,1.426,102,1.627,106,1.258,110,0.582,111,0.582,112,0.457,118,2.118,119,0.843,123,1.022,139,2.102,141,1.754,143,0.664,144,0.773,145,0.773,149,2.009,180,1.69,192,0.634,193,1.23,194,1.107,195,1.23,196,1.028,197,0.897,198,1.733,199,0.787,200,0.852,201,0.852,202,0.874,203,1.461,204,0.829,205,0.874,206,0.897,207,0.787,208,0.897,209,0.787,210,0.787,211,0.852,212,1.603,213,1.263,214,0.852,215,0.897,216,0.852,217,0.995,218,1.022,219,0.787,220,0.808,221,0.897,222,0.829,223,1.198,224,1.585,225,0.852,226,1.263,227,0.787,228,0.897,229,0.829,230,1.602,231,1.602,232,0.787,233,0.852,234,0.787,235,0.897,236,0.787,237,0.874,238,0.897,239,0.829,240,0.766,241,0.897,242,0.852,243,1.167,244,0.897,245,0.852,246,0.897,247,0.829,248,0.897,249,0.829,250,0.874,251,1.506,252,1.263,253,0.787,254,1.263,255,0.829,256,0.897,257,1.263,258,0.829,259,0.829,260,0.852,261,0.897,262,0.829,263,0.787,264,0.897,265,0.829,266,0.897,267,0.829,268,0.897,269,0.787,270,1.725,271,1.68,272,0.897,273,0.829,274,1.263,275,0.787,276,1.263,277,0.852,278,0.897,279,0.808,280,0.808,281,0.787,282,0.897,283,0.829,284,0.897,285,0.787,286,0.897,287,0.808,288,0.852,289,0.852,290,0.787,291,0.897,292,0.829,293,0.707,294,0.897,295,0.829,296,0.787,297,0.897,298,0.852,299,0.852,300,0.897,301,0.829,302,0.829,303,0.897,304,0.852,305,0.616,306,0.897,307,0.787,308,0.829,309,0.897,310,0.829,311,0.897,312,0.852,313,1.35,314,0.829,315,0.897,316,0.829,317,0.897,318,1.33,320,1.977,327,1.233,328,1.34,329,0.996,335,1.901,393,1.855,394,2.234,401,2.162,454,2.896,459,0.766,558,2.436,576,2.041,919,2.31,926,2.31,954,2.778,1016,1.6,1026,4.184,1137,4.382,1149,3.266,1154,2.125,1178,4.306,1182,3.616,1329,4.05,1330,2.218,1332,2.218,1342,3.46,1343,3.46,1344,3.46,1345,3.46,1737,4.814,1812,4.322,1887,3.456,1888,3.456,1889,3.144,1890,7.469,1891,5.803,1892,5.626,1893,5.292,1894,6.474,1895,5.626,1896,6.749,1897,7.418,1898,7.116,1899,7.116,1900,7.62,1901,6.474,1902,7.116,1903,5.626,1904,5.626,1913,2.437,2855,3.834,2856,3.834,2869,2.911,2870,2.911,2871,2.911,2873,2.911,2877,3.929]],["title/components/RepeatableTextfieldComponent.html",[65,0.134,273,0.935]],["body/components/RepeatableTextfieldComponent.html",[2,0.137,3,0.126,4,0.064,7,0.265,8,0.549,16,0.512,18,0.763,19,0.011,20,0.491,21,0.456,22,0.678,24,0.613,25,0.816,28,0.659,30,0.37,31,0.303,43,0.861,45,0.602,46,0.585,47,0.244,48,0.15,49,1.198,63,0.007,64,0.007,65,0.248,66,0.883,67,0.956,68,1.285,72,1.22,73,1.691,74,0.907,76,1.276,77,1.191,78,0.883,80,2.46,82,0.569,83,1.304,86,1.768,94,1.768,95,1.915,97,0.795,99,0.985,101,1.629,102,1.673,106,0.694,110,0.62,111,0.62,112,0.672,118,2.733,119,1.141,123,1.517,129,0.784,141,1.678,143,0.694,144,0.808,145,0.808,160,0.838,168,2.257,170,2.46,175,2.956,192,0.675,193,1.285,194,1.157,195,1.285,196,1.109,197,0.956,198,1.768,199,0.838,200,0.907,201,0.907,202,0.931,203,1.511,204,0.883,205,0.931,206,0.956,207,0.838,208,0.956,209,0.838,210,0.838,211,0.907,212,1.631,213,1.319,214,0.907,215,0.956,216,0.907,217,1.04,218,1.068,219,0.838,220,0.861,221,0.956,222,0.883,223,1.252,224,1.629,225,0.907,226,1.319,227,0.838,228,0.956,229,0.883,230,0.883,231,0.883,232,0.838,233,0.907,234,0.838,235,0.956,236,0.838,237,0.931,238,0.956,239,0.883,240,0.816,241,0.956,242,0.907,243,1.22,244,0.956,245,0.907,246,0.956,247,0.883,248,0.956,249,1.22,250,1.285,251,1.393,252,1.319,253,0.838,254,1.319,255,0.883,256,0.956,257,1.319,258,0.883,259,0.883,260,0.907,261,0.956,262,0.883,263,0.838,264,0.956,265,0.883,266,0.956,267,0.883,268,0.956,269,0.838,270,1.678,271,0.883,272,0.956,273,1.634,274,1.319,275,0.838,276,1.319,277,0.907,278,0.956,279,0.861,280,0.861,281,0.838,282,0.956,283,0.883,284,0.956,285,0.838,286,0.956,287,0.861,288,0.907,289,0.907,290,0.838,291,0.956,292,1.22,293,0.753,294,0.956,295,1.22,296,0.838,297,0.956,298,0.907,299,0.907,300,0.956,301,0.883,302,0.883,303,0.956,304,0.907,305,0.656,306,0.956,307,0.838,308,0.883,309,0.956,310,0.883,311,0.956,312,0.907,313,1.397,314,0.883,315,0.956,316,0.883,317,0.956,318,1.802,320,2.214,327,1.313,328,1.427,329,1.678,346,0.838,347,1.007,384,0.733,391,2.716,393,1.768,394,2.179,401,1.544,494,2.124,544,2.148,552,1.628,913,3.584,926,2.389,1149,4.215,1154,2.264,1178,3.584,1283,2.472,1329,4.121,1330,3.735,1331,2.472,1332,3.735,1333,2.472,1342,3.579,1343,3.579,1344,3.579,1345,3.579,1559,3.909,1560,2.596,1746,3.413,1893,4.667,1913,2.596,2220,2.472,2248,3.1,2249,4.006,2250,3.1,2252,4.28,2254,2.596,2255,3.1,2256,5.285,2257,4.28,2258,3.1,2259,4.28,2260,4.588,2261,4.28,2262,4.28,2263,4.006,2264,4.28,2265,4.28,2266,5.285,2267,3.1,2268,4.28,2269,4.28,2270,4.28,2271,4.28,2855,4.948,2856,4.948,2869,3.1,2870,3.1,2871,3.1,2873,3.1,2878,4.185,2879,4.185,2880,4.185,2881,4.185]],["title/components/RepeatableVocabComponent.html",[65,0.134,275,0.887]],["body/components/RepeatableVocabComponent.html",[2,0.105,3,0.097,4,0.049,7,0.361,8,0.453,14,2.394,15,2.004,16,0.448,18,0.581,19,0.011,20,0.4,21,0.388,22,0.453,24,0.616,25,1.23,28,0.709,30,0.39,31,0.345,45,0.461,46,0.448,47,0.221,48,0.134,49,1.085,63,0.005,64,0.005,65,0.214,66,0.676,67,0.731,68,1.061,71,1.177,72,1.006,73,1.671,74,0.694,75,2.057,76,0.971,77,1.025,78,0.676,82,0.47,83,1.359,85,1.214,86,1.719,94,0.731,95,1.826,97,0.608,98,1.558,99,0.546,102,1.479,106,0.79,110,0.844,111,0.474,112,0.734,113,1.354,118,1.826,119,0.727,123,1.307,126,0.712,129,1.022,139,0.812,142,0.791,143,0.385,144,0.448,145,0.448,159,1.191,162,1.033,168,1.942,170,2.118,175,1.264,180,1.379,192,0.516,193,1.061,194,0.955,195,1.061,196,0.999,197,0.731,198,1.615,199,0.641,200,0.694,201,0.694,202,0.712,203,1.301,204,0.676,205,0.712,206,0.731,207,0.641,208,0.731,209,0.641,210,0.641,211,0.694,212,1.506,213,1.089,214,0.694,215,0.731,216,0.694,217,0.858,218,0.881,219,0.641,220,0.658,221,0.731,222,0.676,223,1.033,224,1.441,225,0.694,226,1.089,227,0.641,228,0.731,229,0.676,230,0.676,231,0.676,232,0.641,233,0.694,234,0.641,235,0.731,236,0.641,237,0.712,238,0.731,239,0.676,240,0.624,241,0.731,242,0.694,243,1.006,244,0.731,245,0.694,246,0.731,247,0.676,248,0.731,249,0.676,250,0.712,251,1.318,252,1.089,253,0.641,254,1.089,255,0.676,256,0.731,257,1.089,258,0.676,259,0.676,260,0.694,261,0.731,262,0.676,263,0.641,264,0.731,265,0.676,266,0.731,267,0.676,268,0.731,269,0.955,270,1.631,271,0.676,272,0.731,273,0.676,274,1.089,275,1.416,276,1.089,277,0.694,278,0.731,279,0.658,280,0.658,281,0.641,282,0.731,283,0.676,284,0.731,285,0.641,286,0.731,287,0.658,288,0.694,289,0.694,290,0.641,291,0.731,292,0.676,293,0.576,294,0.731,295,0.676,296,0.641,297,0.731,298,0.694,299,0.694,300,0.731,301,0.676,302,0.676,303,0.731,304,0.694,305,0.502,306,0.731,307,0.641,308,0.676,309,0.731,310,0.676,311,0.731,312,0.694,313,1.202,314,0.676,315,0.731,316,0.676,317,0.731,318,1.37,320,1.793,329,1.209,332,1.191,335,1.875,344,1.156,345,0.561,355,1.156,356,1.033,364,1.092,369,1.227,370,1.227,371,1.123,384,1.437,388,1.581,393,1.522,394,1.927,412,2.214,463,1.722,465,0.812,494,0.879,516,2.064,522,1.227,552,0.902,558,1.673,616,2.846,617,2.22,619,3.306,620,3.949,621,3.306,623,2.22,626,1.123,804,2.281,926,2.869,1016,2.32,1059,2.22,1065,3.413,1078,1.986,1115,1.892,1150,2.372,1155,1.391,1158,1.663,1162,4.178,1163,3.625,1164,1.663,1165,3.153,1166,3.039,1167,3.673,1168,2.816,1169,2.383,1172,2.141,1174,2.816,1175,2.094,1176,3.531,1177,2.22,1178,4.387,1179,2.372,1180,2.372,1181,3.531,1182,2.094,1183,2.372,1184,2.372,1185,2.372,1186,2.372,1187,2.372,1188,2.372,1189,2.372,1190,2.372,1191,2.372,1192,2.372,1193,2.372,1194,2.372,1195,2.372,1196,2.372,1197,2.372,1198,2.372,1199,2.372,1200,2.372,1201,2.372,1202,4.219,1203,2.22,1204,2.372,1205,2.372,1206,2.372,1207,2.372,1208,2.372,1209,3.531,1210,3.531,1211,3.531,1212,2.372,1213,3.531,1214,2.372,1215,2.372,1216,2.372,1217,2.372,1218,2.372,1219,2.372,1220,3.531,1221,4.375,1222,2.372,1223,2.372,1224,2.372,1225,2.372,1226,2.372,1227,3.673,1228,2.957,1229,3.531,1230,2.957,1231,4.219,1232,3.531,1233,2.372,1234,2.372,1235,2.372,1236,2.372,1237,4.674,1238,3.531,1239,4.219,1240,4.219,1241,2.372,1242,2.372,1243,3.531,1244,3.531,1245,4.127,1246,2.372,1247,2.372,1248,2.372,1249,3.531,1250,2.372,1251,2.372,1252,2.372,1253,2.372,1254,4.674,1255,2.372,1256,2.372,1257,2.372,1258,3.531,1259,2.372,1260,2.372,1261,2.372,1262,3.531,1263,2.372,1264,2.372,1265,2.372,1266,2.372,1267,2.372,1268,2.372,1269,2.372,1270,2.579,1271,2.372,1272,2.372,1273,2.372,1274,2.372,1275,2.372,1276,2.372,1277,2.372,1278,2.372,1279,2.372,1280,2.372,1281,2.372,1282,3.531,1283,2.816,1284,2.372,1285,2.372,1286,2.372,1287,2.372,1288,2.372,1289,2.372,1290,2.372,1291,2.372,1292,2.372,1293,2.094,1294,2.372,1295,2.372,1296,2.372,1297,4.674,1298,3.531,1299,3.531,1300,2.372,1301,2.372,1302,2.372,1303,2.372,1304,4.219,1305,2.372,1306,2.372,1307,1.986,1308,1.986,1309,2.372,1310,3.531,1311,2.372,1312,2.372,1313,2.372,1314,2.094,1315,3.531,1316,2.372,1317,2.372,1318,2.372,1319,2.094,1320,2.372,1321,2.372,1322,2.372,1323,2.372,1324,2.372,1325,2.372,1326,2.372,1327,1.986,1328,4.219,1329,3.91,1330,3.215,1331,2.816,1332,3.215,1333,2.816,1334,4.219,1335,2.372,1336,2.372,1337,4.997,1338,1.808,1339,1.808,1340,2.372,1341,2.372,1342,3.081,1343,3.081,1344,3.081,1345,3.413,1346,3.531,1347,2.372,1348,2.372,1349,2.372,1350,2.372,1351,2.372,1352,2.372,1353,2.372,1354,1.808,1355,3.531,1356,3.531,1357,2.372,1358,2.372,1359,4.674,1360,4.674,1361,4.674,1362,4.219,1363,3.531,1364,2.372,1365,2.372,1366,4.219,1367,3.531,1368,2.372,1369,2.372,1370,2.372,1371,2.372,1372,2.372,1373,2.372,1374,2.372,1375,2.372,1376,2.372,1377,2.372,1378,2.372,1379,2.372,1380,3.531,1381,3.531,1382,2.372,1383,2.372,1384,2.372,1385,3.531,1386,2.372,1387,2.372,1388,2.372,1389,2.372,1390,2.372,1391,2.372,1392,2.372,1393,2.372,1394,2.372,1395,2.372,1396,2.372,1397,3.531,1398,5.239,1399,2.372,1400,2.372,1401,2.372,1402,2.372,1403,2.372,2855,3.306,2856,3.306,2869,2.372,2870,2.372,2871,2.372,2873,2.372,2882,3.202,2883,3.202]],["title/classes/Report.html",[48,0.084,2884,3.28]],["body/classes/Report.html",[2,0.216,3,0.199,4,0.1,7,0.417,16,0.546,19,0.01,20,0.535,21,0.495,24,0.73,47,0.233,48,0.155,63,0.009,64,0.009,82,0.76,123,1.514,894,3.701,946,3.291,954,3.668,2021,3.889,2307,5.857,2370,4.877,2371,4.877,2372,4.877,2373,5.79,2374,5.79,2375,5.79,2376,5.79,2769,6.257,2884,5.718,2885,6.977,2886,7.428,2887,6.583,2888,4.877]],["title/modules/ReportModule.html",[856,1.39,2889,3.28]],["body/modules/ReportModule.html",[2,0.204,3,0.188,4,0.095,19,0.01,30,0.465,31,0.452,32,1.956,39,1.757,47,0.226,48,0.118,63,0.008,64,0.008,125,1.5,192,1.005,277,1.941,336,2.388,345,1.092,346,1.603,347,1.5,565,2.708,856,2.345,858,2.621,859,3.38,860,2.729,865,3.868,866,3.473,867,2.898,868,2.708,870,3.735,871,3.735,872,2.898,873,3.735,874,3.882,875,3.882,878,4.988,879,3.116,880,3.239,881,4.988,882,4.988,1512,5.979,1513,4.988,2278,6.452,2889,6.655,2890,5.483,2891,5.483,2892,6.234,2893,5.483,2894,5.483,2895,6.381,2896,6.234,2897,6.234,2898,6.234]],["title/classes/ReportResults.html",[48,0.084,2888,3.28]],["body/classes/ReportResults.html",[2,0.218,3,0.201,4,0.101,7,0.421,16,0.537,19,0.01,20,0.421,21,0.487,24,0.673,47,0.234,48,0.156,63,0.009,64,0.009,82,0.764,123,1.65,894,3.628,946,4.233,954,2.885,2021,3.924,2307,4.606,2365,5.841,2366,5.841,2367,5.841,2370,6.275,2371,6.275,2372,6.275,2769,4.92,2884,4.92,2885,6.904,2886,5.841,2888,5.747,2899,6.642]],["title/injectables/ReportService.html",[0,0.864,2895,3.28]],["body/injectables/ReportService.html",[0,1.591,2,0.195,3,0.179,4,0.09,6,3.21,7,0.376,8,0.69,10,2.405,11,3.083,12,3.262,13,3.237,14,3.293,15,3.293,16,0.517,17,4.748,18,0.832,19,0.01,20,0.54,21,0.469,22,0.776,24,0.668,26,4.748,28,0.712,29,4.821,30,0.457,31,0.43,32,1.862,33,3.21,34,2.858,35,2.215,36,1.968,37,3.15,38,3.681,39,2.207,43,1.22,44,1.914,45,0.854,46,0.83,47,0.179,48,0.113,49,0.879,50,2.966,51,2.665,52,2.474,53,4.115,54,4.748,55,2.758,59,3.371,60,3.924,61,4.744,62,3.625,63,0.008,64,0.008,123,1.341,188,3.35,196,1.24,349,2.749,650,3.35,768,4.748,885,6.379,893,5.219,894,3.519,897,6.889,913,4.499,919,2.143,923,3.506,925,4.748,926,2.143,945,5.219,946,2.966,947,5.219,948,5.219,1016,2.417,2288,5.219,2884,5.803,2885,6.696,2888,5.373,2895,5.373,2900,7.253,2901,7.253,2902,5.934,2903,5.934,2904,5.934,2905,5.934,2906,5.934,2907,5.934,2908,5.934,2909,5.934,2910,5.934,2911,5.934]],["title/classes/Role.html",[48,0.084,2028,2.058]],["body/classes/Role.html",[2,0.215,3,0.198,4,0.1,7,0.415,16,0.518,19,0.01,20,0.545,21,0.485,24,0.745,47,0.255,48,0.163,63,0.009,64,0.009,82,0.758,110,0.97,133,1.75,305,1.403,483,2.298,661,4.344,919,2.365,1982,3.869,1990,3.402,1991,3.697,2020,6.247,2021,3.869,2022,6.453,2027,3.154,2028,3.919,2029,4.063,2912,6.549,2913,6.549,2914,6.549]],["title/injectables/RolesService.html",[0,0.864,2915,3.28]],["body/injectables/RolesService.html",[0,1.618,2,0.204,3,0.188,4,0.095,6,3.372,7,0.395,8,0.711,10,2.478,11,3.239,12,3.3,13,3.266,16,0.507,18,0.762,19,0.01,20,0.474,21,0.43,22,0.711,28,0.706,29,4.415,30,0.451,31,0.452,32,1.956,33,3.372,34,3.003,37,3.246,38,3.867,39,2.338,43,1.282,44,2.011,47,0.188,48,0.118,49,0.924,50,3.116,51,2.8,52,2.126,55,2.898,59,3.473,60,4.042,62,3.735,63,0.008,64,0.008,143,0.898,144,1.045,145,1.045,305,1.172,459,1.216,768,4.988,773,4.619,839,5.483,959,4.636,1137,3.882,1982,3.683,2028,3.856,2029,4.636,2915,5.536,2916,8.297,2917,8.297,2918,7.473,2919,7.473,2920,8.003,2921,5.929,2922,6.234,2923,6.234,2924,6.234]],["title/classes/SaveResult.html",[48,0.084,2029,2.747]],["body/classes/SaveResult.html",[2,0.217,3,0.2,4,0.101,7,0.419,16,0.49,19,0.01,20,0.49,21,0.472,24,0.743,47,0.255,48,0.163,63,0.009,64,0.009,82,0.762,110,1.215,133,1.766,305,1.351,483,2.967,661,4.864,919,2.386,1982,3.903,1990,3.432,1991,3.73,2020,6.075,2021,3.903,2022,6.075,2027,3.182,2028,3.812,2029,4.798,2925,6.607,2926,6.607]],["title/classes/SelectionComponent.html",[48,0.084,381,1.862]],["body/classes/SelectionComponent.html",[2,0.098,3,0.165,4,0.046,7,0.346,8,0.623,16,0.502,18,0.668,19,0.011,20,0.502,21,0.45,22,0.655,24,0.679,28,0.756,30,0.371,31,0.217,35,1.383,36,0.991,43,0.931,45,0.43,46,0.418,47,0.252,48,0.162,49,1.236,63,0.005,64,0.005,65,0.257,71,2.136,73,1.497,75,2.662,76,1.38,77,0.815,80,2.807,82,0.538,83,1.394,84,1.861,85,1.408,86,1.81,87,1.747,88,1.994,90,1.145,91,1.46,92,1.46,93,1.31,94,1.574,95,1.581,96,1.861,97,1.359,98,0.738,99,1.039,100,0.865,101,1.034,102,1.804,104,0.842,106,0.751,107,1.061,110,1.092,111,0.81,112,0.762,113,1.385,119,0.456,121,1.383,122,1.669,123,1.127,124,1.049,125,1.658,126,1.533,127,1.383,128,1.383,129,1.044,130,0.964,131,1.049,132,1.812,133,1.21,134,0.799,135,1.049,136,1.346,137,1.148,138,1.049,139,1.661,140,1.049,141,1.494,142,1.35,143,0.656,144,0.764,145,0.764,146,1.049,147,1.31,148,2.186,149,1.895,150,1.21,153,1.049,154,1.54,155,1.049,156,1.049,157,1.673,158,1.049,160,1.094,161,1.844,162,0.964,180,1.189,196,0.97,199,0.599,200,0.648,207,0.599,209,0.599,210,0.907,218,0.553,219,0.599,220,0.615,227,0.907,232,0.599,233,0.648,234,0.599,236,0.599,251,0.983,253,0.599,279,0.615,280,1.347,281,0.907,285,0.599,287,0.615,288,1.419,289,0.648,290,0.599,293,0.815,296,0.599,318,1.315,319,1.298,320,2.072,321,1.298,324,1.903,327,0.938,328,1.02,329,0.758,330,1.966,331,1.298,332,2.032,333,2.844,334,2.373,335,1.624,336,2.335,337,2.373,338,2.647,339,1.298,340,1.966,341,1.966,342,1.257,343,1.257,344,1.08,345,0.524,346,0.907,347,0.719,348,1.257,349,2.139,350,1.298,351,2.993,352,1.966,353,1.145,354,1.903,355,1.635,356,0.964,357,1.298,358,1.298,359,1.298,360,1.298,361,1.298,362,1.966,363,1.298,364,1.02,365,1.298,366,1.298,367,1.298,368,1.18,369,1.145,370,1.145,371,1.049,372,1.298,373,1.298,374,1.298,375,1.298,376,1.966,377,1.298,378,1.298,379,1.298,380,1.298,381,2.563,382,2.226,383,1.298,384,1.207,385,2.094,386,1.298,387,2.158,388,1.501,389,2.226,390,1.298,391,1.917,392,2.373,393,1.46,394,1.669,395,1.298,396,1.298,397,1.298,398,1.298,399,1.298,400,1.298,401,1.21,402,1.298,403,1.966,404,1.966,405,1.298,406,1.298,407,1.298,408,1.298,409,1.298,410,1.298,411,1.257,412,1.589,413,1.298,414,1.298,415,1.298,416,1.966,417,1.298,418,1.298,419,1.298,420,1.734,421,1.903,422,1.635,423,2.563,424,2.373,425,1.298,426,1.298,427,1.966,428,1.966,429,1.298,430,3.01,431,1.966,432,1.298,433,1.298,434,1.298,435,1.298,436,2.373,437,1.298,438,1.298,439,1.298,440,1.298,441,1.298,442,1.298,443,1.08,444,1.112,445,1.298,446,1.589,447,1.966,448,1.112,449,1.112,450,1.298,451,1.049,452,1.218,453,1.257,454,1.02,455,1.218,456,2.373,457,1.966,458,1.298,459,0.583,460,1.112,461,1.257,462,1.02,463,1.08,464,1.257,465,0.758,466,1.844,467,1.966,468,1.298,469,1.298,470,1.298,471,1.298,472,1.298,473,1.298,474,1.298,475,2.373,476,1.298,477,1.298,478,1.298,479,1.298,480,1.966,481,1.298,482,1.298,483,1.589,484,1.298,485,1.218,486,1.298,487,1.298,488,1.218,489,1.298,490,1.298,491,1.298,492,1.966,493,1.966,494,0.82,495,1.298,496,1.257,497,1.257,498,1.18,499,1.257,500,1.298,501,1.257,502,1.298,503,1.298,504,1.298,505,1.298,506,1.298,507,1.298,508,1.298,509,1.298,510,1.966,511,1.966,512,1.966,513,1.966,514,1.966,515,1.903,516,1.276,517,1.298,518,1.18,519,1.298,520,1.298,521,0.991,522,1.145,523,1.966,524,1.298,525,1.298,526,1.298,527,2.373,528,1.298,529,1.298,530,1.298,531,1.298,532,1.298,533,1.298,534,1.298,535,1.298,536,1.257,537,1.298,538,1.257,539,1.298,540,1.298,541,1.298,542,1.298,543,1.298,544,1.112,545,1.298,546,1.298,547,1.145,548,1.298,549,1.298,550,1.298,551,1.145,552,0.842,553,1.298,554,1.298,555,1.298,556,1.298,557,1.298,558,1.049,1131,3.14,2927,2.989,2928,2.989]],["title/components/SelectionFieldComponent.html",[65,0.134,281,0.887]],["body/components/SelectionFieldComponent.html",[2,0.092,3,0.159,4,0.043,7,0.333,8,0.561,16,0.444,18,0.649,19,0.011,20,0.495,21,0.403,22,0.561,24,0.63,25,0.547,28,0.746,30,0.363,31,0.203,35,1.317,36,0.93,43,0.887,45,0.404,46,0.392,47,0.251,48,0.159,49,1.224,63,0.005,64,0.005,65,0.257,66,0.592,67,0.641,68,0.96,71,2.011,72,0.911,73,1.67,74,0.608,75,2.61,76,1.376,77,1.146,78,0.592,80,2.756,82,0.518,83,1.38,84,0.857,85,1.354,86,1.454,87,1.094,88,1.248,90,1.075,94,1.454,96,0.857,97,1.329,98,0.693,99,1.005,100,0.812,101,0.985,102,1.011,104,0.79,106,0.871,107,1.011,110,0.874,111,0.639,112,0.686,113,1.362,118,1.652,119,0.428,121,0.857,122,0.857,123,0.797,125,1.264,126,1.312,127,0.857,128,0.857,129,0.95,132,1.282,133,0.75,136,0.834,137,0.711,139,1.496,141,1.517,142,1.065,143,0.518,144,0.603,145,0.603,147,0.812,148,1.944,149,1.521,150,0.75,154,1.215,157,1.442,160,1.052,161,1.757,162,0.905,180,1.15,192,0.452,193,0.96,194,0.864,195,0.96,196,1.098,197,0.641,198,1.535,199,0.864,200,0.935,201,0.608,202,0.624,203,1.2,204,0.592,205,0.624,206,0.641,207,0.864,208,0.641,209,0.864,210,1.052,211,0.608,212,1.44,213,0.985,214,0.608,215,0.641,216,0.608,217,0.776,218,0.971,219,0.864,220,0.887,221,0.641,222,0.592,223,0.935,224,1.347,225,0.608,226,0.985,227,1.052,228,0.641,229,0.592,230,0.592,231,0.592,232,0.864,233,0.935,234,0.864,235,0.641,236,0.864,237,0.624,238,0.641,239,0.592,240,0.547,241,0.641,242,0.608,243,0.911,244,0.641,245,0.608,246,0.641,247,0.592,248,0.641,249,0.592,250,0.624,251,1.21,252,0.985,253,0.864,254,0.985,255,0.592,256,0.641,257,0.985,258,0.592,259,0.592,260,0.608,261,0.641,262,0.592,263,0.562,264,0.641,265,0.592,266,0.641,267,0.592,268,0.641,269,0.562,270,1.278,271,0.592,272,0.641,273,0.592,274,0.985,275,0.562,276,0.985,277,0.608,278,0.641,279,0.887,280,1.382,281,1.346,282,0.641,283,0.592,284,0.641,285,0.864,286,0.641,287,0.887,288,1.457,289,0.935,290,0.864,291,0.641,292,0.592,293,0.946,294,0.641,295,0.592,296,0.864,297,0.641,298,0.608,299,0.608,300,0.641,301,0.592,302,0.592,303,0.641,304,0.608,305,0.44,306,0.641,307,0.562,308,0.592,309,0.641,310,0.592,311,0.641,312,0.608,313,1.109,314,0.592,315,0.641,316,0.592,317,0.641,318,1.618,319,1.218,320,2.148,321,1.218,324,1.813,327,0.88,328,0.957,329,0.711,330,1.873,331,1.218,332,1.954,333,2.919,334,2.282,335,1.562,336,2.26,337,2.282,338,2.562,339,1.218,340,1.873,341,1.873,342,1.179,343,1.179,344,1.013,345,0.491,346,0.864,347,0.675,348,1.179,349,2.07,350,1.218,351,2.919,352,1.873,353,1.075,354,1.813,355,1.558,356,0.905,357,1.218,358,1.218,359,1.218,360,1.218,361,1.218,362,1.873,363,1.218,364,0.957,365,1.218,366,1.218,367,1.218,368,1.108,369,1.075,370,1.075,371,0.984,372,1.218,373,1.218,374,1.218,375,1.218,376,1.873,377,1.218,378,1.218,379,1.218,380,1.218,381,2.826,382,2.593,383,1.218,384,1.177,385,2.439,386,1.218,387,2.075,388,1.43,389,2.593,390,1.218,391,2.234,392,3.041,393,1.701,394,2.053,395,2.562,396,1.218,397,2.562,398,1.218,399,1.218,400,1.873,401,1.153,402,1.218,403,1.873,404,1.873,405,1.218,406,1.218,407,1.218,408,1.218,409,1.218,410,1.218,411,1.179,412,1.513,413,1.218,414,1.218,415,1.218,416,1.873,417,1.218,418,1.218,419,1.218,420,1.652,421,1.813,422,1.558,423,2.48,424,2.282,425,1.218,426,1.218,427,1.873,428,1.873,429,1.218,430,2.943,431,1.873,432,1.218,433,1.218,434,1.218,435,1.218,436,2.282,437,1.218,438,1.218,439,1.218,440,1.218,441,1.218,442,1.218,443,1.013,444,1.043,445,1.218,446,1.513,447,1.873,448,1.043,449,1.043,450,1.218,451,0.984,452,1.143,453,1.179,454,0.957,455,1.143,456,2.282,457,1.873,458,1.218,459,0.547,460,1.043,461,1.179,462,0.957,463,1.013,464,1.179,465,0.711,466,1.757,467,1.873,468,1.218,469,1.218,470,1.218,471,1.218,472,1.218,473,1.218,474,1.218,475,2.282,476,1.218,477,1.218,478,1.218,479,1.218,480,1.873,481,1.218,482,1.218,483,1.513,484,1.218,485,1.143,486,1.218,487,1.218,488,1.143,489,1.218,490,1.218,491,1.218,492,1.873,493,1.873,494,0.77,495,1.218,496,1.179,497,1.179,498,1.108,499,1.179,500,1.218,501,1.179,502,1.218,503,1.218,504,1.218,505,1.218,506,1.218,507,1.218,508,1.218,509,1.218,510,1.873,511,1.873,512,1.873,513,1.873,514,1.873,515,1.813,516,1.215,517,1.218,518,1.108,519,1.218,520,1.218,521,0.93,522,1.075,523,1.873,524,1.218,525,1.218,526,1.218,527,2.282,528,1.218,529,1.218,530,1.218,531,1.218,532,1.218,533,1.218,534,1.218,535,1.218,536,1.179,537,1.218,538,1.179,539,1.218,540,1.218,541,1.218,542,1.218,543,1.218,544,1.043,545,1.218,546,1.218,547,1.075,548,1.218,549,1.218,550,1.218,551,1.075,552,0.79,553,1.218,554,1.218,555,1.218,556,1.218,557,1.218,558,0.984,1131,2.991,1132,2.467,1134,2.467,2929,4.313,2930,4.313,2931,2.805,2932,2.805,2933,2.805,2934,2.805,2935,2.805,2936,2.805]],["title/modules/SharedModule.html",[856,1.39,865,1.988]],["body/modules/SharedModule.html",[1,5.069,2,0.109,3,0.1,4,0.05,13,2.663,14,1.393,15,3.01,19,0.011,30,0.465,31,0.24,39,2.142,42,2.298,44,1.069,47,0.194,48,0.063,63,0.006,64,0.006,65,0.1,66,1.743,68,0.737,125,1.177,159,1.232,162,1.069,163,3.328,192,0.534,199,1.653,201,1.774,202,0.737,204,1.743,207,1.653,209,1.522,211,1.789,216,1.774,219,1.653,222,1.743,227,1.653,230,1.743,232,1.653,234,1.653,236,1.653,247,1.743,249,1.728,250,0.737,253,1.653,255,1.728,258,1.743,259,1.743,265,1.605,267,1.728,269,1.653,271,1.743,273,1.743,275,1.653,279,1.563,281,1.653,285,1.653,287,1.698,290,1.653,292,1.743,293,1.473,295,1.743,296,1.653,301,1.743,302,0.699,307,1.653,308,1.743,310,1.743,313,0.699,314,1.743,316,1.743,336,1.269,343,1.393,345,0.58,346,1.164,401,0.885,565,1.439,654,1.721,856,1.534,858,1.393,859,1.992,860,1.982,865,4.14,866,2.273,867,1.54,868,1.439,870,2.444,871,2.444,872,1.54,873,2.444,874,2.54,879,1.656,883,4.683,1130,3.622,1135,5.304,1174,1.957,1175,2.167,1177,2.298,1270,3.873,1512,4.649,1513,2.651,1718,4.442,1773,4.042,1791,2.454,1844,5.304,1869,2.298,1913,2.055,1970,4.683,2027,1.596,2028,1.54,2066,3.912,2085,2.651,2915,5.304,2937,2.914,2938,2.914,2939,2.914,2940,2.914,2941,6.062,2942,4.965,2943,3.313,2944,3.313,2945,3.313,2946,2.914,2947,3.313,2948,8.376,2949,3.313,2950,3.313,2951,3.313,2952,3.313,2953,3.313,2954,3.313,2955,3.313,2956,3.313,2957,3.313,2958,3.313,2959,3.313,2960,4.889,2961,3.313,2962,5.811,2963,5.811,2964,2.454,2965,3.313,2966,4.889,2967,3.313,2968,3.313,2969,3.912,2970,3.313,2971,3.313,2972,5.811,2973,4.889,2974,5.811,2975,4.3,2976,3.313,2977,3.313,2978,3.313,2979,4.889,2980,3.313,2981,3.313,2982,3.313,2983,3.313,2984,3.313,2985,3.313,2986,3.313,2987,3.313]],["title/classes/SimpleComponent.html",[48,0.084,71,1.094]],["body/classes/SimpleComponent.html",[2,0.097,3,0.164,4,0.045,7,0.435,8,0.619,16,0.521,18,0.618,19,0.011,20,0.512,21,0.469,22,0.619,24,0.673,28,0.754,30,0.369,31,0.214,35,1.37,36,0.979,43,1.115,45,0.425,46,0.413,47,0.252,48,0.162,49,1.226,63,0.005,64,0.005,65,0.258,71,2.044,73,1.494,75,2.652,76,1.377,77,0.807,80,2.797,82,0.534,83,1.403,84,1.85,85,1.406,86,1.805,87,1.739,88,1.985,90,1.131,91,1.447,92,1.447,93,1.298,94,1.566,95,1.57,96,1.85,97,1.428,98,1.34,99,1.215,100,1.57,101,1.239,104,1.264,106,0.899,107,1.272,110,1.114,111,0.897,112,0.798,113,1.403,119,0.45,121,1.37,122,1.656,123,1.12,125,1.65,126,1.526,127,1.37,128,1.37,129,1.041,130,0.952,132,1.801,133,1.199,134,0.789,136,1.333,137,1.137,139,1.652,141,1.486,142,1.34,143,0.728,144,0.847,145,0.847,147,1.298,148,2.177,149,1.885,150,1.199,154,1.528,157,1.662,160,1.213,161,1.827,162,0.952,180,1.181,196,0.965,199,0.591,200,0.64,207,0.591,209,0.591,210,0.898,218,0.546,219,0.591,220,0.607,227,0.898,232,0.591,233,0.64,234,0.591,236,0.591,251,0.976,253,0.591,279,0.607,280,1.339,281,0.898,285,0.591,287,0.607,288,1.412,289,0.64,290,0.591,293,0.807,296,0.591,318,1.991,319,1.283,320,2.067,321,1.283,324,1.886,327,0.927,328,1.007,329,0.749,330,1.948,331,1.283,332,2.017,333,2.356,334,2.356,335,1.612,336,2.321,337,2.356,338,2.631,339,1.283,340,1.948,341,1.948,342,1.242,343,1.242,344,1.066,345,0.517,346,0.898,347,0.711,348,1.242,349,2.126,350,1.283,351,2.979,352,1.948,353,1.131,354,1.886,355,1.62,356,0.952,357,1.283,358,1.283,359,1.283,360,1.283,361,1.283,362,1.948,363,1.283,364,1.007,365,1.283,366,1.283,367,1.283,368,1.166,369,1.131,370,1.131,371,1.036,372,1.283,373,1.283,374,1.283,375,1.283,376,1.948,377,1.283,378,1.283,379,1.283,380,1.283,381,2.28,382,1.827,383,1.283,384,1.201,385,2.078,386,1.283,387,2.142,388,0.979,389,2.209,390,1.283,391,1.903,392,2.356,393,1.45,394,1.656,395,1.283,396,1.283,397,1.283,398,1.283,399,1.283,400,1.283,401,1.199,402,1.283,403,1.948,404,1.948,405,1.283,406,1.283,407,1.283,408,1.283,409,1.283,410,1.283,411,1.242,412,1.574,413,1.283,414,1.283,415,1.283,416,1.948,417,1.283,418,1.283,419,1.283,420,1.718,421,1.886,422,1.62,423,2.547,424,2.356,425,1.283,426,1.283,427,1.948,428,1.948,429,1.283,430,2.997,431,1.948,432,1.283,433,1.283,434,1.283,435,1.283,436,2.356,437,1.283,438,1.283,439,1.283,440,1.283,441,1.283,442,1.283,443,1.066,444,1.098,445,1.283,446,1.574,447,1.948,448,1.098,449,1.098,450,1.283,451,1.036,452,1.203,453,1.242,454,1.007,455,1.203,456,2.356,457,1.948,458,1.283,459,0.875,460,1.098,461,1.242,462,1.007,463,1.066,464,1.242,465,0.749,466,1.827,467,1.948,468,1.283,469,1.283,470,1.283,471,1.283,472,1.283,473,1.283,474,1.283,475,2.356,476,1.283,477,1.283,478,1.283,479,1.283,480,1.948,481,1.283,482,1.283,483,1.574,484,1.283,485,1.203,486,1.283,487,1.283,488,1.203,489,1.283,490,1.283,491,1.283,492,1.948,493,1.948,494,0.81,495,1.283,496,1.242,497,1.242,498,1.166,499,1.242,500,1.283,501,1.242,502,1.283,503,1.283,504,1.283,505,1.283,506,1.283,507,1.283,508,1.283,509,1.283,510,1.948,511,1.948,512,1.948,513,1.948,514,1.948,515,1.886,516,1.264,517,1.283,518,1.166,519,1.283,520,1.283,521,0.979,522,1.131,523,1.948,524,1.283,525,1.283,526,1.283,527,2.356,528,1.283,529,1.283,530,1.283,531,1.283,532,1.283,533,1.283,534,1.283,535,1.283,536,1.242,537,1.283,538,1.242,539,1.283,540,1.283,541,1.283,542,1.283,543,1.283,544,1.098,545,1.283,546,1.283,547,1.131,548,1.283,549,1.283,550,1.283,551,1.131,552,0.832,553,1.283,554,1.283,555,1.283,556,1.283,557,1.283,558,1.036,2988,2.953,2989,2.953,2990,2.953,2991,2.953,2992,2.953,2993,2.953,2994,2.953,2995,2.953,2996,2.953,2997,2.953,2998,2.953,2999,2.953,3000,2.953,3001,2.953,3002,2.953,3003,2.953]],["title/components/SortComponent.html",[65,0.134,283,0.935]],["body/components/SortComponent.html",[0,1.399,2,0.161,3,0.148,4,0.075,7,0.311,8,0.612,15,2.065,16,0.514,18,0.501,19,0.01,20,0.408,21,0.455,24,0.687,25,0.958,28,0.548,30,0.449,31,0.466,39,1.813,40,3.047,41,2.455,43,1.01,45,0.707,46,0.687,47,0.194,48,0.093,63,0.007,64,0.007,65,0.239,66,1.037,67,1.122,68,1.432,72,1.358,73,1.698,74,1.064,76,0.837,77,1.291,78,1.037,97,1.569,106,0.814,107,1.151,110,0.728,111,1.128,112,0.886,113,0.884,118,1.882,126,1.093,129,1.151,162,1.584,163,2.283,192,0.792,193,1.432,194,1.289,195,1.432,196,1.171,197,1.122,198,1.852,199,0.984,200,1.064,201,1.064,202,1.093,203,1.639,204,1.037,205,1.093,206,1.122,207,0.984,208,1.122,209,0.984,210,0.984,211,1.064,212,1.699,213,1.469,214,1.064,215,1.122,216,1.064,217,1.158,218,1.19,219,0.984,220,1.01,221,1.122,222,1.037,223,1.395,224,1.739,225,1.064,226,1.469,227,0.984,228,1.122,229,1.037,230,1.037,231,1.037,232,0.984,233,1.064,234,0.984,235,1.122,236,0.984,237,1.093,238,1.122,239,1.037,240,0.958,241,1.122,242,1.064,243,1.358,244,1.122,245,1.064,246,1.122,247,1.037,248,1.122,249,1.037,250,1.093,251,1.291,252,1.469,253,0.984,254,1.469,255,1.037,256,1.122,257,1.469,258,1.037,259,1.037,260,1.064,261,1.122,262,1.037,263,0.984,264,1.122,265,1.037,266,1.122,267,1.037,268,1.122,269,0.984,270,1.65,271,1.037,272,1.122,273,1.037,274,1.469,275,0.984,276,1.469,277,1.064,278,1.122,279,1.01,280,1.01,281,0.984,282,1.122,283,1.608,284,1.122,285,0.984,286,1.122,287,1.01,288,1.064,289,1.064,290,0.984,291,1.122,292,1.037,293,0.884,294,1.122,295,1.037,296,0.984,297,1.122,298,1.064,299,1.064,300,1.122,301,1.037,302,1.037,303,1.122,304,1.064,305,0.77,306,1.122,307,0.984,308,1.037,309,1.122,310,1.037,311,1.122,312,1.064,313,1.515,314,1.037,315,1.122,316,1.037,317,1.122,329,1.245,344,1.774,345,0.86,346,0.984,565,2.133,626,1.723,687,3.481,804,1.584,859,2.001,872,2.283,879,2.455,883,3.213,906,6.952,954,3.433,1014,4.451,1155,3.307,1172,3.222,1407,3.406,1437,3.047,1472,3.93,1473,3.93,1474,3.93,1970,3.213,1972,4.32,1973,2.773,1981,4.32,3004,4.912,3005,6.434,3006,7.615,3007,6.311,3008,7.176,3009,4.912,3010,4.912,3011,4.912,3012,4.912,3013,4.912,3014,4.912,3015,6.434,3016,4.912,3017,4.912,3018,4.912,3019,7.905,3020,7.176,3021,4.912,3022,4.912,3023,4.912,3024,4.912,3025,4.912]],["title/components/SpacerComponent.html",[65,0.134,285,0.887]],["body/components/SpacerComponent.html",[2,0.087,3,0.154,4,0.041,7,0.417,8,0.591,16,0.515,18,0.634,19,0.011,20,0.511,21,0.464,22,0.591,24,0.66,25,0.52,28,0.748,30,0.356,31,0.193,35,1.266,36,0.884,43,1.046,45,0.384,46,0.373,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.256,66,0.563,67,0.609,68,0.922,71,2.141,72,0.875,73,1.666,74,0.578,75,2.566,76,1.362,77,1.119,78,0.563,80,2.714,82,0.501,83,1.398,84,1.753,85,1.392,86,1.763,87,1.669,88,1.905,90,1.021,91,1.337,92,1.337,93,1.2,94,1.504,95,1.472,96,1.753,97,1.386,98,1.257,99,1.171,100,1.472,101,1.162,102,1.891,103,1.021,104,1.168,105,1.021,106,0.952,107,1.193,108,1.021,109,1.021,110,1.081,111,0.85,112,0.766,113,1.368,114,1.021,115,1.021,119,0.406,121,1.266,122,1.554,123,1.061,124,0.935,125,1.584,126,1.465,127,1.266,128,1.266,129,1.013,130,0.86,131,0.935,132,1.706,133,1.108,134,0.712,135,0.935,136,1.232,137,1.051,138,0.935,139,1.577,140,0.935,141,1.427,142,1.257,143,0.611,144,0.711,145,0.711,146,0.935,147,1.2,148,2.099,149,1.799,150,1.108,153,0.935,154,1.434,155,0.935,156,0.935,157,1.575,158,0.935,160,1.019,161,1.689,162,0.86,180,1.119,192,0.43,193,0.922,194,0.83,195,0.922,196,1.081,197,0.609,198,1.504,199,0.83,200,0.898,201,0.578,202,0.593,203,1.162,204,0.563,205,0.593,206,0.609,207,0.83,208,0.609,209,0.83,210,1.019,211,0.578,212,1.413,213,0.947,214,0.578,215,0.609,216,0.578,217,0.746,218,0.941,219,0.83,220,0.852,221,0.609,222,0.563,223,0.898,224,1.311,225,0.578,226,0.947,227,1.019,228,0.609,229,0.563,230,0.563,231,0.563,232,0.83,233,0.898,234,0.83,235,0.609,236,0.83,237,0.593,238,0.609,239,0.563,240,0.52,241,0.609,242,0.578,243,0.875,244,0.609,245,0.578,246,0.609,247,0.563,248,0.609,249,0.563,250,0.593,251,1.185,252,0.947,253,0.83,254,0.947,255,0.563,256,0.609,257,0.947,258,0.563,259,0.563,260,0.578,261,0.609,262,0.563,263,0.534,264,0.609,265,0.563,266,0.609,267,0.563,268,0.609,269,0.534,270,1.244,271,0.563,272,0.609,273,0.563,274,0.947,275,0.534,276,0.947,277,0.578,278,0.609,279,0.852,280,1.354,281,1.019,282,0.609,283,0.563,284,0.609,285,1.149,286,0.609,287,0.852,288,1.427,289,0.898,290,0.83,291,0.609,292,0.563,293,0.916,294,0.609,295,0.563,296,0.83,297,0.609,298,0.578,299,0.578,300,0.609,301,0.563,302,0.563,303,0.609,304,0.578,305,0.418,306,0.609,307,0.534,308,0.563,309,0.609,310,0.563,311,0.609,312,0.578,313,1.074,314,0.563,315,0.609,316,0.563,317,0.609,318,0.998,319,1.158,320,2.027,321,1.158,324,1.743,327,0.836,328,0.909,329,0.676,330,1.801,331,1.158,332,1.892,333,2.21,334,2.21,335,1.512,336,2.199,337,2.21,338,2.493,339,1.158,340,1.801,341,2.701,342,1.121,343,1.121,344,0.963,345,0.467,346,0.83,347,0.641,348,1.121,349,2.014,350,1.158,351,2.859,352,1.801,353,1.021,354,1.743,355,1.497,356,0.86,357,1.158,358,1.158,359,1.158,360,1.158,361,1.158,362,1.801,363,1.158,364,0.909,365,1.158,366,1.158,367,1.158,368,1.053,369,1.021,370,1.021,371,0.935,372,1.158,373,1.158,374,1.158,375,1.158,376,1.801,377,1.158,378,1.158,379,1.158,380,1.158,381,2.139,382,1.689,383,1.158,384,1.153,385,1.949,386,1.158,387,2.009,388,0.884,389,2.072,390,1.158,391,1.785,392,2.21,393,1.36,394,1.554,395,1.158,396,1.158,397,1.158,398,1.158,399,1.158,400,1.158,401,1.108,402,1.158,403,1.801,404,1.801,405,1.158,406,1.158,407,1.158,408,1.158,409,1.158,410,1.158,411,1.121,412,1.455,413,1.158,414,1.158,415,1.158,416,1.801,417,1.158,418,1.158,419,1.158,420,1.588,421,1.743,422,1.497,423,2.413,424,2.21,425,1.158,426,1.158,427,1.801,428,1.801,429,1.158,430,2.889,431,1.801,432,1.158,433,1.158,434,1.158,435,1.158,436,2.21,437,1.158,438,1.158,439,1.158,440,1.158,441,1.158,442,1.158,443,0.963,444,0.991,445,1.158,446,1.455,447,1.801,448,0.991,449,0.991,450,1.158,451,0.935,452,1.086,453,1.121,454,0.909,455,1.086,456,2.21,457,1.801,458,1.158,459,0.52,460,0.991,461,1.121,462,0.909,463,0.963,464,1.121,465,0.676,466,1.689,467,1.801,468,1.158,469,1.158,470,1.158,471,1.158,472,1.158,473,1.158,474,1.158,475,2.21,476,1.158,477,1.158,478,1.158,479,1.158,480,1.801,481,1.158,482,1.158,483,1.455,484,1.158,485,1.086,486,1.158,487,1.158,488,1.086,489,1.158,490,1.158,491,1.158,492,1.801,493,1.801,494,0.731,495,1.158,496,1.121,497,1.121,498,1.053,499,1.121,500,1.158,501,1.121,502,1.158,503,1.158,504,1.158,505,1.158,506,1.158,507,1.158,508,1.158,509,1.158,510,1.801,511,1.801,512,1.801,513,1.801,514,1.801,515,1.743,516,1.168,517,1.158,518,1.053,519,1.158,520,1.158,521,0.884,522,1.021,523,1.801,524,1.158,525,1.158,526,1.158,527,2.21,528,1.158,529,1.158,530,1.158,531,1.158,532,1.158,533,1.158,534,1.158,535,1.158,536,1.121,537,1.158,538,1.121,539,1.158,540,1.158,541,1.158,542,1.158,543,1.158,544,0.991,545,1.158,546,1.158,547,1.021,548,1.158,549,1.158,550,1.158,551,1.021,552,0.751,553,1.158,554,1.158,555,1.158,556,1.158,557,1.158,558,1.455,3026,2.665]],["title/pipes/StringTemplatePipe.html",[2277,3.071,2941,3.28]],["body/pipes/StringTemplatePipe.html",[0,1.191,2,0.2,3,0.185,4,0.093,8,0.581,16,0.468,18,0.623,19,0.01,20,0.503,21,0.351,22,0.581,24,0.691,28,0.757,30,0.316,31,0.442,47,0.185,48,0.116,63,0.008,64,0.009,72,1.289,76,1.352,82,0.602,85,1.329,111,0.905,112,0.711,129,0.829,196,1.285,451,2.891,460,2.271,552,1.721,1637,6.105,2277,5.501,2281,5.372,2283,5.906,2285,6.492,2287,5.372,2941,5.468,3027,6.108,3028,7.381,3029,6.108,3030,6.108,3031,7.381,3032,7.933,3033,6.492,3034,7.381,3035,8.749,3036,7.381,3037,6.492,3038,8.24,3039,8.24,3040,8.24,3041,7.381,3042,7.381,3043,7.381,3044,7.381,3045,6.492,3046,7.381,3047,7.381,3048,7.381,3049,7.381,3050,7.381,3051,6.108,3052,6.108,3053,6.108,3054,6.108,3055,6.108]],["title/components/TabOrAccordionContainerComponent.html",[65,0.134,290,0.887]],["body/components/TabOrAccordionContainerComponent.html",[2,0.086,3,0.152,4,0.04,7,0.414,8,0.586,10,0.869,16,0.524,18,0.667,19,0.011,20,0.514,21,0.466,22,0.622,24,0.658,25,0.511,28,0.749,30,0.354,31,0.19,35,1.249,36,0.869,43,1.035,45,0.377,46,0.366,47,0.248,48,0.158,49,1.21,63,0.005,64,0.005,65,0.256,66,0.553,67,0.598,68,0.91,71,2.138,72,0.864,73,1.665,74,0.568,75,2.552,76,1.358,77,1.11,78,0.553,80,2.7,82,0.496,83,1.396,84,1.737,85,1.389,86,1.755,87,1.658,88,1.892,90,1.004,91,1.319,92,1.319,93,1.184,94,1.493,95,1.456,96,1.737,97,1.379,98,1.243,99,1.164,100,1.456,101,1.149,102,1.885,103,1.004,104,1.153,105,1.004,106,0.943,107,1.18,108,1.004,109,1.004,110,1.1,111,0.842,112,0.761,113,1.361,114,1.004,115,1.004,119,0.624,121,1.249,122,1.537,123,1.051,124,0.919,125,1.573,126,1.454,127,1.249,128,1.249,129,1.008,130,0.845,131,0.919,132,1.69,133,1.093,134,0.7,135,0.919,136,1.216,137,1.037,138,0.919,139,1.564,140,0.919,141,1.417,142,1.243,143,0.605,144,0.703,145,0.703,146,0.919,147,1.184,148,2.085,149,1.785,150,1.093,153,0.919,154,1.418,155,0.919,156,0.919,157,1.56,158,0.919,160,1.008,161,1.666,162,0.845,180,1.109,192,0.422,193,0.91,194,0.819,195,0.91,196,1.076,197,0.598,198,1.493,199,0.819,200,0.887,201,0.568,202,0.583,203,1.149,204,0.553,205,0.583,206,0.598,207,0.819,208,0.598,209,0.819,210,1.008,211,0.568,212,1.404,213,0.934,214,0.568,215,0.598,216,0.568,217,0.736,218,0.93,219,0.819,220,0.841,221,0.598,222,0.553,223,0.887,224,1.299,225,0.568,226,0.934,227,1.008,228,0.598,229,0.553,230,0.553,231,0.553,232,0.819,233,0.887,234,0.819,235,0.598,236,0.819,237,0.583,238,0.598,239,0.553,240,0.511,241,0.598,242,0.568,243,0.864,244,0.598,245,0.568,246,0.598,247,0.553,248,0.598,249,0.553,250,0.583,251,1.176,252,0.934,253,0.819,254,0.934,255,0.553,256,0.598,257,0.934,258,0.553,259,0.553,260,0.568,261,0.598,262,0.553,263,0.525,264,0.598,265,0.553,266,0.598,267,0.553,268,0.598,269,0.525,270,1.232,271,0.553,272,0.598,273,0.553,274,0.934,275,0.525,276,0.934,277,0.568,278,0.598,279,0.841,280,1.344,281,1.008,282,0.598,283,0.553,284,0.598,285,0.819,286,0.598,287,0.841,288,1.417,289,0.887,290,1.139,291,0.598,292,0.553,293,0.906,294,0.598,295,0.553,296,0.819,297,0.598,298,0.568,299,0.568,300,0.598,301,0.553,302,0.553,303,0.598,304,0.568,305,0.411,306,0.598,307,0.525,308,0.553,309,0.598,310,0.553,311,0.598,312,0.568,313,1.062,314,0.553,315,0.598,316,0.553,317,0.598,318,1.484,319,1.138,320,2.02,321,1.138,324,1.72,327,0.822,328,0.893,329,0.664,330,1.777,331,1.138,332,2.294,333,2.186,334,2.186,335,1.69,336,2.179,337,2.186,338,2.47,339,1.138,340,1.777,341,1.777,342,1.101,343,1.101,344,0.946,345,0.459,346,0.819,347,0.63,348,1.101,349,1.995,350,1.138,351,2.839,352,1.777,353,1.004,354,1.72,355,1.477,356,0.845,357,1.138,358,1.138,359,1.138,360,1.138,361,1.138,362,1.777,363,1.138,364,0.893,365,1.138,366,1.138,367,1.138,368,1.035,369,1.004,370,1.004,371,0.919,372,1.138,373,1.138,374,1.138,375,1.138,376,1.777,377,1.138,378,1.138,379,1.138,380,1.138,381,2.116,382,1.666,383,1.138,384,1.145,385,1.928,386,1.138,387,1.987,388,0.869,389,2.05,390,1.138,391,1.766,392,2.186,393,1.345,394,1.537,395,1.138,396,1.138,397,1.138,398,1.138,399,1.138,400,1.138,401,1.093,402,1.138,403,1.777,404,1.777,405,1.138,406,1.138,407,1.138,408,1.138,409,1.138,410,1.138,411,1.101,412,1.435,413,1.138,414,1.138,415,1.777,416,2.839,417,2.186,418,2.186,419,2.186,420,1.567,421,2.116,422,1.477,423,2.871,424,2.186,425,1.138,426,1.138,427,1.777,428,1.777,429,1.138,430,2.871,431,1.777,432,1.138,433,1.138,434,1.138,435,1.138,436,2.186,437,1.138,438,2.47,439,1.138,440,1.138,441,1.138,442,1.138,443,0.946,444,0.974,445,1.138,446,1.435,447,1.777,448,0.974,449,0.974,450,1.138,451,0.919,452,1.067,453,1.101,454,0.893,455,1.067,456,2.186,457,1.777,458,1.138,459,0.798,460,0.974,461,1.101,462,0.893,463,0.946,464,1.101,465,0.664,466,1.666,467,1.777,468,1.138,469,1.138,470,1.138,471,1.138,472,1.138,473,1.138,474,1.138,475,2.186,476,1.138,477,1.138,478,1.138,479,1.138,480,1.777,481,1.138,482,1.138,483,1.435,484,1.138,485,1.067,486,1.138,487,1.138,488,1.067,489,1.138,490,1.138,491,1.138,492,1.777,493,1.777,494,0.719,495,1.138,496,1.101,497,1.101,498,1.035,499,1.101,500,1.138,501,1.101,502,1.138,503,1.138,504,1.138,505,1.138,506,1.138,507,1.138,508,1.138,509,1.138,510,1.777,511,1.777,512,1.777,513,1.777,514,1.777,515,1.72,516,1.153,517,1.138,518,1.035,519,1.138,520,1.138,521,0.869,522,1.004,523,1.777,524,1.138,525,1.138,526,1.138,527,2.186,528,1.138,529,1.138,530,1.138,531,1.138,532,1.138,533,1.138,534,1.138,535,1.138,536,1.101,537,1.138,538,1.101,539,1.138,540,1.138,541,1.138,542,1.138,543,1.138,544,0.974,545,1.138,546,1.138,547,1.004,548,1.138,549,1.138,550,1.138,551,1.004,552,0.738,553,1.138,554,1.138,555,1.138,556,1.138,557,1.138,558,0.919,3056,2.62,3057,4.09,3058,2.62,3059,2.62]],["title/components/TextAreaComponent.html",[65,0.134,292,0.935]],["body/components/TextAreaComponent.html",[2,0.136,3,0.125,4,0.063,7,0.417,8,0.545,16,0.519,18,0.671,19,0.011,20,0.45,21,0.471,22,0.545,24,0.66,25,0.807,28,0.56,30,0.368,31,0.3,43,0.851,45,0.596,46,0.579,47,0.244,48,0.15,49,1.194,63,0.007,64,0.007,65,0.25,66,0.874,67,0.945,68,1.276,72,1.21,73,1.69,74,0.897,76,1.271,77,1.184,78,0.874,80,2.941,82,0.565,83,1.3,85,0.925,86,1.762,93,1.659,94,1.762,97,1.249,99,0.977,101,1.622,102,1.854,106,0.686,110,0.613,111,1.052,112,0.868,113,0.745,118,2.196,119,0.874,123,1.426,129,0.964,134,1.106,137,1.049,141,1.672,143,0.79,144,0.92,145,0.92,160,0.829,168,2.243,170,2.446,175,2.945,192,0.667,193,1.276,194,1.148,195,1.276,196,1.105,197,0.945,198,1.762,199,0.829,200,0.897,201,0.897,202,0.921,203,1.502,204,0.874,205,0.921,206,0.945,207,0.829,208,0.945,209,0.829,210,0.829,211,0.897,212,1.626,213,1.309,214,0.897,215,0.945,216,0.897,217,1.032,218,1.06,219,0.829,220,0.851,221,0.945,222,0.874,223,1.243,224,1.622,225,0.897,226,1.309,227,0.829,228,0.945,229,0.874,230,0.874,231,0.874,232,0.829,233,0.897,234,0.829,235,0.945,236,0.829,237,0.921,238,0.945,239,0.874,240,0.807,241,0.945,242,0.897,243,1.21,244,0.945,245,0.897,246,0.945,247,0.874,248,0.945,249,1.21,250,1.276,251,1.451,252,1.309,253,0.829,254,1.309,255,0.874,256,0.945,257,1.309,258,0.874,259,0.874,260,0.897,261,0.945,262,0.874,263,0.829,264,0.945,265,0.874,266,0.945,267,0.874,268,0.945,269,0.829,270,1.616,271,0.874,272,0.945,273,1.389,274,1.309,275,0.829,276,1.309,277,0.897,278,0.945,279,0.851,280,0.851,281,0.829,282,0.945,283,0.874,284,0.945,285,0.829,286,0.945,287,0.851,288,0.897,289,0.897,290,0.829,291,0.945,292,1.499,293,0.745,294,0.945,295,1.21,296,0.829,297,0.945,298,0.897,299,0.897,300,0.945,301,0.874,302,0.874,303,0.945,304,0.897,305,0.649,306,0.945,307,0.829,308,0.874,309,0.945,310,0.874,311,0.945,312,0.897,313,1.389,314,0.874,315,0.945,316,0.874,317,0.945,318,1.583,320,2.211,327,1.299,328,1.412,329,1.801,346,0.829,347,0.996,384,0.725,391,2.707,393,1.106,394,1.264,401,1.532,459,0.807,494,2.117,544,2.132,552,1.853,913,3.556,926,1.495,1149,4.989,1151,3.976,1152,3.387,1153,3.387,1154,3.558,1155,2.49,1156,3.387,1158,2.15,1162,3.689,1163,2.761,1164,2.15,1165,2.069,1166,1.993,1167,2.15,1168,2.445,1169,2.069,1172,1.859,1283,2.445,1329,2.978,1330,2.337,1331,2.445,1332,2.337,1333,2.445,1342,2.239,1343,2.239,1344,2.239,1345,2.239,1559,3.886,1560,2.567,1746,3.387,1893,4.302,1905,3.066,1906,3.066,1907,3.066,1908,3.066,1909,3.066,1910,3.066,1911,3.066,1913,2.567,2220,2.445,2248,3.066,2249,4.562,2250,3.066,2252,4.247,2254,2.567,2255,3.066,2256,5.261,2257,4.247,2258,3.066,2259,4.247,2260,5.171,2261,4.247,2262,4.247,2263,3.976,2264,4.247,2265,4.247,2266,5.715,2267,3.066,2268,4.247,2269,4.247,2270,4.247,2271,4.247,3060,4.139,3061,4.139]],["title/components/TextBlockComponent.html",[65,0.134,293,0.797]],["body/components/TextBlockComponent.html",[2,0.086,3,0.153,4,0.04,7,0.415,8,0.588,16,0.518,18,0.631,19,0.011,20,0.51,21,0.467,22,0.588,24,0.669,25,0.514,28,0.748,30,0.354,31,0.191,35,1.255,36,0.874,43,1.039,45,0.379,46,0.369,47,0.249,48,0.159,49,1.211,63,0.005,64,0.005,65,0.256,66,0.557,67,0.602,68,0.915,71,2.139,72,0.868,73,1.665,74,0.571,75,2.557,76,1.359,77,1.113,78,0.557,80,3.148,82,0.498,83,1.396,84,1.743,85,1.39,86,1.758,87,1.662,88,1.897,90,1.01,91,1.326,92,1.326,93,1.19,94,1.497,95,1.462,96,1.743,97,1.381,98,1.248,99,1.166,100,1.462,101,1.154,102,1.887,103,1.01,104,1.158,105,1.01,106,0.946,107,1.184,108,1.01,109,1.01,110,1.078,111,0.917,112,0.797,113,1.364,114,1.01,115,1.01,119,0.402,121,1.255,122,1.543,123,1.055,124,0.925,125,1.577,126,1.458,127,1.255,128,1.255,129,1.01,130,0.85,131,0.925,132,1.696,133,1.099,134,0.705,135,0.925,136,1.222,137,1.042,138,0.925,139,1.569,140,0.925,141,1.42,142,1.248,143,0.607,144,0.706,145,0.706,146,0.925,147,1.19,148,2.09,149,1.79,150,1.099,153,0.925,154,1.424,155,0.925,156,0.925,157,1.566,158,0.925,160,1.012,161,1.674,162,0.85,180,1.113,192,0.425,193,0.915,194,0.823,195,0.915,196,1.078,197,0.602,198,1.497,199,0.823,200,0.891,201,0.571,202,0.587,203,1.154,204,0.557,205,0.587,206,0.602,207,0.823,208,0.602,209,0.823,210,1.012,211,0.571,212,1.407,213,0.939,214,0.571,215,0.602,216,0.571,217,0.74,218,0.934,219,0.823,220,0.845,221,0.602,222,0.557,223,0.891,224,1.303,225,0.571,226,0.939,227,1.012,228,0.602,229,0.557,230,0.557,231,0.557,232,0.823,233,0.891,234,0.823,235,0.602,236,0.823,237,0.587,238,0.602,239,0.557,240,0.514,241,0.602,242,0.571,243,0.868,244,0.602,245,0.571,246,0.602,247,0.557,248,0.602,249,0.557,250,0.587,251,1.232,252,0.939,253,0.823,254,0.939,255,0.557,256,0.602,257,0.939,258,0.557,259,0.557,260,0.571,261,0.602,262,0.557,263,0.528,264,0.602,265,0.557,266,0.602,267,0.557,268,0.602,269,0.528,270,1.237,271,0.557,272,0.602,273,0.557,274,0.939,275,0.528,276,0.939,277,0.571,278,0.602,279,0.845,280,1.348,281,1.012,282,0.602,283,0.557,284,0.602,285,0.823,286,0.602,287,0.845,288,1.42,289,0.891,290,0.823,291,0.602,292,0.557,293,1.179,294,0.602,295,0.557,296,0.823,297,0.602,298,0.571,299,0.571,300,0.602,301,0.557,302,0.557,303,0.602,304,0.571,305,0.413,306,0.602,307,0.528,308,0.557,309,0.602,310,0.557,311,0.602,312,0.571,313,1.067,314,0.557,315,0.602,316,0.557,317,0.602,318,1.216,319,1.145,320,2.023,321,1.145,324,1.728,327,0.827,328,0.899,329,0.668,330,1.785,331,1.145,332,1.879,333,2.194,334,2.194,335,1.839,336,2.186,337,2.194,338,2.478,339,1.145,340,1.785,341,1.785,342,1.108,343,1.108,344,0.952,345,0.462,346,0.823,347,0.634,348,1.108,349,2.002,350,1.145,351,2.846,352,1.785,353,1.01,354,1.728,355,1.485,356,0.85,357,1.145,358,1.145,359,1.145,360,1.145,361,1.145,362,1.785,363,1.145,364,0.899,365,1.145,366,1.145,367,1.145,368,1.041,369,1.01,370,1.01,371,0.925,372,1.145,373,1.145,374,1.145,375,1.145,376,1.785,377,1.145,378,1.145,379,1.145,380,1.145,381,2.124,382,1.674,383,1.145,384,1.148,385,1.936,386,1.145,387,1.995,388,0.874,389,2.058,390,1.145,391,1.773,392,2.194,393,1.653,394,2.001,395,1.145,396,1.145,397,1.145,398,1.145,399,1.145,400,1.145,401,1.099,402,1.145,403,1.785,404,1.785,405,1.145,406,1.145,407,1.145,408,1.145,409,1.145,410,1.145,411,1.108,412,1.442,413,1.145,414,1.145,415,1.145,416,1.785,417,1.145,418,1.145,419,1.145,420,1.575,421,1.728,422,1.485,423,2.399,424,2.194,425,1.145,426,1.145,427,1.785,428,1.785,429,1.145,430,2.878,431,1.785,432,1.145,433,1.145,434,1.145,435,1.145,436,2.194,437,1.145,438,1.145,439,1.145,440,1.145,441,1.145,442,1.145,443,0.952,444,0.98,445,1.145,446,1.442,447,2.194,448,0.98,449,0.98,450,1.145,451,0.925,452,1.074,453,1.108,454,0.899,455,1.074,456,2.194,457,1.785,458,1.145,459,0.514,460,0.98,461,1.108,462,0.899,463,0.952,464,1.108,465,0.668,466,1.674,467,1.785,468,1.145,469,1.145,470,1.145,471,1.145,472,1.145,473,1.145,474,1.145,475,2.194,476,1.145,477,1.145,478,1.145,479,1.145,480,1.785,481,1.145,482,1.145,483,1.442,484,1.145,485,1.074,486,1.145,487,1.145,488,1.074,489,1.145,490,1.145,491,1.145,492,1.785,493,1.785,494,0.723,495,1.145,496,1.108,497,1.108,498,1.041,499,1.108,500,1.145,501,1.108,502,1.145,503,1.145,504,1.145,505,1.145,506,1.145,507,1.145,508,1.145,509,1.145,510,1.785,511,1.785,512,1.785,513,1.785,514,1.785,515,1.728,516,1.158,517,1.145,518,1.041,519,1.145,520,1.145,521,0.874,522,1.01,523,1.785,524,1.145,525,1.145,526,1.145,527,2.194,528,1.145,529,1.145,530,1.145,531,1.145,532,1.145,533,1.145,534,1.145,535,1.145,536,1.108,537,1.145,538,1.108,539,1.145,540,1.145,541,1.145,542,1.145,543,1.145,544,0.98,545,1.145,546,1.145,547,1.01,548,1.145,549,1.145,550,1.145,551,1.01,552,0.743,553,1.145,554,1.145,555,1.145,556,1.145,557,1.145,558,0.925,3062,2.636,3063,2.636]],["title/components/TextFieldComponent.html",[65,0.134,295,0.935]],["body/components/TextFieldComponent.html",[2,0.138,3,0.127,4,0.064,7,0.421,8,0.551,16,0.504,18,0.677,19,0.011,20,0.453,21,0.466,22,0.551,24,0.663,25,0.821,28,0.494,30,0.37,31,0.305,43,0.865,45,0.606,46,0.588,47,0.245,48,0.151,49,1.199,63,0.007,64,0.007,65,0.248,66,0.888,67,0.961,68,1.29,72,1.224,73,1.691,74,0.912,76,1.278,77,1.194,78,0.888,80,2.79,83,1.21,85,0.935,86,1.771,93,1.678,94,1.771,97,1.26,99,0.988,101,1.633,102,1.863,106,0.698,110,0.623,111,1.06,112,0.873,113,0.757,118,2.222,119,0.642,123,1.434,129,0.971,134,1.125,137,1.067,141,1.681,143,0.697,144,0.811,145,0.811,160,0.843,168,2.263,170,2.468,175,2.962,192,0.679,193,1.29,194,1.161,195,1.29,196,1.111,197,0.961,198,1.771,199,0.843,200,0.912,201,0.912,202,0.936,203,1.516,204,0.888,205,0.936,206,0.961,207,0.843,208,0.961,209,0.843,210,0.843,211,0.912,212,1.634,213,1.324,214,0.912,215,0.961,216,0.912,217,1.044,218,1.072,219,0.843,220,0.865,221,0.961,222,0.888,223,1.257,224,1.633,225,0.912,226,1.324,227,0.843,228,0.961,229,0.888,230,0.888,231,0.888,232,0.843,233,0.912,234,0.843,235,0.961,236,0.843,237,0.936,238,0.961,239,0.888,240,0.821,241,0.961,242,0.912,243,1.224,244,0.961,245,0.912,246,0.961,247,0.888,248,0.961,249,1.224,250,1.29,251,1.43,252,1.324,253,0.843,254,1.324,255,0.888,256,0.961,257,1.324,258,0.888,259,0.888,260,0.912,261,0.961,262,0.888,263,0.843,264,0.961,265,0.888,266,0.961,267,0.888,268,0.961,269,0.843,270,1.626,271,0.888,272,0.961,273,1.401,274,1.324,275,0.843,276,1.324,277,0.912,278,0.961,279,0.865,280,0.865,281,0.843,282,0.961,283,0.888,284,0.961,285,0.843,286,0.961,287,0.865,288,0.912,289,0.912,290,0.843,291,0.961,292,1.224,293,0.757,294,0.961,295,1.51,296,0.843,297,0.961,298,0.912,299,0.912,300,0.961,301,0.888,302,0.888,303,0.961,304,0.912,305,0.66,306,0.961,307,0.843,308,0.888,309,0.961,310,0.888,311,0.961,312,0.912,313,1.401,314,0.888,315,0.961,316,0.888,317,0.961,318,1.013,320,2.215,327,1.321,328,1.435,329,1.683,346,0.843,347,1.013,384,0.737,391,2.721,393,1.125,394,1.285,401,1.55,494,1.821,544,2.157,552,1.634,913,3.598,926,1.52,1149,5.003,1151,4.022,1152,3.426,1153,3.426,1154,4.058,1155,2.519,1156,3.426,1158,2.186,1162,3.715,1163,2.793,1164,2.186,1165,2.103,1166,2.027,1167,2.186,1168,2.486,1169,2.103,1172,1.89,1283,2.486,1329,3.013,1330,2.376,1331,2.486,1332,2.376,1333,2.486,1342,2.276,1343,2.276,1344,2.276,1345,2.276,1559,3.92,1560,2.61,1746,3.426,1893,4.678,1905,3.118,1906,3.118,1907,3.118,1908,3.118,1909,3.118,1910,3.118,1911,3.118,1913,2.61,2220,2.486,2248,3.118,2249,4.022,2250,3.118,2252,4.296,2254,2.61,2255,3.118,2256,5.298,2257,4.296,2258,3.118,2259,4.296,2260,4.602,2261,4.296,2262,4.296,2263,4.022,2264,4.296,2265,4.296,2266,5.298,2267,3.118,2268,4.296,2269,4.296,2270,4.296,2271,4.296]],["title/components/ToggleComponent.html",[65,0.134,296,0.887]],["body/components/ToggleComponent.html",[2,0.087,3,0.154,4,0.041,7,0.417,8,0.591,16,0.515,18,0.634,19,0.011,20,0.511,21,0.464,22,0.591,24,0.66,25,0.519,28,0.748,30,0.356,31,0.193,35,1.264,36,0.882,43,1.045,45,0.383,46,0.372,47,0.249,48,0.159,49,1.213,63,0.005,64,0.005,65,0.256,66,0.562,67,0.608,68,0.921,71,2.141,72,0.874,73,1.666,74,0.577,75,2.565,76,1.362,77,1.118,78,0.562,80,2.713,82,0.501,83,1.398,84,1.751,85,1.391,86,1.762,87,1.668,88,1.904,90,1.019,91,1.335,92,1.335,93,1.198,94,1.502,95,1.471,96,1.751,97,1.385,98,1.255,99,1.17,100,1.471,101,1.161,102,1.89,103,1.019,104,1.167,105,1.019,106,0.951,107,1.191,108,1.019,109,1.019,110,1.081,111,0.85,112,0.766,113,1.367,114,1.019,115,1.019,119,0.406,121,1.264,122,1.552,123,1.06,124,0.934,125,1.583,126,1.464,127,1.264,128,1.264,129,1.012,130,0.858,131,0.934,132,1.704,133,1.106,134,0.711,135,0.934,136,1.231,137,1.05,138,0.934,139,1.575,140,0.934,141,1.426,142,1.255,143,0.61,144,0.71,145,0.71,146,0.934,147,1.198,148,2.277,149,1.798,150,1.106,153,0.934,154,1.432,155,0.934,156,0.934,157,1.573,158,0.934,160,1.018,161,1.686,162,0.858,180,1.118,192,0.429,193,0.921,194,0.829,195,0.921,196,1.081,197,0.608,198,1.502,199,0.829,200,0.897,201,0.577,202,0.592,203,1.161,204,0.562,205,0.592,206,0.608,207,0.829,208,0.608,209,0.829,210,1.018,211,0.577,212,1.412,213,0.945,214,0.577,215,0.608,216,0.577,217,0.745,218,0.94,219,0.829,220,0.851,221,0.608,222,0.562,223,0.897,224,1.31,225,0.577,226,0.945,227,1.018,228,0.608,229,0.562,230,0.562,231,0.562,232,0.829,233,0.897,234,0.829,235,0.608,236,0.829,237,0.592,238,0.608,239,0.562,240,0.519,241,0.608,242,0.577,243,0.874,244,0.608,245,0.577,246,0.608,247,0.562,248,0.608,249,0.562,250,0.592,251,1.184,252,0.945,253,0.829,254,0.945,255,0.562,256,0.608,257,0.945,258,0.562,259,0.562,260,0.577,261,0.608,262,0.562,263,0.533,264,0.608,265,0.562,266,0.608,267,0.562,268,0.608,269,0.533,270,1.243,271,0.562,272,0.608,273,0.562,274,0.945,275,0.533,276,0.945,277,0.577,278,0.608,279,0.851,280,1.353,281,1.018,282,0.608,283,0.562,284,0.608,285,0.829,286,0.608,287,0.851,288,1.426,289,0.897,290,0.829,291,0.608,292,0.562,293,0.915,294,0.608,295,0.562,296,1.148,297,0.608,298,0.577,299,0.577,300,0.608,301,0.562,302,0.562,303,0.608,304,0.577,305,0.417,306,0.608,307,0.533,308,0.562,309,0.608,310,0.562,311,0.608,312,0.577,313,1.073,314,0.562,315,0.608,316,0.562,317,0.608,318,0.996,319,1.156,320,2.061,321,1.156,324,1.741,327,0.835,328,0.907,329,0.675,330,1.798,331,1.156,332,1.89,333,2.207,334,2.207,335,1.511,336,2.197,337,2.207,338,2.49,339,1.156,340,1.798,341,1.798,342,1.119,343,1.119,344,0.961,345,0.466,346,0.829,347,0.64,348,1.119,349,2.012,350,1.156,351,2.857,352,1.798,353,1.019,354,1.741,355,1.495,356,0.858,357,1.156,358,1.156,359,1.156,360,1.156,361,1.156,362,1.798,363,1.156,364,0.907,365,1.156,366,1.156,367,1.156,368,1.051,369,1.019,370,1.019,371,0.934,372,1.156,373,1.156,374,1.156,375,1.156,376,1.798,377,1.156,378,1.156,379,1.156,380,1.156,381,2.137,382,1.686,383,1.156,384,1.152,385,1.947,386,1.156,387,2.007,388,0.882,389,2.07,390,1.156,391,1.783,392,2.207,393,1.358,394,1.552,395,1.156,396,1.156,397,1.156,398,1.156,399,1.156,400,1.156,401,1.106,402,1.156,403,1.798,404,1.798,405,1.156,406,1.156,407,1.156,408,1.156,409,1.156,410,1.156,411,1.119,412,1.453,413,1.156,414,1.156,415,1.156,416,1.798,417,1.156,418,1.156,419,1.156,420,1.586,421,1.741,422,1.495,423,2.411,424,2.207,425,1.156,426,1.156,427,1.798,428,1.798,429,1.156,430,2.887,431,1.798,432,1.156,433,1.156,434,1.156,435,1.156,436,2.207,437,1.156,438,1.156,439,1.156,440,1.156,441,1.156,442,1.156,443,0.961,444,0.989,445,1.156,446,1.453,447,1.798,448,0.989,449,0.989,450,1.156,451,0.934,452,1.084,453,1.119,454,0.907,455,1.084,456,2.207,457,1.798,458,1.156,459,0.519,460,0.989,461,1.119,462,0.907,463,0.961,464,1.119,465,0.675,466,1.686,467,1.798,468,1.156,469,1.156,470,1.156,471,1.156,472,1.156,473,1.156,474,1.156,475,2.207,476,1.156,477,1.156,478,1.156,479,1.156,480,1.798,481,1.156,482,1.156,483,1.453,484,1.156,485,1.084,486,1.156,487,1.156,488,1.084,489,1.156,490,1.156,491,1.156,492,1.798,493,1.798,494,0.73,495,1.156,496,1.119,497,1.119,498,1.051,499,1.119,500,1.156,501,1.119,502,1.156,503,1.156,504,1.156,505,1.156,506,1.156,507,1.156,508,1.156,509,1.156,510,1.798,511,1.798,512,1.798,513,1.798,514,1.798,515,1.741,516,1.167,517,1.156,518,1.051,519,1.156,520,1.156,521,0.882,522,1.019,523,1.798,524,1.156,525,1.156,526,1.156,527,2.207,528,1.156,529,1.156,530,1.156,531,1.156,532,1.156,533,1.156,534,1.156,535,1.156,536,1.119,537,1.156,538,1.119,539,1.156,540,1.156,541,1.156,542,1.156,543,1.156,544,0.989,545,1.156,546,1.156,547,1.019,548,1.156,549,1.156,550,1.156,551,1.019,552,0.75,553,1.156,554,1.156,555,1.156,556,1.156,557,1.156,558,0.934,3064,2.661]],["title/modules/TransferOwnerModule.html",[856,1.39,3065,3.28]],["body/modules/TransferOwnerModule.html",[2,0.212,3,0.195,4,0.098,19,0.01,30,0.46,31,0.468,32,2.029,47,0.231,48,0.123,63,0.009,64,0.009,192,1.043,298,1.949,345,1.132,346,1.628,347,1.556,565,2.808,856,2.396,858,2.718,859,3.31,860,2.604,865,3.9,866,3.549,867,3.005,868,2.808,870,3.817,871,3.817,872,3.005,873,3.817,874,3.967,875,3.967,880,3.358,3065,6.585,3066,5.686,3067,5.686,3068,6.465,3069,5.686,3070,6.465,3071,6.465]],["title/injectables/TranslationService.html",[0,0.864,15,1.862]],["body/injectables/TranslationService.html",[0,1.546,2,0.179,3,0.165,4,0.083,6,2.956,7,0.346,8,0.655,10,2.285,13,3.15,14,2.897,15,2.897,16,0.543,18,0.833,19,0.01,20,0.478,21,0.48,22,0.822,24,0.618,28,0.721,30,0.423,31,0.396,39,2.233,44,2.636,47,0.165,48,0.104,52,2.989,63,0.008,64,0.008,82,0.679,87,1.386,104,1.54,110,1.118,111,0.81,113,0.983,119,1.05,143,0.828,144,0.963,145,0.963,180,1.472,240,1.066,305,0.857,384,1.207,459,1.066,521,1.812,576,2.839,629,4.513,630,3.39,767,4.806,773,5.105,789,3.228,804,2.223,813,5.105,837,4.372,841,4.806,851,3.79,879,2.731,1016,2.226,1102,3.58,1111,3.228,1425,5.872,1432,5.872,1435,5.872,1634,3.39,1934,6.061,2010,3.79,2486,3.79,2529,3.79,2946,4.806,2964,5.105,3072,8.647,3073,6.891,3074,6.891,3075,5.465,3076,8.343,3077,6.891,3078,6.891,3079,5.465,3080,5.465,3081,5.465,3082,4.806,3083,5.465,3084,5.465,3085,5.465,3086,5.465,3087,5.465,3088,5.465,3089,4.048,3090,5.465,3091,5.465,3092,5.465,3093,5.465,3094,5.465,3095,3.574,3096,5.592,3097,6.891,3098,5.105,3099,5.465,3100,4.806,3101,7.548,3102,6.891,3103,8.471,3104,7.926,3105,4.372,3106,6.039,3107,4.806,3108,5.465,3109,5.465,3110,5.465,3111,5.465,3112,6.061,3113,5.465,3114,6.891,3115,5.465,3116,5.465,3117,5.465,3118,5.465,3119,6.891,3120,5.465,3121,5.465,3122,5.465]],["title/components/TreeNodeCheckboxComponent.html",[65,0.134,301,0.935]],["body/components/TreeNodeCheckboxComponent.html",[2,0.179,3,0.165,4,0.083,7,0.345,16,0.436,18,0.556,19,0.01,20,0.436,21,0.396,24,0.563,25,1.063,30,0.356,31,0.395,47,0.208,48,0.103,63,0.008,64,0.008,65,0.252,66,1.15,67,1.244,68,1.816,72,1.452,73,1.704,74,1.181,76,1.172,77,1.356,78,1.15,97,1.55,106,0.903,192,0.879,193,1.53,194,1.378,195,1.53,196,1.173,197,1.244,198,1.904,199,1.091,200,1.181,201,1.181,202,1.212,203,1.721,204,1.15,205,1.212,206,1.244,207,1.091,208,1.244,209,1.091,210,1.091,211,1.181,212,1.777,213,1.571,214,1.181,215,1.244,216,1.181,217,1.238,218,1.272,219,1.091,220,1.12,221,1.244,222,1.15,223,1.491,224,1.808,225,1.181,226,1.571,227,1.091,228,1.244,229,1.15,230,1.15,231,1.15,232,1.091,233,1.181,234,1.091,235,1.244,236,1.091,237,1.212,238,1.244,239,1.15,240,1.063,241,1.244,242,1.181,243,1.452,244,1.244,245,1.181,246,1.244,247,1.15,248,1.244,249,1.15,250,1.212,251,1.356,252,1.571,253,1.091,254,1.571,255,1.15,256,1.244,257,1.571,258,1.15,259,1.15,260,1.181,261,1.244,262,1.15,263,1.091,264,1.244,265,1.15,266,1.244,267,1.15,268,1.244,269,1.091,270,1.716,271,1.15,272,1.244,273,1.15,274,1.571,275,1.091,276,1.571,277,1.181,278,1.244,279,1.12,280,1.12,281,1.091,282,1.244,283,1.15,284,1.244,285,1.091,286,1.244,287,1.12,288,1.181,289,1.181,290,1.091,291,1.244,292,1.15,293,0.981,294,1.244,295,1.15,296,1.091,297,1.244,298,1.181,299,1.181,300,1.244,301,1.671,302,1.825,303,1.244,304,1.181,305,0.854,306,1.244,307,1.091,308,1.15,309,1.244,310,1.15,311,1.244,312,1.181,313,1.591,314,1.15,315,1.244,316,1.15,317,1.244,2975,4.792,3123,7.538,3124,5.449,3125,6.879,3126,6.879,3127,6.05,3128,7.538,3129,5.449,3130,7.538,3131,5.449,3132,5.449,3133,4.792]],["title/classes/User.html",[48,0.084,305,0.694]],["body/classes/User.html",[2,0.206,3,0.19,4,0.096,7,0.398,16,0.557,19,0.01,20,0.539,21,0.515,24,0.75,47,0.251,48,0.161,63,0.009,64,0.009,82,0.739,110,0.93,133,2.222,305,1.353,483,2.202,661,4.236,919,2.267,1982,3.708,1990,4.32,1991,4.695,2020,6.555,2021,3.708,2022,6.391,2027,4.005,2028,4.086,2029,3.893,3134,6.276,3135,6.276,3136,6.276,3137,6.276,3138,6.276,3139,6.276,3140,6.276,3141,6.276]],["title/interfaces/UserForm.html",[3142,2.747,3143,3.28]],["body/interfaces/UserForm.html",[2,0.195,3,0.179,4,0.09,7,0.376,19,0.01,20,0.517,21,0.501,24,0.742,28,0.725,30,0.423,43,1.221,45,0.855,46,0.83,47,0.247,63,0.009,64,0.008,82,0.715,106,1.203,107,1.837,112,0.691,126,1.614,129,0.806,142,1.467,180,1.528,196,0.88,345,1.04,384,1.04,451,2.864,516,1.673,626,2.084,637,2.76,1016,3.192,1230,3.684,1983,4.752,1990,4.24,1991,4.868,2027,3.931,2028,3.891,2065,3.684,2921,6.047,3142,4.501,3143,5.376,3144,5.223,3145,6.382,3146,7.257,3147,5.939,3148,4.4,3149,5.223,3150,4.752,3151,4.752,3152,5.223,3153,5.223,3154,5.223,3155,5.223,3156,5.223,3157,5.223,3158,5.223,3159,5.223,3160,5.223,3161,4.752,3162,4.752,3163,5.223,3164,7.584,3165,5.223,3166,6.382,3167,6.382,3168,5.223,3169,5.223,3170,5.223,3171,5.223,3172,5.223,3173,5.223,3174,5.939,3175,5.939,3176,5.939,3177,5.939,3178,5.939,3179,5.939]],["title/interfaces/UserForm-1.html",[926,1.342,3142,2.306,3143,2.753]],["body/interfaces/UserForm-1.html",[2,0.202,3,0.186,4,0.094,7,0.391,19,0.01,20,0.524,21,0.504,24,0.743,28,0.704,30,0.385,43,1.269,47,0.241,63,0.008,64,0.008,82,0.732,106,1.023,107,1.741,112,0.718,126,1.653,129,0.838,142,1.525,180,1.449,196,0.915,345,1.081,451,2.796,626,2.166,1016,3.026,1230,3.829,1983,4.939,1990,4.296,1991,4.777,2027,3.983,2028,3.933,2065,3.829,2921,6.126,3142,4.608,3143,5.503,3145,6.533,3149,5.429,3150,4.939,3151,4.939,3152,5.429,3153,5.429,3154,5.429,3155,5.429,3156,5.429,3157,5.429,3158,5.429,3159,5.429,3160,5.429,3161,4.939,3162,4.939,3163,5.429,3164,7.644,3165,5.429,3166,6.533,3167,6.533,3168,5.429,3169,5.429,3170,5.429,3171,5.429,3172,5.429,3180,5.429]],["title/modules/UserProfileModule.html",[856,1.39,3181,3.28]],["body/modules/UserProfileModule.html",[2,0.211,3,0.194,4,0.098,19,0.01,30,0.462,31,0.466,32,2.02,47,0.23,48,0.122,63,0.009,64,0.009,192,1.038,304,1.948,345,1.127,346,1.625,347,1.549,565,2.796,856,2.39,858,2.706,859,3.415,860,2.598,865,3.896,866,3.54,867,2.992,868,2.796,870,3.807,871,3.807,872,2.992,873,3.807,874,3.957,875,3.957,879,3.217,880,3.344,2043,5.661,2045,5.661,3181,6.581,3182,5.661,3183,5.661,3184,6.437,3185,5.661,3186,6.437,3187,6.437]],["title/injectables/UserSimpleService.html",[0,0.864,1970,2.896]],["body/injectables/UserSimpleService.html",[0,1.511,2,0.169,3,0.155,4,0.078,7,0.326,8,0.63,10,2.198,11,2.67,12,3.146,13,3.148,16,0.559,18,0.852,19,0.01,20,0.529,21,0.496,22,0.794,24,0.672,28,0.763,29,4.851,30,0.433,31,0.372,32,1.613,33,2.78,34,2.476,37,2.878,38,3.188,39,2.183,43,1.057,44,2.499,47,0.155,48,0.097,49,0.761,50,2.569,51,2.308,52,2.941,55,2.389,59,3.934,60,4.665,62,4.274,63,0.008,64,0.008,82,0.653,143,0.796,144,0.926,145,0.926,188,2.902,240,1.002,305,1.31,459,1.002,754,5.74,794,3.808,795,5.561,811,3.362,959,5.305,1102,2.67,1113,5.793,1137,3.443,1141,4.52,1148,4.52,1970,4.335,1982,3.037,1990,4.266,1991,4.141,2029,5.25,2921,6.335,3188,8.845,3189,5.14,3190,6.627,3191,6.627,3192,7.748,3193,7.748,3194,7.748,3195,6.627,3196,6.627,3197,7.748,3198,6.627,3199,6.627,3200,6.627,3201,6.627,3202,5.14,3203,6.627,3204,5.14,3205,5.14,3206,5.14,3207,5.14,3208,6.627,3209,5.14,3210,6.627,3211,5.14,3212,5.14,3213,6.627,3214,5.14,3215,6.627,3216,5.14,3217,5.14,3218,5.14,3219,5.14,3220,5.14,3221,4.52,3222,5.14,3223,3.915,3224,6.627,3225,5.14,3226,5.14,3227,5.14,3228,5.14,3229,5.14,3230,7.335,3231,5.14,3232,5.14,3233,5.14,3234,5.14,3235,5.14,3236,5.14]],["title/injectables/UtilityService.html",[0,0.864,1270,2.395]],["body/injectables/UtilityService.html",[0,1.256,2,0.131,3,0.12,4,0.061,6,2.154,7,0.252,8,0.531,16,0.521,18,0.838,19,0.011,20,0.521,21,0.473,22,0.782,24,0.708,28,0.767,30,0.395,31,0.288,35,1.704,36,1.32,39,1.572,44,2.879,45,0.573,46,0.557,47,0.12,48,0.075,63,0.008,64,0.008,76,0.951,82,0.55,83,1.353,85,1.439,104,2.147,110,0.59,111,1.034,112,1.028,129,1.034,143,1.043,144,1.149,145,1.149,157,1.531,160,1.117,180,1.088,217,1.586,349,2.986,384,1.469,388,2.315,459,1.486,637,2.594,774,3.185,781,3.501,804,1.8,860,1.903,894,2.346,1016,2.273,1245,4.567,1270,3.019,1308,2.47,1547,5.173,1633,5.676,1657,3.461,1667,2.949,1668,2.949,1677,4.134,1791,4.134,2070,3.65,2097,6.141,2098,6.141,2399,3.501,2409,6.141,2448,3.501,2497,2.949,2752,4.465,3089,5.646,3237,8.311,3238,7.621,3239,5.58,3240,5.58,3241,5.58,3242,5.58,3243,5.58,3244,5.58,3245,5.58,3246,5.58,3247,5.58,3248,3.981,3249,3.981,3250,7.621,3251,8.387,3252,6.982,3253,6.982,3254,6.982,3255,5.58,3256,3.981,3257,3.981,3258,7.621,3259,6.443,3260,5.58,3261,3.981,3262,4.908,3263,5.58,3264,5.58,3265,3.981,3266,3.981,3267,6.982,3268,3.981,3269,3.981,3270,3.981,3271,3.981,3272,3.981,3273,3.981,3274,3.981,3275,3.981,3276,5.58,3277,3.981,3278,5.58,3279,3.981,3280,3.981,3281,6.982,3282,3.981,3283,3.981,3284,3.981,3285,5.58,3286,3.981,3287,3.981,3288,6.443,3289,7.621,3290,3.981,3291,7.986,3292,3.981,3293,5.58,3294,3.981,3295,3.981,3296,3.981,3297,3.981,3298,3.981,3299,3.981,3300,3.981,3301,3.981,3302,5.58,3303,3.981,3304,5.58,3305,6.443,3306,6.443,3307,3.981,3308,3.981,3309,3.981,3310,3.981,3311,3.981,3312,4.908,3313,3.981,3314,3.981,3315,3.981,3316,3.981,3317,5.58,3318,3.981,3319,3.981,3320,3.981,3321,3.981,3322,3.981,3323,3.981,3324,3.981,3325,3.981,3326,3.981,3327,3.981,3328,3.981,3329,3.981,3330,3.981,3331,3.981,3332,3.981,3333,3.981,3334,3.981,3335,3.981,3336,3.981,3337,5.58,3338,3.981]],["title/injectables/VocabFieldLookupService.html",[0,0.864,1718,2.747]],["body/injectables/VocabFieldLookupService.html",[0,1.159,2,0.093,3,0.132,4,0.043,7,0.377,8,0.415,10,1.446,11,1.478,12,2.91,13,2.699,16,0.446,18,0.717,19,0.011,20,0.446,21,0.405,22,0.669,24,0.733,25,1.249,28,0.741,30,0.419,31,0.206,32,0.893,33,1.539,34,1.37,35,0.869,37,1.893,39,1.228,44,0.918,45,0.409,46,0.398,47,0.16,48,0.121,49,0.949,51,1.277,52,0.97,55,1.322,59,1.322,62,1.422,63,0.007,64,0.007,65,0.16,71,1.077,73,0.526,76,0.485,83,1.171,85,1.407,86,0.996,94,0.65,97,1.378,99,0.485,100,0.823,101,0.996,106,0.472,107,0.667,110,1.176,111,0.421,112,0.819,113,1.306,119,0.808,123,0.98,125,0.685,126,0.633,129,0.985,134,0.76,137,1.105,142,0.703,143,0.342,144,0.398,145,0.398,150,0.76,157,0.781,159,1.058,160,0.873,168,0.97,170,1.058,175,2.778,179,4.201,180,1.481,210,1.19,212,0.585,217,1.48,251,0.512,263,1.061,305,0.831,307,0.57,318,1.747,320,1.105,327,0.893,329,0.721,345,0.498,356,0.918,364,0.97,371,0.998,384,1.466,391,1.53,393,0.76,412,1.86,420,1.67,422,1.914,446,0.998,449,1.058,465,1.105,494,0.781,518,1.123,551,1.09,552,1.228,614,1.681,616,2.179,626,1.53,627,1.422,629,2.867,630,1.765,637,2.026,654,1.478,797,1.861,804,2.269,817,3.023,830,3.23,855,1.973,859,1.159,860,1.487,879,1.422,919,2.79,923,1.681,926,1.027,946,2.649,954,3.699,968,4.487,1065,1.539,1098,2.851,1152,1.681,1153,1.681,1154,2.358,1155,2.302,1156,1.681,1158,1.478,1162,2.265,1163,2.1,1164,1.478,1165,1.422,1166,1.37,1167,1.478,1169,1.422,1172,2.877,1174,4.397,1227,3.086,1228,1.765,1307,1.765,1327,1.765,1338,1.606,1339,2.992,1437,2.704,1480,2.107,1514,3.23,1515,2.276,1516,4.754,1518,3.488,1520,2.276,1521,3.488,1522,4.241,1523,4.241,1526,3.488,1528,6.349,1529,4.241,1531,3.488,1533,2.107,1534,4.12,1535,2.276,1536,2.107,1537,2.107,1538,2.107,1539,2.276,1540,4.754,1541,3.488,1542,2.276,1543,2.276,1544,2.276,1545,2.276,1546,3.488,1547,3.23,1548,2.276,1549,4.241,1550,5.629,1551,2.276,1552,2.276,1553,2.276,1554,2.276,1555,2.276,1556,2.276,1557,2.276,1558,2.276,1559,1.681,1560,1.765,1561,4.241,1562,2.276,1563,4.241,1564,2.276,1565,5.126,1566,2.276,1567,4.241,1568,2.276,1569,3.488,1570,2.276,1571,5.629,1572,2.276,1573,2.276,1574,2.276,1575,4.754,1576,3.488,1577,2.276,1578,3.488,1579,2.276,1580,2.276,1581,2.276,1582,2.276,1583,3.488,1584,3.488,1585,2.276,1586,3.488,1587,3.488,1588,3.488,1589,3.488,1590,3.488,1591,3.488,1592,2.276,1593,5.629,1594,5.126,1595,2.276,1596,2.276,1597,2.276,1598,1.861,1599,2.276,1600,4.12,1601,2.276,1602,2.276,1603,2.276,1604,3.488,1605,2.276,1606,2.276,1607,2.276,1608,2.107,1609,1.861,1610,2.276,1611,2.276,1612,2.276,1613,5.808,1614,2.276,1615,2.276,1616,3.488,1617,2.276,1618,2.107,1619,2.276,1620,2.276,1621,2.276,1622,2.107,1623,2.276,1624,2.276,1625,4.241,1626,4.754,1627,2.276,1628,1.973,1629,2.276,1630,2.276,1631,4.241,1632,2.107,1633,3.886,1634,1.765,1635,2.276,1636,2.107,1637,2.107,1638,2.276,1639,2.276,1640,2.276,1641,2.276,1642,1.765,1643,2.276,1644,3.23,1645,3.488,1646,2.276,1647,2.276,1648,2.276,1649,4.241,1650,5.408,1651,5.629,1652,6.349,1653,5.126,1654,4.754,1655,3.488,1656,4.746,1657,3.288,1658,4.746,1659,4.241,1660,4.241,1661,4.241,1662,4.241,1663,2.276,1664,2.276,1665,2.276,1666,5.408,1667,2.107,1668,2.107,1669,2.276,1670,2.276,1671,2.276,1672,3.488,1673,3.488,1674,2.276,1675,2.276,1676,2.276,1677,5.513,1678,2.276,1679,3.488,1680,1.973,1681,2.107,1682,2.276,1683,2.276,1684,2.276,1685,3.488,1686,2.276,1687,2.276,1688,2.276,1689,2.276,1690,3.488,1691,3.488,1692,3.488,1693,3.488,1694,2.276,1695,2.276,1696,2.276,1697,2.276,1698,2.276,1699,2.276,1700,2.276,1701,2.276,1702,2.276,1703,2.107,1704,2.276,1705,2.276,1706,2.276,1707,2.276,1708,2.276,1709,2.276,1710,2.276,1711,2.276,1712,2.276,1713,2.276,1714,2.276,1715,2.276,1716,2.276,1717,2.276,1718,2.704,1719,2.276,1720,3.023,1721,2.276,1722,2.276,1723,2.276,1724,2.276,1725,2.276,1726,3.488,1727,3.23,1728,3.488,1729,2.276,1730,3.488,1731,2.276,1732,3.488,1733,3.488,1734,2.276,1735,3.488,1736,2.276,1737,3.023,1738,2.276,1739,2.276,1740,2.276,1741,2.276,1742,2.276,1743,2.276,1744,4.241,1745,2.276,1746,1.681,1747,2.276,1748,1.973,1749,2.276,1750,2.276,1751,2.276,1752,4.241,1753,2.276,1754,2.276,1755,2.276,1756,2.276,1757,2.276,1758,2.107,1759,2.276,1760,1.606,1761,2.276,1762,2.276,1763,2.107,1764,2.107,1765,1.861,1766,2.276,1767,2.276,1768,3.488,1769,2.276,1770,2.276,1771,2.276,1772,2.276,1778,3.488,3339,4.359,3340,4.359,3341,4.359,3342,4.359,3343,4.359,3344,2.845,3345,2.845,3346,2.845,3347,2.845,3348,2.845,3349,2.845,3350,2.845,3351,2.845,3352,2.845]],["title/components/WorkflowStepButtonComponent.html",[65,0.134,308,0.935]],["body/components/WorkflowStepButtonComponent.html",[2,0.145,3,0.133,4,0.067,7,0.462,8,0.646,16,0.561,18,0.802,19,0.01,20,0.537,21,0.503,22,0.748,24,0.679,25,0.86,28,0.735,30,0.378,31,0.319,43,0.906,47,0.205,48,0.129,49,1.007,63,0.007,64,0.007,65,0.238,66,0.931,67,1.007,68,1.332,70,3.877,72,1.264,73,1.692,74,0.955,75,2.455,76,1.02,77,1.223,78,0.931,82,0.59,83,1.411,84,2.076,85,1.406,86,1.869,87,1.849,88,2.11,90,2.604,91,1.931,92,1.931,93,1.732,94,1.552,95,1.967,96,2.076,97,1.137,98,1.479,99,1.159,100,1.732,101,1.367,102,2.065,104,1.242,106,0.993,107,1.033,110,1.165,111,1.007,112,0.791,113,0.793,118,2.293,119,0.913,121,1.346,122,1.828,123,1.107,125,1.636,126,1.332,127,1.346,128,1.346,129,0.99,130,1.422,132,1.779,133,1.178,134,1.178,136,1.31,137,1.118,139,1.118,141,0.955,142,1.089,143,0.53,144,0.616,145,0.616,147,1.276,148,1.828,149,1.732,150,1.178,154,1.242,157,1.21,159,1.639,160,0.883,161,2.97,162,1.422,168,1.503,169,3.877,170,1.639,192,0.711,193,1.332,194,1.199,195,1.332,196,1.08,197,1.007,198,1.796,199,1.781,200,0.955,201,0.955,202,0.981,203,1.552,204,0.931,205,0.981,206,1.007,207,0.883,208,1.007,209,0.883,210,0.883,211,0.955,212,1.654,213,1.367,214,0.955,215,1.007,216,0.955,217,1.077,218,1.107,219,0.883,220,0.906,221,1.007,222,0.931,223,1.297,224,1.665,225,0.955,226,1.367,227,0.883,228,1.007,229,0.931,230,0.931,231,0.931,232,0.883,233,0.955,234,0.883,235,1.007,236,0.883,237,0.981,238,1.007,239,0.931,240,0.86,241,1.007,242,0.955,243,1.264,244,1.007,245,0.955,246,1.007,247,0.931,248,1.007,249,0.931,250,0.981,251,1.223,252,1.367,253,0.883,254,1.367,255,0.931,256,1.007,257,1.367,258,0.931,259,0.931,260,0.955,261,1.007,262,0.931,263,0.883,264,1.007,265,0.931,266,1.007,267,0.931,268,1.007,269,0.883,270,1.58,271,0.931,272,1.007,273,0.931,274,1.367,275,0.883,276,1.367,277,0.955,278,1.007,279,0.906,280,0.906,281,0.883,282,1.007,283,0.931,284,1.007,285,0.883,286,1.007,287,0.906,288,0.955,289,0.955,290,0.883,291,1.007,292,0.931,293,0.793,294,1.007,295,0.931,296,0.883,297,1.007,298,0.955,299,0.955,300,1.007,301,0.931,302,0.931,303,1.007,304,0.955,305,0.691,306,1.007,307,0.883,308,1.539,309,1.552,310,0.931,311,1.007,312,0.955,313,1.435,314,0.931,315,1.007,316,0.931,317,1.007,320,1.724,322,5.265,324,1.853,2551,3.266,3353,6.798,3354,5.986,3355,4.408,3356,4.408,3357,4.408,3358,4.408,3359,4.408,3360,4.408,3361,4.408,3362,4.408,3363,4.408,3364,4.408,3365,4.408,3366,4.408,3367,4.408,3368,4.408,3369,4.408,3370,4.408,3371,7.292,3372,4.408,3373,4.408,3374,4.408,3375,4.408,3376,4.408,3377,4.408,3378,4.408,3379,4.408,3380,3.877,3381,4.408,3382,4.408]],["title/components/WorkspaceFieldComponent.html",[65,0.134,310,0.935]],["body/components/WorkspaceFieldComponent.html",[0,0.739,2,0.124,3,0.115,4,0.058,7,0.24,8,0.513,10,1.257,16,0.531,18,0.55,19,0.011,20,0.398,21,0.461,22,0.596,24,0.674,25,0.739,28,0.723,30,0.4,31,0.275,39,1.068,43,1.484,45,0.546,46,0.53,47,0.189,48,0.102,49,0.562,52,1.293,59,1.762,63,0.007,64,0.006,65,0.246,66,0.8,67,1.433,68,1.199,71,0.936,72,1.138,73,1.682,74,0.822,76,0.919,77,1.229,78,0.8,82,0.531,83,1.406,85,1.012,86,1.231,88,2.089,90,2.873,97,1.498,98,1.549,99,1.344,101,1.56,104,1.519,106,1.04,107,1.47,112,0.898,113,0.97,119,0.578,126,0.843,129,0.927,143,0.648,159,1.41,160,1.256,168,1.293,170,1.41,180,1.051,192,0.611,193,1.199,194,1.445,195,1.199,196,1.22,197,0.866,198,1.713,199,0.759,200,0.822,201,0.822,202,0.843,203,1.433,204,0.8,205,0.843,206,0.866,207,0.759,208,0.866,209,0.759,210,0.759,211,0.822,212,1.587,213,1.231,214,0.822,215,0.866,216,0.822,217,0.97,218,0.996,219,0.759,220,0.779,221,0.866,222,0.8,223,1.168,224,1.56,225,0.822,226,1.231,227,0.759,228,0.866,229,0.8,230,0.8,231,0.8,232,0.759,233,0.822,234,0.759,235,0.866,236,0.759,237,0.843,238,0.866,239,0.8,240,0.739,241,0.866,242,0.822,243,1.138,244,0.866,245,0.822,246,0.866,247,0.8,248,0.866,249,0.8,250,0.843,251,1.129,252,1.231,253,0.759,254,1.231,255,0.8,256,0.866,257,1.231,258,0.8,259,0.8,260,0.822,261,0.866,262,0.8,263,0.759,264,0.866,265,0.8,266,0.866,267,0.8,268,0.866,269,0.759,270,1.481,271,0.8,272,0.866,273,0.8,274,1.231,275,0.759,276,1.231,277,0.822,278,0.866,279,0.779,280,0.779,281,0.759,282,0.866,283,0.8,284,0.866,285,0.759,286,0.866,287,0.779,288,0.822,289,0.822,290,0.759,291,0.866,292,0.8,293,0.682,294,0.866,295,0.8,296,0.759,297,0.866,298,0.822,299,0.822,300,0.866,301,0.8,302,1.324,303,0.866,304,0.822,305,0.594,306,0.866,307,0.759,308,0.8,309,0.866,310,1.442,311,1.433,312,0.822,313,1.629,314,0.8,315,0.866,316,0.8,317,0.866,327,1.19,328,2.558,344,1.369,345,0.664,346,1.079,347,0.912,355,1.369,356,1.739,384,1.197,387,1.497,388,1.257,411,1.594,459,0.739,521,1.787,593,3.334,626,1.891,637,2.915,764,4.313,779,3.033,789,3.184,804,2.023,962,4.313,966,3.334,967,7.157,968,4.036,969,6.348,970,6.348,971,6.008,972,6.008,973,6.008,974,5.517,975,3.334,976,6.596,977,3.706,978,4.238,979,3.334,980,4.741,981,3.334,983,3.334,984,3.334,988,3.334,991,4.741,993,5.019,994,3.738,995,4.741,996,4.741,998,6.008,999,3.993,1000,4.741,1002,3.334,1004,3.334,1006,3.334,1007,4.741,1008,4.313,1009,3.334,1010,3.334,1011,3.334,1012,3.334,1013,3.334,1014,3.344,1019,3.033,1020,3.334,1021,3.334,1022,3.334,1023,3.334,1025,2.808,1026,2.479,1027,3.334,1028,2.479,1029,4.647,1030,3.033,1031,3.334,1032,3.334,1033,3.334,1034,4.741,1044,3.334,1045,3.334,1046,3.334,1047,3.334,1048,3.334,1049,3.334,1050,3.334,1051,4.313,1052,3.334,1053,3.334,1054,3.334,1055,3.334,1056,3.334,1057,3.334,1069,3.334,1070,3.334,1221,3.738,1293,2.479,1437,2.351,1559,2.239,1600,2.629,1942,3.334,2187,2.629,2319,3.033,2322,3.334,2752,4.313,2942,4.35,3127,3.334,3383,6.757,3384,4.741,3385,3.791,3386,3.791,3387,3.791,3388,3.791,3389,3.791,3390,3.791,3391,3.791,3392,3.791,3393,3.791,3394,3.791,3395,3.791,3396,3.033,3397,6.273,3398,3.791,3399,3.791,3400,3.791,3401,3.791,3402,3.791,3403,3.791,3404,3.791,3405,3.791,3406,3.791,3407,3.791,3408,3.791,3409,6.273,3410,3.791,3411,6.832,3412,3.791,3413,5.39,3414,3.791,3415,3.791,3416,3.791,3417,3.791,3418,3.791,3419,3.791,3420,3.334,3421,5.39,3422,3.791,3423,3.791,3424,3.791,3425,3.791,3426,3.791,3427,3.791,3428,3.791,3429,3.791,3430,3.791,3431,3.791,3432,3.791,3433,3.791,3434,3.791,3435,3.791,3436,3.791,3437,3.791,3438,3.791,3439,3.791,3440,3.791,3441,3.791,3442,5.39,3443,5.39,3444,3.791,3445,3.791]],["title/modules/WorkspaceListModule.html",[856,1.39,3446,3.28]],["body/modules/WorkspaceListModule.html",[2,0.203,3,0.187,4,0.094,19,0.01,21,0.487,28,0.527,30,0.462,31,0.449,32,1.943,47,0.225,48,0.117,63,0.008,64,0.008,143,0.894,144,1.041,145,1.041,192,0.999,312,1.939,313,1.571,345,1.085,346,1.598,347,1.49,349,2.972,459,1.208,565,2.69,856,2.598,858,2.604,859,3.372,860,2.539,865,3.862,866,3.46,867,2.879,868,2.69,870,3.72,871,3.989,872,2.879,873,3.989,874,4.146,875,4.146,878,4.955,879,3.095,880,3.217,881,5.956,882,4.955,1130,4.588,2292,5.514,3446,6.541,3447,5.447,3448,5.447,3449,6.193,3450,5.447,3451,6.193,3452,6.193]],["title/components/WorkspaceSelectorComponent.html",[65,0.134,314,0.935]],["body/components/WorkspaceSelectorComponent.html",[2,0.143,3,0.131,4,0.066,7,0.46,8,0.642,16,0.556,18,0.774,19,0.01,20,0.53,21,0.498,22,0.722,24,0.697,25,0.849,28,0.734,30,0.393,31,0.315,43,0.895,45,0.626,46,0.608,47,0.204,48,0.128,49,1,63,0.007,64,0.007,65,0.242,66,0.919,67,0.994,68,1.32,71,2.173,72,1.253,73,1.693,74,0.943,76,1.011,77,1.215,78,0.919,82,0.585,83,1.35,84,2.062,85,1.35,86,1.831,87,1.839,88,2.099,91,1.914,92,1.914,93,1.717,94,1.656,95,1.954,96,2.062,97,1.127,98,1.466,99,1.151,100,1.717,101,1.355,102,2.04,103,1.667,104,1.226,105,1.667,106,0.984,107,1.02,108,1.667,109,1.667,110,1.161,111,1.075,112,0.844,113,0.783,114,1.667,115,1.667,119,0.663,121,1.329,122,1.812,123,1.097,124,1.527,125,1.625,126,1.32,127,1.329,128,1.329,129,0.917,130,1.404,131,1.527,132,1.764,133,1.163,134,1.163,135,1.527,136,1.294,137,1.104,138,1.527,139,1.104,140,1.527,141,0.943,142,1.075,143,0.523,144,0.608,145,0.608,146,1.527,147,1.259,148,1.812,149,1.717,150,1.163,153,1.527,154,1.226,155,1.527,156,1.527,157,1.194,158,1.527,159,1.618,160,0.872,192,0.702,193,1.32,194,1.188,195,1.32,196,1.075,197,0.994,198,1.789,199,0.872,200,0.943,201,0.943,202,0.968,203,1.542,204,0.919,205,0.968,206,0.994,207,0.872,208,0.994,209,0.872,210,0.872,211,0.943,212,1.648,213,1.355,214,0.943,215,0.994,216,0.943,217,1.068,218,1.097,219,0.872,220,0.895,221,0.994,222,0.919,223,1.286,224,1.656,225,0.943,226,1.355,227,0.872,228,0.994,229,0.919,230,0.919,231,0.919,232,0.872,233,0.943,234,0.872,235,0.994,236,0.872,237,0.968,238,0.994,239,0.919,240,0.849,241,0.994,242,0.943,243,1.253,244,0.994,245,0.943,246,0.994,247,0.919,248,0.994,249,0.919,250,0.968,251,1.215,252,1.355,253,0.872,254,1.355,255,0.919,256,0.994,257,1.355,258,0.919,259,0.919,260,0.943,261,0.994,262,0.919,263,0.872,264,0.994,265,0.919,266,0.994,267,0.919,268,0.994,269,0.872,270,1.572,271,0.919,272,0.994,273,0.919,274,1.355,275,0.872,276,1.355,277,0.943,278,0.994,279,0.895,280,0.895,281,0.872,282,0.994,283,0.919,284,0.994,285,0.872,286,0.994,287,0.895,288,0.943,289,0.943,290,0.872,291,0.994,292,0.919,293,0.783,294,0.994,295,0.919,296,0.872,297,0.994,298,0.943,299,0.943,300,0.994,301,0.919,302,0.919,303,0.994,304,0.943,305,0.682,306,0.994,307,0.872,308,0.919,309,0.994,310,0.919,311,0.994,312,0.943,313,1.692,314,1.692,315,0.994,316,1.426,317,0.994,320,1.104,382,2.417,384,0.762,385,2.587,387,1.719,388,1.968,389,2.417,393,1.938,394,2.318,485,1.773,494,1.194,1131,4.115,2969,3.482,3383,5.403,3396,4.748,3453,3.827,3454,5.219,3455,4.352,3456,4.352,3457,3.827,3458,3.827,3459,3.827,3460,3.827,3461,3.827,3462,3.827,3463,3.827,3464,3.827,3465,3.827,3466,3.827,3467,3.827,3468,3.827]],["title/components/WorkspaceSelectorFieldComponent.html",[65,0.134,316,0.935]],["body/components/WorkspaceSelectorFieldComponent.html",[2,0.136,3,0.125,4,0.063,7,0.45,8,0.625,16,0.559,18,0.76,19,0.01,20,0.525,21,0.5,22,0.709,24,0.701,25,0.807,28,0.736,30,0.386,31,0.3,43,0.851,45,0.596,46,0.579,47,0.199,48,0.125,49,0.975,63,0.007,64,0.007,65,0.239,66,0.874,67,0.945,68,1.276,71,1.416,72,1.21,73,1.69,74,0.897,76,1.121,77,1.184,78,0.874,82,0.565,83,1.372,84,2.009,85,1.336,86,1.806,87,1.801,88,2.055,91,1.849,92,1.849,93,1.659,94,1.762,95,1.903,96,2.009,97,1.089,98,1.416,99,1.121,100,1.659,101,1.309,102,2.044,104,1.166,106,0.951,107,0.97,110,1.143,111,1.105,112,0.868,113,0.745,119,1.003,121,1.264,122,1.751,123,1.06,125,1.583,126,1.276,127,1.264,128,1.264,129,0.893,130,1.335,132,1.704,133,1.106,134,1.106,136,1.23,137,1.049,139,1.049,141,0.897,142,1.022,143,0.497,144,0.579,145,0.579,147,1.198,148,1.751,149,1.659,150,1.106,154,1.166,157,1.136,159,1.539,160,0.829,192,0.667,193,1.276,194,1.148,195,1.276,196,1.052,197,0.945,198,1.762,199,0.829,200,0.897,201,0.897,202,0.921,203,1.502,204,0.874,205,0.921,206,0.945,207,0.829,208,0.945,209,0.829,210,0.829,211,0.897,212,1.626,213,1.309,214,0.897,215,0.945,216,0.897,217,1.032,218,1.06,219,0.829,220,0.851,221,0.945,222,0.874,223,1.243,224,1.622,225,0.897,226,1.309,227,0.829,228,0.945,229,0.874,230,0.874,231,0.874,232,0.829,233,0.897,234,0.829,235,0.945,236,0.829,237,0.921,238,0.945,239,0.874,240,0.807,241,0.945,242,0.897,243,1.21,244,0.945,245,0.897,246,0.945,247,0.874,248,0.945,249,0.874,250,0.921,251,1.184,252,1.309,253,0.829,254,1.309,255,0.874,256,0.945,257,1.309,258,0.874,259,0.874,260,0.897,261,0.945,262,0.874,263,0.829,264,0.945,265,0.874,266,0.945,267,0.874,268,0.945,269,0.829,270,1.539,271,0.874,272,0.945,273,0.874,274,1.309,275,0.829,276,1.309,277,0.897,278,0.945,279,0.851,280,0.851,281,0.829,282,0.945,283,0.874,284,0.945,285,0.829,286,0.945,287,0.851,288,0.897,289,0.897,290,0.829,291,0.945,292,0.874,293,0.745,294,0.945,295,0.874,296,0.829,297,0.945,298,0.897,299,0.897,300,0.945,301,0.874,302,0.874,303,0.945,304,0.897,305,0.649,306,0.945,307,0.829,308,0.874,309,0.945,310,0.874,311,0.945,312,0.897,313,1.67,314,1.871,315,0.945,316,1.629,317,0.945,320,1.668,382,2.335,384,0.725,385,2.52,387,1.634,388,1.901,389,2.892,393,2.062,394,2.462,485,1.686,494,1.948,1131,3.976,2969,3.312,3383,5.966,3396,5.682,3453,3.64,3454,3.64,3457,3.64,3458,5.785,3459,5.785,3460,5.785,3461,5.785,3462,5.785,3463,5.785,3464,3.64,3465,3.64,3466,6.245,3467,3.64,3468,3.64,3469,4.139,3470,4.139,3471,4.139,3472,4.139,3473,4.139,3474,4.139,3475,4.139,3476,4.139,3477,4.139,3478,4.139,3479,4.139,3480,4.139,3481,4.139,3482,4.139,3483,4.139,3484,4.139,3485,4.139,3486,4.139,3487,4.139,3488,4.139,3489,4.139,3490,4.139]],["title/injectables/WorkspaceTypeService.html",[0,0.864,2942,3.071]],["body/injectables/WorkspaceTypeService.html",[0,1.617,2,0.204,3,0.188,4,0.095,6,3.364,7,0.394,8,0.71,10,2.474,11,3.231,12,3.298,13,3.264,16,0.525,18,0.761,19,0.01,20,0.525,21,0.429,22,0.71,24,0.655,28,0.733,29,4.898,30,0.446,31,0.451,32,1.952,33,3.364,34,2.995,37,3.241,38,3.858,39,2.336,44,2.006,47,0.188,48,0.118,49,0.921,50,3.108,51,2.793,52,2.121,55,2.891,59,3.468,60,4.036,62,3.729,63,0.008,64,0.008,143,0.896,459,1.213,774,4.976,809,5.469,896,5.469,959,4.629,1137,3.876,2028,3.468,2942,5.175,3082,5.469,3384,6.563,3491,8.479,3492,8.29,3493,8.609,3494,7.462,3495,6.219,3496,7.462]],["title/dependencies.html",[858,2.235,3497,3.269]],["body/dependencies.html",[12,2.265,19,0.01,29,3.492,35,2.21,36,2.4,46,1.012,63,0.008,64,0.008,125,1.741,141,1.281,240,1.153,302,1.72,336,2.265,572,5.199,654,3.071,858,2.485,859,2.408,879,2.954,919,2.135,926,2.135,1533,5.36,1536,4.379,1537,4.379,1538,4.379,1642,3.667,2066,5.789,2085,4.73,2529,5.423,2964,5.36,3033,5.199,3112,5.199,3498,5.911,3499,5.911,3500,5.911,3501,7.236,3502,5.911,3503,7.82,3504,5.911,3505,5.911,3506,7.236,3507,5.911,3508,5.911,3509,5.911,3510,5.911,3511,5.911,3512,7.82,3513,5.911,3514,5.911,3515,5.911,3516,5.911,3517,5.911,3518,5.911,3519,8.149,3520,5.911,3521,5.911,3522,5.199,3523,7.236,3524,5.911,3525,5.911,3526,7.236,3527,5.911,3528,5.911,3529,5.911,3530,5.911,3531,5.199,3532,5.911,3533,5.911,3534,7.236,3535,5.911,3536,7.236,3537,5.911,3538,5.911,3539,5.911,3540,5.911,3541,5.911,3542,5.911,3543,5.911,3544,8.149,3545,5.911,3546,5.911,3547,7.236,3548,5.911,3549,5.911,3550,5.911,3551,5.911,3552,5.911,3553,5.911,3554,5.911,3555,5.911,3556,5.911,3557,5.911,3558,5.911,3559,5.911,3560,7.236,3561,5.199,3562,7.482,3563,8.149,3564,5.911,3565,5.911,3566,5.911,3567,5.911,3568,5.911,3569,5.911,3570,5.911,3571,5.911,3572,5.911,3573,5.911,3574,5.911,3575,5.911,3576,5.911,3577,5.911,3578,5.911,3579,5.911,3580,5.911,3581,5.911,3582,5.911,3583,4.73,3584,5.911,3585,7.236,3586,5.911,3587,5.911,3588,5.199,3589,5.911,3590,5.911,3591,5.911]],["title/miscellaneous/functions.html",[451,1.865,3592,3.269]],["body/miscellaneous/functions.html",[7,0.43,18,0.885,19,0.01,20,0.55,22,0.825,63,0.009,64,0.009,401,2.099,451,2.381,3144,5.968,3150,6.285,3151,6.823,3162,6.285,3173,5.968,3180,5.968,3592,5.968,3593,8.528,3594,8.676,3595,8.528,3596,7.855,3597,8.291]],["title/index.html",[7,0.236,650,2.098,3598,3.269]],["body/index.html",[19,0.009,63,0.009,64,0.009,141,1.53,2379,3.667,3223,4.17,3599,5.573,3600,6.208,3601,5.23,3602,7.059,3603,5.23,3604,7.059,3605,6.208]],["title/license.html",[650,2.098,1086,2.753,3598,3.269]],["body/license.html",[3,0.257,4,0.085,8,0.177,16,0.118,19,0.004,20,0.295,21,0.178,22,0.443,28,0.158,30,0.161,39,1.124,43,0.383,48,0.035,49,0.591,52,2.022,63,0.007,64,0.004,65,0.156,74,0.403,78,1.092,82,0.183,85,1.303,99,1.191,118,0.713,119,0.284,123,0.861,141,1.732,143,0.884,147,0.538,150,0.829,154,1.458,160,1.119,188,2.252,195,0.69,217,0.718,220,0.383,231,1.696,237,0.888,240,0.605,299,0.865,305,1.253,335,1.384,348,0.782,401,1.584,444,1.731,448,2.836,449,1.484,451,0.653,452,0.758,454,1.361,455,0.758,466,1.896,483,0.653,488,2.415,498,1.225,521,1.966,547,0.713,552,1.124,576,2.688,626,1.634,629,1.006,650,1.751,676,1.489,804,1.912,816,1.489,855,1.29,860,2.601,868,0.808,894,3.292,899,5.467,925,3.192,926,1.868,946,0.93,968,1.099,993,1.489,999,2.298,1016,1.264,1019,3.725,1025,1.378,1028,2.61,1029,2.298,1030,3.192,1041,1.636,1064,6.353,1065,4.266,1077,6.63,1078,3.853,1083,4.471,1085,6.161,1086,6.67,1087,5.864,1088,3.833,1089,1.489,1091,6.945,1092,6.215,1093,6.496,1094,3.192,1095,4.14,1096,5.681,1097,6.838,1098,5.488,1099,3.833,1100,5.592,1101,1.489,1102,4.448,1103,4.391,1104,6.037,1105,2.482,1106,3.725,1107,2.482,1108,2.482,1109,4.93,1110,4.601,1111,2.357,1112,3.877,1113,2.767,1114,6.215,1115,5.039,1116,4.14,1117,2.482,1118,1.489,1155,1.733,1166,0.896,1169,0.93,1203,1.29,1245,1.217,1314,2.029,1354,3.347,1622,1.378,1628,1.29,1634,2.888,1636,2.298,1656,2.298,1758,5.704,1763,1.378,1764,1.378,1901,1.489,1973,2.628,1991,1.05,1995,1.636,2010,1.29,2048,1.924,2056,2.728,2058,4.55,2062,4.14,2063,3.192,2064,4.55,2065,3.853,2067,1.636,2073,3.811,2075,2.298,2080,3.509,2128,1.636,2150,1.636,2152,2.728,2172,1.636,2186,2.482,2237,2.482,2246,1.636,2249,1.29,2260,2.151,2263,1.29,2292,2.298,2297,2.298,2343,4.471,2346,2.728,2353,2.728,2378,2.151,2408,5.213,2431,5.589,2485,1.636,2486,3.875,2492,1.636,2496,3.509,2497,4.14,2540,3.449,2541,1.29,2543,1.378,2592,1.29,2643,1.378,2654,3.229,2655,3.229,2656,5.37,2693,2.956,2780,5.325,2788,4.743,2789,3.509,2802,1.636,3007,1.636,3037,3.509,3045,4.095,3095,4.353,3096,2.298,3098,3.449,3105,3.725,3106,1.489,3107,2.728,3142,4.128,3161,3.725,3262,2.728,3497,2.728,3531,6.886,3583,4.14,3588,1.636,3599,3.588,3601,5.177,3603,5.062,3606,1.86,3607,3.99,3608,1.86,3609,3.102,3610,5.673,3611,3.99,3612,1.86,3613,1.86,3614,4.656,3615,8.992,3616,3.509,3617,1.86,3618,6.45,3619,3.99,3620,1.86,3621,1.86,3622,4.656,3623,3.102,3624,6.45,3625,1.86,3626,4.656,3627,4.656,3628,6.211,3629,3.102,3630,6.674,3631,1.86,3632,3.102,3633,1.86,3634,3.99,3635,4.656,3636,1.86,3637,3.102,3638,4.656,3639,3.102,3640,5.8,3641,4.55,3642,3.102,3643,4.656,3644,6.833,3645,5.174,3646,5.928,3647,1.86,3648,1.86,3649,6.833,3650,6.45,3651,6.833,3652,7.99,3653,1.86,3654,1.86,3655,2.482,3656,1.86,3657,3.99,3658,3.99,3659,3.102,3660,1.86,3661,1.86,3662,1.86,3663,1.86,3664,1.86,3665,1.86,3666,1.86,3667,1.86,3668,1.86,3669,1.86,3670,3.99,3671,6.393,3672,4.656,3673,3.102,3674,1.86,3675,5.174,3676,3.102,3677,3.99,3678,3.102,3679,1.86,3680,1.86,3681,3.509,3682,3.102,3683,3.102,3684,1.86,3685,1.86,3686,8.192,3687,5.928,3688,3.99,3689,1.86,3690,4.656,3691,5.174,3692,3.99,3693,1.86,3694,6.45,3695,7.358,3696,6.45,3697,4.471,3698,6.989,3699,1.86,3700,1.86,3701,3.99,3702,2.728,3703,4.656,3704,1.86,3705,6.557,3706,1.86,3707,3.102,3708,8.494,3709,3.99,3710,7.248,3711,1.86,3712,3.102,3713,6.211,3714,5.588,3715,5.174,3716,5.161,3717,4.656,3718,1.489,3719,8.592,3720,7.7,3721,1.86,3722,5.213,3723,6.211,3724,6.45,3725,7.7,3726,5.588,3727,4.656,3728,1.636,3729,1.86,3730,1.636,3731,3.509,3732,1.86,3733,2.728,3734,1.86,3735,1.86,3736,4.095,3737,1.86,3738,1.86,3739,3.833,3740,5.213,3741,4.14,3742,5.588,3743,3.99,3744,5.174,3745,1.86,3746,1.86,3747,3.99,3748,1.86,3749,5.174,3750,3.102,3751,3.102,3752,7.94,3753,1.636,3754,3.102,3755,3.99,3756,1.86,3757,1.86,3758,3.102,3759,1.86,3760,3.102,3761,1.86,3762,1.86,3763,1.86,3764,4.55,3765,1.86,3766,7.358,3767,1.86,3768,1.86,3769,3.102,3770,3.102,3771,1.86,3772,3.99,3773,2.728,3774,1.86,3775,1.86,3776,1.86,3777,3.99,3778,3.99,3779,4.656,3780,2.728,3781,4.656,3782,3.102,3783,1.86,3784,7.248,3785,3.102,3786,1.86,3787,1.86,3788,1.86,3789,1.86,3790,1.636,3791,3.102,3792,1.86,3793,1.86,3794,5.174,3795,5.174,3796,1.86,3797,3.99,3798,4.656,3799,1.86,3800,5.588,3801,1.86,3802,3.102,3803,1.86,3804,1.86,3805,1.86,3806,1.86,3807,1.86,3808,3.102,3809,1.86,3810,1.86,3811,3.102,3812,5.174,3813,5.174,3814,1.86,3815,6.45,3816,4.656,3817,3.102,3818,6.45,3819,3.99,3820,5.588,3821,1.86,3822,3.509,3823,3.99,3824,3.509,3825,5.174,3826,3.102,3827,1.86,3828,3.102,3829,3.102,3830,4.55,3831,4.656,3832,2.728,3833,4.656,3834,4.282,3835,5.174,3836,5.174,3837,3.99,3838,1.86,3839,1.86,3840,1.636,3841,1.86,3842,1.86,3843,1.86,3844,3.99,3845,1.86,3846,1.86,3847,1.86,3848,3.102,3849,1.86,3850,1.86,3851,3.102,3852,4.656,3853,2.728,3854,3.102,3855,3.102,3856,3.102,3857,4.095,3858,3.102,3859,3.99,3860,1.86,3861,5.928,3862,3.102,3863,1.86,3864,1.86,3865,1.86,3866,3.102,3867,1.86,3868,6.211,3869,4.915,3870,1.86,3871,1.636,3872,1.86,3873,2.728,3874,1.86,3875,3.99,3876,5.174,3877,3.102,3878,1.86,3879,3.102,3880,1.86,3881,3.102,3882,4.656,3883,1.86,3884,3.102,3885,1.86,3886,1.86,3887,1.86,3888,3.102,3889,1.86,3890,1.86,3891,1.86,3892,1.86,3893,1.86,3894,1.86,3895,1.86,3896,1.86,3897,1.86,3898,5.174,3899,1.86,3900,1.86,3901,1.86,3902,1.86,3903,3.99,3904,1.86,3905,3.102,3906,5.928,3907,1.86,3908,1.86,3909,1.86,3910,1.86,3911,1.86,3912,1.86,3913,1.86,3914,1.86,3915,5.588,3916,1.86,3917,1.86,3918,3.102,3919,1.86,3920,3.102,3921,1.86,3922,1.86,3923,3.99,3924,1.86,3925,3.102,3926,6.989,3927,5.928,3928,3.102,3929,3.102,3930,1.86,3931,1.86,3932,3.99,3933,4.656,3934,1.86,3935,3.102,3936,1.86,3937,1.86,3938,3.102,3939,3.99,3940,5.174,3941,3.102,3942,1.86,3943,3.102,3944,5.928,3945,1.86,3946,1.86,3947,3.99,3948,1.86,3949,3.99,3950,1.86,3951,1.86,3952,4.656,3953,3.102,3954,3.99,3955,1.86,3956,3.102,3957,1.86,3958,1.86,3959,1.86,3960,1.86,3961,1.86,3962,5.588,3963,1.86,3964,3.99,3965,1.86,3966,3.102,3967,3.102,3968,1.86,3969,3.102,3970,1.86,3971,1.86,3972,1.86,3973,3.99,3974,3.102,3975,1.86,3976,3.99,3977,1.86,3978,1.636,3979,5.588,3980,1.86,3981,1.86,3982,1.86,3983,3.99,3984,3.102,3985,3.99,3986,1.86,3987,3.102,3988,1.86,3989,3.99,3990,3.102,3991,1.86,3992,3.99,3993,3.102,3994,1.86,3995,1.86,3996,1.86,3997,3.102,3998,3.102,3999,1.86,4000,5.174,4001,1.86,4002,1.86,4003,1.86,4004,1.86,4005,1.86,4006,1.86,4007,1.86,4008,1.86,4009,4.656,4010,3.102,4011,1.86,4012,3.102,4013,1.86,4014,1.636,4015,1.86,4016,1.86,4017,1.86,4018,1.86,4019,1.86,4020,1.86,4021,3.102,4022,1.86,4023,1.86,4024,1.86,4025,1.86,4026,3.102,4027,1.86,4028,3.99,4029,3.102,4030,3.102,4031,1.86,4032,1.86,4033,3.99,4034,1.636,4035,1.86,4036,1.86,4037,1.86,4038,1.86,4039,1.86,4040,2.728,4041,1.86,4042,1.86,4043,3.99,4044,1.86,4045,1.86,4046,1.86,4047,3.102,4048,1.86,4049,1.86,4050,1.86,4051,1.86,4052,2.482,4053,1.636,4054,1.86,4055,3.102,4056,1.86,4057,1.86,4058,1.86,4059,1.86,4060,1.636,4061,1.86,4062,1.86,4063,1.86,4064,1.86,4065,1.86,4066,1.86,4067,1.86,4068,3.102,4069,1.86,4070,1.86,4071,1.86,4072,1.86,4073,1.86,4074,1.86,4075,1.86,4076,3.102,4077,1.86,4078,1.86,4079,1.86,4080,1.86,4081,1.86,4082,1.86,4083,1.489,4084,1.86,4085,1.86,4086,1.86,4087,1.86,4088,1.86,4089,1.86,4090,1.86,4091,1.86]],["title/modules.html",[856,1.884]],["body/modules.html",[19,0.009,63,0.009,64,0.009,565,3.925,856,2.116,857,4.995,865,3.028,1071,4.995,1505,4.995,1634,5.606,2013,4.995,2030,4.995,2037,4.995,2712,4.995,2889,4.995,3065,4.995,3181,4.995,3446,4.995,4092,9.037,4093,9.037]],["title/overview.html",[4094,5.281]],["body/overview.html",[0,0.749,1,4.681,13,2.35,15,2.656,19,0.011,47,0.116,48,0.073,63,0.006,64,0.006,65,0.116,66,1.635,163,2.937,192,0.619,199,1.551,201,1.679,204,1.635,207,1.551,209,1.265,211,1.679,214,1.679,216,1.679,218,1.27,219,1.551,222,1.635,225,1.679,227,1.551,229,1.743,230,1.635,232,1.551,234,1.551,236,1.551,239,1.635,242,1.679,245,1.679,247,1.635,249,1.635,253,1.551,255,1.635,258,1.635,259,1.635,260,1.789,262,1.334,265,1.334,267,1.635,269,1.551,271,1.635,273,1.635,275,1.551,277,1.679,279,1.299,281,1.551,283,1.334,285,1.551,287,1.593,290,1.551,292,1.635,293,1.394,295,1.635,296,1.551,298,1.679,301,1.635,304,1.679,307,1.551,308,1.635,310,1.635,312,1.679,314,1.635,316,1.635,346,0.769,856,1.707,857,5.963,858,1.615,859,1.564,860,2.474,861,3.378,862,3.378,863,3.378,864,3.378,865,4.152,866,2.529,867,1.785,868,1.668,883,4.133,1071,5.738,1072,3.378,1073,3.378,1075,3.378,1088,4.031,1135,4.681,1270,3.418,1410,5.091,1411,5.091,1412,5.091,1505,5.738,1506,3.378,1507,3.378,1508,3.378,1510,3.378,1718,3.919,1748,2.664,1773,3.733,1844,4.681,1970,4.133,2013,5.738,2014,3.378,2015,3.378,2017,3.378,2030,5.738,2031,3.378,2032,3.378,2034,3.378,2037,5.738,2038,3.378,2039,3.378,2041,3.378,2277,2.664,2278,4.681,2712,5.963,2713,3.378,2714,3.378,2717,3.378,2889,6.115,2890,3.378,2891,3.378,2893,3.378,2894,3.378,2895,4.681,2915,4.681,2937,3.378,2938,3.378,2939,3.378,2940,3.378,2941,5.738,2942,4.382,3065,5.738,3066,3.378,3067,3.378,3069,3.378,3142,2.383,3181,5.738,3182,3.378,3183,3.378,3185,3.378,3446,5.738,3447,3.378,3448,3.378,3450,3.378,4094,3.378,4095,3.841,4096,3.841,4097,3.841]],["title/additional-documentation/installation-guide.html",[462,1.092,3603,2.372,3834,1.892,4098,2.372]],["body/additional-documentation/installation-guide.html",[4,0.096,12,2.421,19,0.01,20,0.4,39,1.78,63,0.009,64,0.009,180,1.469,218,1.168,280,1.549,302,1.334,446,2.217,448,2.35,521,2.095,650,4.253,831,5.557,832,4.014,858,3.58,926,2.282,977,3.733,1087,4.382,1102,3.282,1111,4.45,1115,3.733,1600,4.382,2065,3.919,2073,3.733,2283,5.055,2343,5.055,2348,5.557,2379,3.913,3095,4.133,3223,5.031,3312,5.557,3583,6.027,3599,4.382,3601,4.681,3603,6.469,3605,5.557,3640,4.681,3697,6.027,3731,5.557,3753,5.557,3790,5.557,4034,5.557,4098,6.174,4099,6.318,4100,7.533,4101,5.58,4102,6.318,4103,6.318,4104,6.318,4105,6.318,4106,7.533,4107,6.318,4108,6.318,4109,8.515,4110,6.318,4111,6.318,4112,6.027,4113,7.533,4114,6.318,4115,6.318,4116,6.318,4117,6.318,4118,6.318,4119,7.533,4120,6.318,4121,6.318,4122,6.318,4123,6.318,4124,6.318,4125,6.318,4126,5.557,4127,6.318,4128,6.318,4129,6.318,4130,6.318,4131,6.318,4132,6.318,4133,6.318,4134,6.318,4135,6.318]],["title/additional-documentation/configuration-guide.html",[462,1.092,832,1.542,3834,1.892,4098,2.372]],["body/additional-documentation/configuration-guide.html",[4,0.115,19,0.009,22,0.6,39,1.777,44,2.034,63,0.009,64,0.009,77,1.135,99,1.075,218,1.166,243,1.843,446,2.213,465,1.599,521,2.092,576,3.277,686,5.047,832,4.332,860,2.151,946,3.761,1014,4.989,1025,4.673,1096,5.219,1102,3.909,1109,4.673,1111,4.921,1112,5.261,1642,3.913,1962,5.047,1973,4.541,2010,5.578,2027,3.038,2073,4.752,2379,4.327,2486,5.578,3089,5.575,3105,5.047,3148,4.673,3223,4.921,3562,6.618,3599,4.374,3600,5.547,3601,4.673,3640,4.673,3671,5.047,3705,5.547,3722,5.547,3736,5.547,3739,4.673,3822,5.547,3840,5.547,4052,5.047,4098,4.673,4101,6.519,4112,5.047,4126,5.547,4136,7.074,4137,6.308,4138,6.308,4139,6.308,4140,7.525,4141,6.308,4142,6.308,4143,6.308,4144,6.308,4145,7.525,4146,6.618,4147,6.308,4148,6.308,4149,6.308,4150,5.547,4151,6.308,4152,6.308,4153,7.525,4154,6.308,4155,6.308,4156,5.547,4157,6.308,4158,5.047,4159,5.547,4160,5.547,4161,6.308,4162,6.308,4163,6.308]],["title/additional-documentation/configuration-guide/configuring-web-forms.html",[99,0.479,462,0.959,832,1.355,3834,1.662,4164,2.474]],["body/additional-documentation/configuration-guide/configuring-web-forms.html",[4,0.128,7,0.267,14,1.773,16,0.267,19,0.01,20,0.549,21,0.507,41,2.903,44,1.873,48,0.147,63,0.007,64,0.009,65,0.248,72,1.511,77,1.578,82,0.654,83,1.376,99,1.503,104,1.188,111,0.984,112,0.903,113,1.196,129,0.972,136,1.727,139,2.109,141,1.627,143,0.698,150,1.552,154,1.637,167,3.709,180,1.652,194,1.163,217,1.288,243,1.403,251,1.196,263,1.708,280,1.194,293,1.045,305,1.123,313,0.89,335,2.128,401,1.127,448,2.471,454,2.266,459,1.513,460,3.27,465,1.968,488,1.718,521,1.399,547,1.616,576,4.13,626,1.48,650,3.279,661,4.041,676,3.375,686,3.375,804,1.36,832,4.267,868,1.832,899,3.375,910,5.874,913,3.603,954,3.57,999,4.922,1014,3.603,1016,1.718,1028,2.759,1099,3.125,1102,4.031,1103,4.303,1110,4.303,1111,3.432,1112,2.759,1113,4.028,1319,2.759,1628,4.028,1633,3.799,1634,2.616,1658,3.125,1746,3.432,1748,4.028,1760,4.238,1812,3.925,1889,3.375,1894,3.375,1896,3.375,1973,3.751,2010,2.925,2028,3.088,2048,2.616,2062,4.647,2063,3.375,2065,3.603,2073,2.492,2075,3.125,2174,3.709,2186,3.375,2292,3.125,2297,3.125,2319,6.481,2378,4.028,2379,3.017,2431,4.303,2486,2.925,2589,5.617,2592,4.028,2623,4.922,2624,5.748,2654,4.028,2769,5.562,2780,6.007,2964,4.303,3089,4.303,3095,2.759,3096,5.89,3098,5.748,3100,3.709,3106,3.375,3133,5.108,3142,3.603,3223,2.492,3380,7.316,3420,3.709,3610,3.709,3616,3.709,3630,5.316,3640,4.303,3681,3.709,3697,4.647,3716,3.375,3718,3.375,3728,3.709,3730,6.603,3733,3.709,3739,3.125,3741,5.316,3780,5.108,3824,3.709,3830,3.709,3832,3.709,3853,3.709,3869,5.843,3871,5.843,4014,3.709,4040,3.709,4052,4.647,4053,5.108,4060,3.709,4083,5.316,4112,3.375,4146,3.709,4150,6.296,4159,3.709,4160,3.709,4164,3.709,4165,3.125,4166,5.108,4167,3.375,4168,4.218,4169,6.644,4170,4.218,4171,4.218,4172,4.218,4173,4.218,4174,4.218,4175,4.218,4176,8.583,4177,4.218,4178,4.218,4179,4.218,4180,4.218,4181,5.108,4182,4.218,4183,5.808,4184,4.218,4185,4.218,4186,4.218,4187,4.218,4188,4.218,4189,4.218,4190,4.218,4191,5.808,4192,5.808,4193,5.808,4194,4.218,4195,4.218,4196,5.808,4197,4.218,4198,4.218,4199,5.808,4200,6.644,4201,6.644,4202,6.644,4203,4.218,4204,8.318,4205,7.158,4206,7.158,4207,4.218,4208,4.218,4209,4.218,4210,4.218,4211,5.808,4212,5.808,4213,5.808,4214,6.644,4215,4.218,4216,3.709,4217,4.218,4218,4.218,4219,4.218,4220,4.218,4221,5.808,4222,4.218,4223,4.218,4224,4.218,4225,6.644,4226,5.808,4227,4.218,4228,4.218,4229,4.218,4230,4.218,4231,4.218,4232,4.218,4233,3.709]],["title/additional-documentation/configuration-guide/configuring-email-notifications.html",[462,0.959,832,1.355,2027,1.355,3834,1.662,4158,2.251]],["body/additional-documentation/configuration-guide/configuring-email-notifications.html",[4,0.126,8,0.671,12,2.174,16,0.36,19,0.01,63,0.008,64,0.008,76,1.531,82,0.814,83,1.138,111,1.248,139,1.439,141,1.529,180,1.376,193,1.708,217,1.021,218,1.304,223,1.529,251,1.021,299,1.529,335,2.097,448,2.856,459,1.376,460,3.291,465,2.095,547,3.078,576,4.292,629,4.766,832,4.114,860,1.935,919,2.548,1014,3.52,1029,5.689,1102,4.292,1137,2.948,2027,4.358,2048,3.52,2065,3.52,2379,4.292,2497,4.204,2853,6.206,3095,3.712,3096,4.204,3098,4.204,3148,4.204,3223,4.169,3522,4.991,3630,4.54,3641,4.991,3655,4.54,3702,6.206,3739,4.204,3741,4.54,3773,6.206,3857,4.991,3873,4.991,4136,7.065,4158,6.906,4165,4.204,4166,4.991,4167,5.646,4181,6.206,4216,4.991,4233,6.754,4234,7.679,4235,8.262,4236,5.689,4237,7.056,4238,5.675,4239,4.991,4240,6.754,4241,5.675,4242,5.675,4243,5.675,4244,5.675,4245,7.679,4246,7.056,4247,5.675,4248,5.675,4249,5.675,4250,5.675,4251,5.675,4252,4.991,4253,5.675,4254,5.675,4255,5.675,4256,8.034,4257,5.675,4258,7.056,4259,5.675,4260,5.675,4261,5.675]],["title/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[462,0.855,832,1.208,1642,1.556,2379,1.303,3834,1.482,4262,2.206]],["body/additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html",[4,0.094,8,0.827,12,2.371,19,0.01,39,1.744,63,0.008,64,0.008,74,1.341,77,1.114,82,0.733,83,0.998,139,1.569,141,1.341,160,1.598,243,1.306,263,1.49,446,2.799,448,2.767,459,1.207,460,3.234,465,1.569,576,3.865,754,5.91,832,4.078,860,2.537,919,3.188,1014,4.615,1102,4.144,1642,5.394,2075,4.584,2379,4.556,2541,4.291,2788,5.953,3095,4.048,3223,4.713,3655,4.951,3718,4.951,3740,5.442,3978,5.442,4101,4.584,4165,4.584,4167,5.953,4236,6.604,4239,7.016,4240,6.543,4252,7.016,4262,7.016,4263,6.188,4264,6.188,4265,6.188,4266,6.188,4267,6.188,4268,6.188,4269,6.188,4270,7.44,4271,7.44,4272,6.188,4273,7.44,4274,7.44,4275,7.44,4276,7.44,4277,6.188,4278,6.188,4279,6.188,4280,7.44,4281,6.188,4282,7.44,4283,6.188]],["title/additional-documentation/configuration-guide/configuring-authentication.html",[462,1.092,832,1.542,1962,2.562,3834,1.892]],["body/additional-documentation/configuration-guide/configuring-authentication.html",[4,0.102,19,0.01,39,1.886,63,0.009,64,0.009,111,1.155,180,1.306,240,1.306,385,2.565,804,2.159,832,3.972,860,2.658,868,2.908,894,2.815,919,2.815,1963,5.888,2379,3.478,2655,4.643,3148,4.96,3221,5.888,3223,3.955,3561,5.888,3599,4.643,3671,5.357,3764,5.888,4083,5.357,4101,6.109,4156,5.888,4165,4.96,4284,8.491,4285,6.695,4286,6.695,4287,6.695,4288,6.695,4289,6.695,4290,6.695,4291,6.695,4292,6.695,4293,6.695,4294,7.794,4295,6.695,4296,6.695,4297,6.695,4298,6.695,4299,6.695,4300,6.695,4301,6.695,4302,6.695,4303,6.695,4304,6.695]],["title/additional-documentation/rest-api-documentation.html",[462,0.959,1973,1.588,3834,1.662,4236,2.084,4305,2.474]],["body/additional-documentation/rest-api-documentation.html",[19,0.009,63,0.009,64,0.009,1973,4.008,3716,5.68,4236,5.259,4305,6.244,4306,7.099]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["0",{"_index":516,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{}}}],["0\">there",{"_index":2800,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["0.1.0",{"_index":3581,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":3508,"title":{},"body":{"dependencies.html":{}}}],["0.2.9",{"_index":3587,"title":{},"body":{"dependencies.html":{}}}],["0.28.0",{"_index":3503,"title":{},"body":{"dependencies.html":{}}}],["0.3.2",{"_index":3584,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":3545,"title":{},"body":{"dependencies.html":{}}}],["0.8.4",{"_index":3591,"title":{},"body":{"dependencies.html":{}}}],["02110",{"_index":1126,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["0px",{"_index":1385,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["1",{"_index":926,"title":{"interfaces/UserForm-1.html":{}},"body":{"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["1.0",{"_index":4206,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["1.0.0",{"_index":3519,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3536,"title":{},"body":{"dependencies.html":{}}}],["1.0.2",{"_index":3512,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3589,"title":{},"body":{"dependencies.html":{}}}],["1.0.9",{"_index":3499,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":3565,"title":{},"body":{"dependencies.html":{}}}],["1.2.8",{"_index":3552,"title":{},"body":{"dependencies.html":{}}}],["1.3.0",{"_index":3543,"title":{},"body":{"dependencies.html":{}}}],["1.3.0.html#map",{"_index":2242,"title":{},"body":{"components/MapComponent.html":{}}}],["1.3.1",{"_index":3533,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":3501,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":3550,"title":{},"body":{"dependencies.html":{}}}],["1.5.2",{"_index":3570,"title":{},"body":{"dependencies.html":{}}}],["1.8",{"_index":4138,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["10",{"_index":925,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{},"license.html":{}}}],["11",{"_index":3802,"title":{},"body":{"license.html":{}}}],["12",{"_index":1748,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["12.0.0",{"_index":3529,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2128,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["1301",{"_index":1127,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["134.074574",{"_index":2083,"title":{},"body":{"components/MapComponent.html":{}}}],["15",{"_index":3928,"title":{},"body":{"license.html":{}}}],["16",{"_index":3929,"title":{},"body":{"license.html":{}}}],["1991",{"_index":1090,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["1996",{"_index":3807,"title":{},"body":{"license.html":{}}}],["2",{"_index":1088,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"overview.html":{}}}],["2.0.0",{"_index":3568,"title":{},"body":{"dependencies.html":{}}}],["2.0.4",{"_index":3514,"title":{},"body":{"dependencies.html":{}}}],["2.0.8",{"_index":3539,"title":{},"body":{"dependencies.html":{}}}],["2.1.1",{"_index":3577,"title":{},"body":{"dependencies.html":{}}}],["2.20.1",{"_index":3537,"title":{},"body":{"dependencies.html":{}}}],["2.4.1",{"_index":3517,"title":{},"body":{"dependencies.html":{}}}],["2.6.1",{"_index":3506,"title":{},"body":{"dependencies.html":{}}}],["2.9",{"_index":3586,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":1166,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["2007",{"_index":3607,"title":{},"body":{"license.html":{}}}],["2017",{"_index":1079,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["22",{"_index":4096,"title":{},"body":{"overview.html":{}}}],["24.673148",{"_index":2082,"title":{},"body":{"components/MapComponent.html":{}}}],["25",{"_index":2125,"title":{},"body":{"components/MapComponent.html":{}}}],["28",{"_index":4017,"title":{},"body":{"license.html":{}}}],["29",{"_index":3606,"title":{},"body":{"license.html":{}}}],["3",{"_index":2058,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["3.0.2",{"_index":3510,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3566,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":3540,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":1901,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"license.html":{}}}],["34.26516142452615",{"_index":2061,"title":{},"body":{"components/MapComponent.html":{}}}],["4",{"_index":2080,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["4.0.1",{"_index":3557,"title":{},"body":{"dependencies.html":{}}}],["4.0.3",{"_index":3532,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":3541,"title":{},"body":{"dependencies.html":{}}}],["4.17.5",{"_index":3534,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":3559,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":2126,"title":{},"body":{"components/MapComponent.html":{}}}],["5",{"_index":2263,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["51",{"_index":1119,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["55",{"_index":4095,"title":{},"body":{"overview.html":{}}}],["58",{"_index":4097,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":3527,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":3521,"title":{},"body":{"dependencies.html":{}}}],["6.3.3",{"_index":3560,"title":{},"body":{"dependencies.html":{}}}],["6.x",{"_index":4102,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["60",{"_index":3955,"title":{},"body":{"license.html":{}}}],["6b",{"_index":3867,"title":{},"body":{"license.html":{}}}],["6d",{"_index":3878,"title":{},"body":{"license.html":{}}}],["7",{"_index":3826,"title":{},"body":{"license.html":{}}}],["7.0.0",{"_index":3525,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":3578,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":824,"title":{},"body":{"classes/BaseService.html":{}}}],["80",{"_index":1902,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["9",{"_index":3167,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9!#$%&'*+\\/=?^_",{"_index":3165,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]([a",{"_index":3166,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?(\\.[a",{"_index":3168,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9])?)*$/i",{"_index":3169,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["9]+\\.pdf",{"_index":2330,"title":{},"body":{"components/PDFListComponent.html":{}}}],["9a",{"_index":2328,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_",{"_index":45,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["_.assign(targetprogress",{"_index":747,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.clonedeep(basefieldinst.opt",{"_index":1256,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeep(this.valu",{"_index":1601,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.clonedeepwith(basefieldinst[f",{"_index":1265,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.clonedeepwith(basefieldinst[f.field",{"_index":1273,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.concat",{"_index":3302,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.concat(this.workspaceapp",{"_index":3422,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(config.field",{"_index":3276,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(data",{"_index":3279,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.each(itemarray",{"_index":1688,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.each(progressarr",{"_index":713,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.each(this.disabledel",{"_index":3395,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.each(this.field",{"_index":1244,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(this.field.field",{"_index":424,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.each(this.field.formmodel.control",{"_index":1335,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.each(this.field.valu",{"_index":2463,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.each(typeconf",{"_index":1488,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["_.each(valu",{"_index":2448,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["_.extend({data:data",{"_index":3334,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.filter(this.plans.item",{"_index":2840,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.find(config.map",{"_index":3294,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.find(this.activerefin",{"_index":2670,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.classes[f.class].comp",{"_index":1807,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.find(this.field.opt",{"_index":3457,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["_.find(this.field.progressarr",{"_index":744,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.find(this.field.selectopt",{"_index":386,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.getformcontrol()['control",{"_index":402,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.find(this.refinerconfig",{"_index":2650,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.find(this.valu",{"_index":3440,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.find(this.workspaceapp",{"_index":3434,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.findindex(that2.lay",{"_index":2202,"title":{},"body":{"components/MapComponent.html":{}}}],["_.first(valu",{"_index":3327,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.foreach(allattach",{"_index":2333,"title":{},"body":{"components/PDFListComponent.html":{}}}],["_.foreach(dependentfieldnam",{"_index":2503,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.foreach(facet",{"_index":2699,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(formcontrol.control",{"_index":413,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(params.activerefin",{"_index":2588,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(querystr.split",{"_index":2679,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.activerefin",{"_index":2662,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.field",{"_index":1307,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.foreach(this.field.onchange.control.subfield",{"_index":528,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.foreach(this.fieldnam",{"_index":1591,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.foreach(this.forceclon",{"_index":1263,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.refinerconfig",{"_index":2657,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.foreach(this.searchfield",{"_index":1699,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.foreach(this.skipclon",{"_index":1261,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.foreach(this.sourcedata",{"_index":1623,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.foreach(this.titlefieldarr",{"_index":1650,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.foreach(this.valu",{"_index":2783,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["_.foreach(valu",{"_index":525,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.forown(fieldmap",{"_index":1876,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.forown(fieldnam",{"_index":1712,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.forown(fld",{"_index":1592,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.forown(fldnam",{"_index":1678,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.forown(refinervalu",{"_index":2688,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.forown(servicearr",{"_index":1956,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.forown(this.fieldmap._rootcomp",{"_index":1015,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.get(d",{"_index":3282,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.get(data",{"_index":1677,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.get(data,field",{"_index":3306,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.get(data,fieldpath",{"_index":3290,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.includes(cloneopts.copi",{"_index":1280,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.includes(cloneopts.skipclon",{"_index":1279,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isarray(data",{"_index":3277,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isarray(plan.titl",{"_index":2842,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isarray(this.classes[f.class].comp",{"_index":1805,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isarray(this.field.valu",{"_index":396,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(valu",{"_index":524,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isarray(valueelem",{"_index":1239,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isempty(_.trim(this.field.searchfilternam",{"_index":2849,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.isempty(control.valu",{"_index":2500,"title":{},"body":{"classes/RbValidator.html":{}}}],["_.isempty(data",{"_index":1668,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isempty(exactsearchnam",{"_index":2593,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(facetsearchnam",{"_index":2597,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(focustabid",{"_index":504,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(key",{"_index":1940,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isempty(nam",{"_index":352,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(oid",{"_index":695,"title":{},"body":{"classes/AsynchField.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(packagetyp",{"_index":936,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(password",{"_index":3175,"title":{},"body":{"interfaces/UserForm.html":{}}}],["_.isempty(plan.titl",{"_index":951,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(plan.title[0",{"_index":952,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(recordtyp",{"_index":933,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(refiner.activevalu",{"_index":2600,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(refiner.valu",{"_index":2697,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(sort",{"_index":939,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(st",{"_index":942,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isempty(targetstep",{"_index":2558,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.isempty(term",{"_index":1697,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isempty(this.cssclass",{"_index":2257,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isempty(this.field.nam",{"_index":366,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(this.field.relatedrecordid",{"_index":709,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.isempty(this.field.valu",{"_index":518,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isempty(this.refinerconfig.valu",{"_index":2766,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["_.isempty(tv",{"_index":530,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isempty(valu",{"_index":2220,"title":{},"body":{"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isfunction(disabledelement.prop",{"_index":1043,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["_.isfunction(newelem.setemptyvalu",{"_index":1285,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(newinst.postinit",{"_index":1275,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isfunction(this.field.gettitl",{"_index":1770,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isnull(ctrlindex",{"_index":359,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(data",{"_index":3299,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isnull(fc.control",{"_index":361,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isnull(oid",{"_index":693,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.isnull(this.field.valu",{"_index":1742,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isstring(data",{"_index":1669,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isstring(f",{"_index":1264,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isstring(fieldnam",{"_index":1709,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isstring(fldnam",{"_index":1675,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isstring(this.titlefielddelim",{"_index":1649,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isundefined(ctrlindex",{"_index":360,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(data",{"_index":1667,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isundefined(fc.control",{"_index":362,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(fieldpath",{"_index":3292,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.isundefined(inst.compclass",{"_index":1813,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.isundefined(key",{"_index":1941,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.isundefined(oid",{"_index":694,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.isundefined(options['cansort",{"_index":1349,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['delegateerrorhandl",{"_index":1215,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.isundefined(options['restricttoselect",{"_index":1581,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isundefined(packagetyp",{"_index":937,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(plan.titl",{"_index":950,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(recordtyp",{"_index":934,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(sort",{"_index":940,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(st",{"_index":943,"title":{},"body":{"injectables/DashboardService.html":{}}}],["_.isundefined(this.field.relatedrecordid",{"_index":708,"title":{},"body":{"classes/AsynchField.html":{}}}],["_.isundefined(this.field.valu",{"_index":1743,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.isundefined(this.valu",{"_index":2267,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["_.isundefined(v",{"_index":383,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["_.isundefined(valu",{"_index":2694,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.join(_.get(data",{"_index":3331,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.keys(subtracker.loaded).length",{"_index":1953,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(data",{"_index":1706,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.map(field",{"_index":1820,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(fieldsarr",{"_index":1795,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["_.map(options['defaultselect",{"_index":3412,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(servicearr",{"_index":1946,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["_.map(this.opt",{"_index":3438,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["_.map(this.valu",{"_index":1235,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.merge(this.classes,componentclass",{"_index":1872,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["_.merge(this.drawopt",{"_index":2157,"title":{},"body":{"components/MapComponent.html":{}}}],["_.merge(this.leafletopt",{"_index":2153,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(that2.lay",{"_index":2212,"title":{},"body":{"components/MapComponent.html":{}}}],["_.remove(this.activerefin",{"_index":2645,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.remove(this.field",{"_index":1292,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["_.remove(this.valu",{"_index":2457,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["_.size(params.activerefin",{"_index":2583,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.startswith(qobj[0",{"_index":2683,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["_.template(config.templ",{"_index":3338,"title":{},"body":{"injectables/UtilityService.html":{}}}],["_.template(disabledexpress",{"_index":1020,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["_.tolower(term",{"_index":1698,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.tolower(title).includes(_.tolower(this.searchfilternam",{"_index":2844,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["_.trim(luceneescapequery.escape(term",{"_index":1696,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["_.unset(v",{"_index":2450,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["__config",{"_index":753,"title":{},"body":{"classes/BaseService.html":{}}}],["_blank",{"_index":1502,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["aaf",{"_index":4284,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["abil",{"_index":3910,"title":{},"body":{"license.html":{}}}],["abov",{"_index":2063,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["absenc",{"_index":3827,"title":{},"body":{"license.html":{}}}],["absent",{"_index":3099,"title":{},"body":{"injectables/TranslationService.html":{}}}],["absolut",{"_index":4055,"title":{},"body":{"license.html":{}}}],["abstractcontrol",{"_index":2490,"title":{},"body":{"classes/RbValidator.html":{}}}],["abus",{"_index":3669,"title":{},"body":{"license.html":{}}}],["accept",{"_index":3962,"title":{},"body":{"license.html":{}}}],["access",{"_index":2788,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["accessdeniedobject",{"_index":2304,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["accessor",{"_index":764,"title":{},"body":{"classes/BaseService.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["accompani",{"_index":3852,"title":{},"body":{"license.html":{}}}],["accord",{"_index":3825,"title":{},"body":{"license.html":{}}}],["achiev",{"_index":4061,"title":{},"body":{"license.html":{}}}],["acknowledg",{"_index":3775,"title":{},"body":{"license.html":{}}}],["acquir",{"_index":3987,"title":{},"body":{"license.html":{}}}],["action",{"_index":74,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["actionbutton",{"_index":151,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["actionbuttoncompon",{"_index":66,"title":{"components/ActionButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["activ",{"_index":2655,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["activerefin",{"_index":2637,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiner.nam",{"_index":2672,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activerefiner:recordsearchrefin",{"_index":2671,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["activevalu",{"_index":2625,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["actual",{"_index":3262,"title":{},"body":{"injectables/UtilityService.html":{},"license.html":{}}}],["actual_compon",{"_index":317,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["ad",{"_index":3824,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["adapt",{"_index":3704,"title":{},"body":{"license.html":{}}}],["add",{"_index":2540,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["addactiverefin",{"_index":2719,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["addactiverefiner(refin",{"_index":2668,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["addbuttonclass",{"_index":1185,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontext",{"_index":1179,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addbuttontextclass",{"_index":1183,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addcomponentclass",{"_index":1847,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["addcomponentclasses(componentclass",{"_index":1855,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["addelem",{"_index":2855,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addelem(ev",{"_index":1330,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["addelem(val:ani",{"_index":1282,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["addit",{"_index":3834,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"license.html":{}}}],["addloc",{"_index":2442,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["addlocalus",{"_index":3190,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addlocaluser(usernam",{"_index":3201,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["addrendercompleteelement(fieldsmeta",{"_index":2523,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["address",{"_index":3702,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["admin",{"_index":4205,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["adopt",{"_index":3805,"title":{},"body":{"license.html":{}}}],["advantag",{"_index":4147,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["advers",{"_index":3913,"title":{},"body":{"license.html":{}}}],["advis",{"_index":4051,"title":{},"body":{"license.html":{}}}],["affect",{"_index":3914,"title":{},"body":{"license.html":{}}}],["affero",{"_index":4028,"title":{},"body":{"license.html":{}}}],["affirm",{"_index":3770,"title":{},"body":{"license.html":{}}}],["afterviewcheck",{"_index":331,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterviewinit",{"_index":330,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["afterward",{"_index":3044,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["again",{"_index":1032,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["against",{"_index":3817,"title":{},"body":{"license.html":{}}}],["aggreg",{"_index":3844,"title":{},"body":{"license.html":{}}}],["agre",{"_index":4026,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":3992,"title":{},"body":{"license.html":{}}}],["aim",{"_index":3667,"title":{},"body":{"license.html":{}}}],["allattachmentspromis",{"_index":2324,"title":{},"body":{"components/PDFListComponent.html":{}}}],["allattachmentspromise.then(allattach",{"_index":2331,"title":{},"body":{"components/PDFListComponent.html":{}}}],["alleg",{"_index":3982,"title":{},"body":{"license.html":{}}}],["allow",{"_index":3098,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["along",{"_index":1116,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["alreadi",{"_index":993,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["altern",{"_index":3863,"title":{},"body":{"license.html":{}}}],["although",{"_index":3663,"title":{},"body":{"license.html":{}}}],["alwaysact",{"_index":2623,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["anchor",{"_index":200,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["anchororbutton",{"_index":161,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncompon",{"_index":199,"title":{"components/AnchorOrButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["anchororbuttoncomponent:111",{"_index":3367,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:119",{"_index":3369,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:126",{"_index":3370,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:133",{"_index":3368,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:141",{"_index":3366,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:38",{"_index":3355,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:42",{"_index":3357,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:46",{"_index":3356,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:50",{"_index":3358,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:521",{"_index":3373,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:523",{"_index":3364,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:527",{"_index":3363,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:54",{"_index":3360,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:56",{"_index":3359,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:60",{"_index":3375,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:64",{"_index":3374,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:69",{"_index":3377,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:74",{"_index":3376,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["anchororbuttoncomponent:81",{"_index":3365,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["ancillari",{"_index":3963,"title":{},"body":{"license.html":{}}}],["and",{"_index":202,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["and/or",{"_index":1095,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["andrew",{"_index":2097,"title":{},"body":{"components/MapComponent.html":{},"injectables/UtilityService.html":{}}}],["andshow",{"_index":4080,"title":{},"body":{"license.html":{}}}],["andsservic",{"_index":1,"title":{"injectables/ANDSService.html":{}},"body":{"injectables/ANDSService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["andsvocab.compon",{"_index":2957,"title":{},"body":{"modules/SharedModule.html":{}}}],["andsvocabcompon",{"_index":201,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["andsvocabcomponent,pdflistcompon",{"_index":2987,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular",{"_index":2975,"title":{},"body":{"modules/SharedModule.html":{},"components/TreeNodeCheckboxComponent.html":{}}}],["angular/.../forms.t",{"_index":3594,"title":{},"body":{"miscellaneous/functions.html":{}}}],["angular/common",{"_index":625,"title":{},"body":{"classes/AsynchField.html":{},"components/ExportFormComponent.html":{}}}],["angular/cor",{"_index":31,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/dashboard/app/dashboard.module.t",{"_index":869,"title":{},"body":{"modules/DashboardModule.html":{}}}],["angular/dashboard/app/sort.component.t",{"_index":3004,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:23",{"_index":3009,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:24",{"_index":3011,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:25",{"_index":3010,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:26",{"_index":3012,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:27",{"_index":3013,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dashboard/app/sort.component.ts:31",{"_index":3014,"title":{},"body":{"components/SortComponent.html":{}}}],["angular/dmp/app/dmp.module.t",{"_index":1076,"title":{},"body":{"modules/DmpModule.html":{}}}],["angular/e2e/app.po.t",{"_index":560,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:4",{"_index":564,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/e2e/app.po.ts:8",{"_index":563,"title":{},"body":{"classes/AngularPage.html":{}}}],["angular/export/app/export",{"_index":1404,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["angular/export/app/export.module.t",{"_index":1511,"title":{},"body":{"modules/ExportModule.html":{}}}],["angular/form",{"_index":345,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/http",{"_index":32,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"modules/DmpModule.html":{},"injectables/EmailNotificationService.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{}}}],["angular/localauth/app/local_auth.component.t",{"_index":1961,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:42",{"_index":1979,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:43",{"_index":1980,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:44",{"_index":1974,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:65",{"_index":1978,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.component.ts:85",{"_index":1976,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["angular/localauth/app/local_auth.module.t",{"_index":2018,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["angular/manageroles/app/manage_roles.module.t",{"_index":2035,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["angular/manageusers/app/forms.t",{"_index":3144,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["angular/manageusers/app/manage_users.module.t",{"_index":2042,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["angular/platform",{"_index":872,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["angular/record_search/app/record",{"_index":2748,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["angular/record_search/app/record_search.module.t",{"_index":2718,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["angular/report/app/multivaluefieldpipe.t",{"_index":2279,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/multivaluefieldpipe.ts:14",{"_index":2284,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["angular/report/app/report.module.t",{"_index":2896,"title":{},"body":{"modules/ReportModule.html":{}}}],["angular/shared/and",{"_index":5,"title":{},"body":{"injectables/ANDSService.html":{}}}],["angular/shared/bas",{"_index":750,"title":{},"body":{"classes/BaseService.html":{}}}],["angular/shared/config",{"_index":829,"title":{},"body":{"injectables/ConfigService.html":{}}}],["angular/shared/dashboard",{"_index":884,"title":{},"body":{"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["angular/shared/email",{"_index":1136,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["angular/shared/form/act",{"_index":69,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["angular/shared/form/dmp",{"_index":965,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["angular/shared/form/field",{"_index":318,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["angular/shared/form/record",{"_index":2703,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["angular/shared/form/records.service.t",{"_index":2513,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:225",{"_index":2516,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:226",{"_index":2515,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:227",{"_index":2514,"title":{},"body":{"classes/RecordActionResult.html":{}}}],["angular/shared/form/records.service.ts:231",{"_index":2742,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:232",{"_index":2743,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:233",{"_index":2744,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:234",{"_index":2746,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:235",{"_index":2741,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:236",{"_index":2745,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:237",{"_index":2740,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:248",{"_index":2747,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["angular/shared/form/records.service.ts:258",{"_index":2727,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:259",{"_index":2726,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:260",{"_index":2725,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:261",{"_index":2724,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:269",{"_index":2729,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:278",{"_index":2732,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:284",{"_index":2738,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:294",{"_index":2731,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:306",{"_index":2733,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:310",{"_index":2728,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:321",{"_index":2736,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:341",{"_index":2730,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:348",{"_index":2734,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/records.service.ts:358",{"_index":2737,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["angular/shared/form/tre",{"_index":3123,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["angular/shared/form/validators.t",{"_index":2484,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:34",{"_index":2491,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/validators.ts:43",{"_index":2495,"title":{},"body":{"classes/RbValidator.html":{}}}],["angular/shared/form/workflow",{"_index":3353,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["angular/shared/form/workspac",{"_index":3383,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["angular/shared/loadable.component.t",{"_index":1918,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:30",{"_index":1920,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:31",{"_index":1922,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:32",{"_index":1921,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:33",{"_index":1919,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:41",{"_index":1926,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:48",{"_index":1929,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:53",{"_index":1923,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:59",{"_index":1925,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:63",{"_index":1927,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:68",{"_index":1928,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:76",{"_index":1924,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/loadable.component.ts:89",{"_index":1930,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["angular/shared/report",{"_index":2885,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["angular/shared/rol",{"_index":2916,"title":{},"body":{"injectables/RolesService.html":{}}}],["angular/shared/shared.module.t",{"_index":2943,"title":{},"body":{"modules/SharedModule.html":{}}}],["angular/shared/stringtemplatepipe.t",{"_index":3027,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:14",{"_index":3030,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/stringtemplatepipe.ts:22",{"_index":3051,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["angular/shared/transl",{"_index":3072,"title":{},"body":{"injectables/TranslationService.html":{}}}],["angular/shared/us",{"_index":2020,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["angular/shared/user.servic",{"_index":3188,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["angular/shared/util",{"_index":3237,"title":{},"body":{"injectables/UtilityService.html":{}}}],["angular/shared/workspac",{"_index":3491,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["angular/transfer_owner/app/transfer_owner.module.t",{"_index":3070,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["angular/userprofile/app/forms.t",{"_index":3180,"title":{},"body":{"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["angular/userprofile/app/user_profile.module.t",{"_index":3186,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["angular/workspace_list/app/workspace_list.module.t",{"_index":3451,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["angular2",{"_index":2946,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{}}}],["angularpag",{"_index":559,"title":{"classes/AngularPage.html":{}},"body":{"classes/AngularPage.html":{}}}],["anti",{"_index":3793,"title":{},"body":{"license.html":{}}}],["anyon",{"_index":3831,"title":{},"body":{"license.html":{}}}],["anyth",{"_index":3045,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"license.html":{}}}],["aotmod",{"_index":2235,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["apach",{"_index":4105,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["api",{"_index":4236,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["api//method",{"_index":4277,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api//url",{"_index":4279,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/send",{"_index":4238,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/messaging/emailnotif",{"_index":4253,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["api/v1/object/$packagetyp",{"_index":4280,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/recordmetadata/$oid",{"_index":4282,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["api/v1/search",{"_index":4281,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["app",{"_index":977,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["app.j",{"_index":4121,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["appear",{"_index":4225,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["append",{"_index":3420,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["appendlocation(newloc:ani",{"_index":2445,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["appli",{"_index":2431,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["applic",{"_index":3095,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["application/json;charset=utf",{"_index":823,"title":{},"body":{"classes/BaseService.html":{}}}],["applicationpm2",{"_index":4133,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["applicationref",{"_index":978,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["applink",{"_index":3400,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["applyeditnotesbuttontext",{"_index":2418,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["applyfilt",{"_index":2751,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(ev",{"_index":2758,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["applyfilter(event:ani",{"_index":2761,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["appropri",{"_index":3724,"title":{},"body":{"license.html":{}}}],["approxim",{"_index":4054,"title":{},"body":{"license.html":{}}}],["area",{"_index":2249,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["area'},{'nam",{"_index":252,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["arg",{"_index":2283,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"additional-documentation/installation-guide.html":{}}}],["args?:any[]):str",{"_index":2287,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["arialabel",{"_index":3128,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["aris",{"_index":3676,"title":{},"body":{"license.html":{}}}],["around",{"_index":4153,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["arrang",{"_index":4000,"title":{},"body":{"license.html":{}}}],["array",{"_index":1633,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["arrayproperti",{"_index":1520,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["articl",{"_index":3801,"title":{},"body":{"license.html":{}}}],["asc",{"_index":3020,"title":{},"body":{"components/SortComponent.html":{}}}],["ask",{"_index":3636,"title":{},"body":{"license.html":{}}}],["assert",{"_index":3648,"title":{},"body":{"license.html":{}}}],["assests/local",{"_index":4232,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["asset",{"_index":3970,"title":{},"body":{"license.html":{}}}],["associ",{"_index":3756,"title":{},"body":{"license.html":{}}}],["assum",{"_index":2172,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["assumpt",{"_index":3939,"title":{},"body":{"license.html":{}}}],["assur",{"_index":3693,"title":{},"body":{"license.html":{}}}],["asymmetrik/ngx",{"_index":2966,"title":{},"body":{"modules/SharedModule.html":{}}}],["async",{"_index":572,"title":{},"body":{"classes/AsynchField.html":{},"dependencies.html":{}}}],["asynch",{"_index":205,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["asynch.compon",{"_index":2976,"title":{},"body":{"modules/SharedModule.html":{}}}],["asynch.component.html",{"_index":688,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.t",{"_index":571,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:42",{"_index":604,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:43",{"_index":609,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:44",{"_index":599,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:45",{"_index":606,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:46",{"_index":611,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:47",{"_index":602,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:48",{"_index":600,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:49",{"_index":610,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:50",{"_index":605,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:51",{"_index":603,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:52",{"_index":597,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:53",{"_index":598,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:54",{"_index":607,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:55",{"_index":608,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:56",{"_index":601,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:57",{"_index":596,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynch.component.ts:79",{"_index":613,"title":{},"body":{"classes/AsynchField.html":{}}}],["asynchcompon",{"_index":204,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["asynchfield",{"_index":570,"title":{"classes/AsynchField.html":{}},"body":{"classes/AsynchField.html":{}}}],["asynchron",{"_index":685,"title":{},"body":{"classes/AsynchField.html":{}}}],["asyncloaddata",{"_index":2781,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["attach",{"_index":2297,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["attachment':\"attach",{"_index":2413,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["attachment.dateupd",{"_index":2336,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attachment:ani",{"_index":2334,"title":{},"body":{"components/PDFListComponent.html":{}}}],["attempt",{"_index":3946,"title":{},"body":{"license.html":{}}}],["attr.aria",{"_index":1362,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["attribut",{"_index":3659,"title":{},"body":{"license.html":{}}}],["au",{"_index":3108,"title":{},"body":{"injectables/TranslationService.html":{}}}],["audienc",{"_index":4295,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["australia",{"_index":2078,"title":{},"body":{"components/MapComponent.html":{}}}],["auth",{"_index":1963,"title":{},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["auth'},{'nam",{"_index":241,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["auth.j",{"_index":4155,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["authent",{"_index":1962,"title":{"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"components/LocalAuthComponent.html":{},"additional-documentation/configuration-guide.html":{}}}],["author",{"_index":143,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["authoris",{"_index":4156,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["automat",{"_index":3764,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["autoreload",{"_index":3564,"title":{},"body":{"dependencies.html":{}}}],["avail",{"_index":3716,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["avoid",{"_index":3689,"title":{},"body":{"license.html":{}}}],["away",{"_index":3617,"title":{},"body":{"license.html":{}}}],["axio",{"_index":3507,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":2343,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["back",{"_index":4218,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["backend",{"_index":3112,"title":{},"body":{"injectables/TranslationService.html":{},"dependencies.html":{}}}],["background",{"_index":573,"title":{},"body":{"classes/AsynchField.html":{}}}],["banihit",{"_index":145,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["base",{"_index":160,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseclass",{"_index":1328,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["basefield",{"_index":1232,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["basefieldinst.constructor(newopt",{"_index":1259,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["baselay",{"_index":2143,"title":{},"body":{"components/MapComponent.html":{}}}],["baseservic",{"_index":37,"title":{"classes/BaseService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["baseurl",{"_index":754,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/mint",{"_index":4272,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl/redbox",{"_index":4269,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["baseurl:str",{"_index":799,"title":{},"body":{"classes/BaseService.html":{}}}],["basic",{"_index":3765,"title":{},"body":{"license.html":{}}}],["basicsearch",{"_index":909,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["bcrypt",{"_index":3509,"title":{},"body":{"dependencies.html":{}}}],["be",{"_index":2075,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["bearer",{"_index":3546,"title":{},"body":{"dependencies.html":{}}}],["becom",{"_index":1031,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["befor",{"_index":994,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["begin",{"_index":4190,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["behalf",{"_index":3786,"title":{},"body":{"license.html":{}}}],["behaviour",{"_index":3100,"title":{},"body":{"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["believ",{"_index":4007,"title":{},"body":{"license.html":{}}}],["below",{"_index":3790,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["benefit",{"_index":4003,"title":{},"body":{"license.html":{}}}],["best",{"_index":4060,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["beta.19",{"_index":3528,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":3762,"title":{},"body":{"license.html":{}}}],["beyond",{"_index":3846,"title":{},"body":{"license.html":{}}}],["blank",{"_index":3047,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["block",{"_index":447,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["block'},{'nam",{"_index":294,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["bodi",{"_index":816,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"license.html":{}}}],["body[parentfield",{"_index":818,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["bonequi",{"_index":3254,"title":{},"body":{"injectables/UtilityService.html":{}}}],["boolean",{"_index":110,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["boolean=tru",{"_index":1937,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["bootstrap",{"_index":859,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/VocabFieldLookupService.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{}}}],["boston",{"_index":1124,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["both",{"_index":3655,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["box",{"_index":4083,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["br",{"_index":3110,"title":{},"body":{"injectables/TranslationService.html":{}}}],["brand",{"_index":3221,"title":{},"body":{"injectables/UserSimpleService.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["branding/@portal/dashboard",{"_index":458,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["branding:this.config.brand",{"_index":3227,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["brandingandportalurl",{"_index":755,"title":{},"body":{"classes/BaseService.html":{}}}],["brandingandportalurl:str",{"_index":800,"title":{},"body":{"classes/BaseService.html":{}}}],["brazzatti",{"_index":2098,"title":{},"body":{"components/MapComponent.html":{},"injectables/UtilityService.html":{}}}],["break",{"_index":443,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["brief",{"_index":4066,"title":{},"body":{"license.html":{}}}],["brows",{"_index":4093,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":565,"title":{},"body":{"classes/AngularPage.html":{},"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{}}}],["browser.get",{"_index":567,"title":{},"body":{"classes/AngularPage.html":{}}}],["browserlanguagedetector",{"_index":3093,"title":{},"body":{"injectables/TranslationService.html":{}}}],["browsermodul",{"_index":871,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["btn",{"_index":1162,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["build",{"_index":1715,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["built",{"_index":4144,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["busi",{"_index":4014,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["button",{"_index":75,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["button'},{'nam",{"_index":198,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["button.compon",{"_index":2960,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.t",{"_index":70,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["button.component.ts:23",{"_index":3372,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["button.component.ts:25",{"_index":3362,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["button.component.ts:45",{"_index":152,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:47",{"_index":117,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["button.component.ts:59",{"_index":120,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["buttonbarcontain",{"_index":442,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["buttonbarcontainer'},{'nam",{"_index":208,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["buttonbarcontainercompon",{"_index":207,"title":{"components/ButtonBarContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["buttonelem",{"_index":1036,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["c",{"_index":1078,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["c.clname",{"_index":1810,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["c.haserror('requir",{"_index":1336,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["c:ani",{"_index":1808,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["cach",{"_index":3033,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"dependencies.html":{}}}],["cache[templ",{"_index":3036,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["calcyt",{"_index":3511,"title":{},"body":{"dependencies.html":{}}}],["calendar",{"_index":1483,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["call",{"_index":449,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["callback",{"_index":4302,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["can't",{"_index":1759,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["cancel",{"_index":210,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["cancelbutton",{"_index":338,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cancelbuttoncompon",{"_index":209,"title":{"components/CancelButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["canceleditnotesbuttontext",{"_index":2417,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["canremov",{"_index":1152,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["cansort",{"_index":1347,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["captur",{"_index":4167,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["carri",{"_index":3828,"title":{},"body":{"license.html":{}}}],["case",{"_index":444,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["catch",{"_index":2188,"title":{},"body":{"components/MapComponent.html":{}}}],["catch(error",{"_index":3425,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["caus",{"_index":3848,"title":{},"body":{"license.html":{}}}],["ceas",{"_index":3948,"title":{},"body":{"license.html":{}}}],["center",{"_index":2059,"title":{},"body":{"components/MapComponent.html":{}}}],["centr",{"_index":2077,"title":{},"body":{"components/MapComponent.html":{}}}],["certain",{"_index":3638,"title":{},"body":{"license.html":{}}}],["cessat",{"_index":3957,"title":{},"body":{"license.html":{}}}],["chang",{"_index":521,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["changedetectorref",{"_index":332,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["changeref",{"_index":421,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["charact",{"_index":1943,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["character",{"_index":3908,"title":{},"body":{"license.html":{}}}],["charg",{"_index":3628,"title":{},"body":{"license.html":{}}}],["check",{"_index":2399,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["checkbox",{"_index":3127,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["checkbox'},{'nam",{"_index":303,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["checkbox.compon",{"_index":2978,"title":{},"body":{"modules/SharedModule.html":{}}}],["checkbox.component.t",{"_index":3124,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:21",{"_index":3131,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkbox.component.ts:22",{"_index":3129,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["checkifhasload",{"_index":1429,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["checkou",{"_index":4110,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chevron",{"_index":1209,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["choic",{"_index":4111,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["chokidar",{"_index":3513,"title":{},"body":{"dependencies.html":{}}}],["choos",{"_index":4033,"title":{},"body":{"license.html":{}}}],["circl",{"_index":1165,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["circlemark",{"_index":2134,"title":{},"body":{"components/MapComponent.html":{}}}],["circumst",{"_index":3789,"title":{},"body":{"license.html":{}}}],["circumvent",{"_index":3794,"title":{},"body":{"license.html":{}}}],["civil",{"_index":4057,"title":{},"body":{"license.html":{}}}],["ckan",{"_index":79,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["claim",{"_index":3979,"title":{},"body":{"license.html":{}}}],["class",{"_index":48,"title":{"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/LoadableComponent.html":{},"classes/LoginResult.html":{},"classes/MintLookupDataService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"classes/User.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["clear",{"_index":2643,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["clearli",{"_index":3653,"title":{},"body":{"license.html":{}}}],["clearpendingatt(valu",{"_index":2447,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["click)=\"movedown($ev",{"_index":1364,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"moveup($ev",{"_index":1357,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["click)=\"removeelem($ev",{"_index":1367,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["client",{"_index":751,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["clname",{"_index":394,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["clone",{"_index":4114,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["close",{"_index":455,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["closeonsav",{"_index":456,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["cluster_dashboardmodul",{"_index":861,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_bootstrap",{"_index":864,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_declar",{"_index":862,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dashboardmodule_import",{"_index":863,"title":{},"body":{"modules/DashboardModule.html":{},"overview.html":{}}}],["cluster_dmpmodul",{"_index":1072,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_bootstrap",{"_index":1075,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_declar",{"_index":1073,"title":{},"body":{"modules/DmpModule.html":{},"overview.html":{}}}],["cluster_dmpmodule_import",{"_index":1074,"title":{},"body":{"modules/DmpModule.html":{}}}],["cluster_exportmodul",{"_index":1506,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_bootstrap",{"_index":1510,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_declar",{"_index":1507,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_exportformcomponent_provid",{"_index":1508,"title":{},"body":{"modules/ExportModule.html":{},"overview.html":{}}}],["cluster_exportmodule_import",{"_index":1509,"title":{},"body":{"modules/ExportModule.html":{}}}],["cluster_localauthmodul",{"_index":2014,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_bootstrap",{"_index":2017,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_declar",{"_index":2015,"title":{},"body":{"modules/LocalAuthModule.html":{},"overview.html":{}}}],["cluster_localauthmodule_import",{"_index":2016,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["cluster_managerolesmodul",{"_index":2031,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_bootstrap",{"_index":2034,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_declar",{"_index":2032,"title":{},"body":{"modules/ManageRolesModule.html":{},"overview.html":{}}}],["cluster_managerolesmodule_import",{"_index":2033,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["cluster_manageusersmodul",{"_index":2038,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_bootstrap",{"_index":2041,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_declar",{"_index":2039,"title":{},"body":{"modules/ManageUsersModule.html":{},"overview.html":{}}}],["cluster_manageusersmodule_import",{"_index":2040,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["cluster_recordsearchmodul",{"_index":2713,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_bootstrap",{"_index":2717,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_declar",{"_index":2714,"title":{},"body":{"modules/RecordSearchModule.html":{},"overview.html":{}}}],["cluster_recordsearchmodule_import",{"_index":2716,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_recordsearchmodule_recordsearchcomponent_provid",{"_index":2715,"title":{},"body":{"modules/RecordSearchModule.html":{}}}],["cluster_reportmodul",{"_index":2890,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_bootstrap",{"_index":2893,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_declar",{"_index":2891,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_reportmodule_import",{"_index":2892,"title":{},"body":{"modules/ReportModule.html":{}}}],["cluster_reportmodule_provid",{"_index":2894,"title":{},"body":{"modules/ReportModule.html":{},"overview.html":{}}}],["cluster_sharedmodul",{"_index":2937,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declar",{"_index":2938,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_export",{"_index":2939,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_provid",{"_index":2940,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_transferownermodul",{"_index":3066,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_bootstrap",{"_index":3069,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_declar",{"_index":3067,"title":{},"body":{"modules/TransferOwnerModule.html":{},"overview.html":{}}}],["cluster_transferownermodule_import",{"_index":3068,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["cluster_userprofilemodul",{"_index":3182,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_bootstrap",{"_index":3185,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_declar",{"_index":3183,"title":{},"body":{"modules/UserProfileModule.html":{},"overview.html":{}}}],["cluster_userprofilemodule_import",{"_index":3184,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["cluster_workspacelistmodul",{"_index":3447,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_bootstrap",{"_index":3450,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_declar",{"_index":3448,"title":{},"body":{"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["cluster_workspacelistmodule_import",{"_index":3449,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["code",{"_index":3630,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["col",{"_index":1746,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collect",{"_index":1628,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["collectionid",{"_index":3347,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["column",{"_index":2307,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["column.link.pattern",{"_index":2797,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["columntitle:str",{"_index":2814,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["combin",{"_index":3161,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{}}}],["come",{"_index":3832,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["command",{"_index":3731,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["commenc",{"_index":4207,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["commerci",{"_index":3896,"title":{},"body":{"license.html":{}}}],["commit",{"_index":3993,"title":{},"body":{"license.html":{}}}],["common",{"_index":3895,"title":{},"body":{"license.html":{}}}],["commun",{"_index":3760,"title":{},"body":{"license.html":{}}}],["compare(a",{"_index":2342,"title":{},"body":{"components/PDFListComponent.html":{}}}],["compat",{"_index":3561,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["compclass",{"_index":1812,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["compfactori",{"_index":1047,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compil",{"_index":1019,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["compilation'",{"_index":3845,"title":{},"body":{"license.html":{}}}],["complet",{"_index":654,"title":{},"body":{"classes/AsynchField.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["completerdata",{"_index":1516,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["completeritem",{"_index":1528,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["completeritem['originalobject",{"_index":1693,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["completeritem[this.compositetitlenam",{"_index":1692,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["completerservic",{"_index":1534,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["completionlabel",{"_index":577,"title":{},"body":{"classes/AsynchField.html":{}}}],["completionratetyp",{"_index":578,"title":{},"body":{"classes/AsynchField.html":{}}}],["complex",{"_index":4260,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["compli",{"_index":3783,"title":{},"body":{"license.html":{}}}],["complianc",{"_index":3968,"title":{},"body":{"license.html":{}}}],["compon",{"_index":65,"title":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["component'},{'nam",{"_index":206,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["component_templ",{"_index":197,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["componentclass",{"_index":1857,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["componentfactoryresolv",{"_index":976,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["componentreactor",{"_index":1271,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["componentref",{"_index":1004,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["compositetitlenam",{"_index":1521,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["comput",{"_index":3688,"title":{},"body":{"license.html":{}}}],["concat",{"_index":3259,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concaten",{"_index":3238,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concatenate(data",{"_index":3247,"title":{},"body":{"injectables/UtilityService.html":{}}}],["concern",{"_index":4029,"title":{},"body":{"license.html":{}}}],["condit",{"_index":3695,"title":{},"body":{"license.html":{}}}],["config",{"_index":44,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config.default",{"_index":3298,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim",{"_index":3304,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.delim}${flddata",{"_index":3285,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.field",{"_index":3289,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flag",{"_index":3311,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.flagstrail",{"_index":3318,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.nam",{"_index":2651,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config.regex",{"_index":3310,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.regextrail",{"_index":3316,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.separ",{"_index":3332,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config.setcurrentvalue(valu",{"_index":2690,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["config/emailnotification.j",{"_index":4234,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["config/env/.j",{"_index":4163,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["config/env/development.j",{"_index":4286,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/env/production.j",{"_index":4287,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["config/form.j",{"_index":4209,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/record.j",{"_index":4264,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["config/recordtype.j",{"_index":4178,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config/workflow.j",{"_index":4182,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["config:ani",{"_index":3291,"title":{},"body":{"injectables/UtilityService.html":{}}}],["config:config",{"_index":3335,"title":{},"body":{"injectables/UtilityService.html":{}}}],["configr",{"_index":4149,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["configservic",{"_index":13,"title":{"injectables/ConfigService.html":{}},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["configur",{"_index":832,"title":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}},"body":{"injectables/ConfigService.html":{},"components/MapComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["configurationpm2",{"_index":4135,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["confirmpassword",{"_index":3149,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["connect",{"_index":4009,"title":{},"body":{"license.html":{}}}],["connectcb",{"_index":2618,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["consequ",{"_index":3964,"title":{},"body":{"license.html":{}}}],["consequenti",{"_index":4045,"title":{},"body":{"license.html":{}}}],["consid",{"_index":1636,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["consist",{"_index":3990,"title":{},"body":{"license.html":{}}}],["console.error(\"error",{"_index":2549,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(\"login",{"_index":2004,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(\"oid",{"_index":2530,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(\"url",{"_index":2533,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["console.log(`check",{"_index":1809,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(`configservic",{"_index":854,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(`cr",{"_index":3444,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(`data",{"_index":1670,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["console.log(`form",{"_index":535,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`got",{"_index":735,"title":{},"body":{"classes/AsynchField.html":{}}}],["console.log(`group",{"_index":2508,"title":{},"body":{"classes/RbValidator.html":{}}}],["console.log(`hidden",{"_index":520,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`invalid",{"_index":509,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(`loggin",{"_index":3220,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["console.log(`on",{"_index":1750,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["console.log(`repeat",{"_index":1310,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(`subscrib",{"_index":698,"title":{},"body":{"classes/AsynchField.html":{}}}],["console.log(`transl",{"_index":3118,"title":{},"body":{"injectables/TranslationService.html":{}}}],["console.log(`us",{"_index":1631,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["console.log(data",{"_index":722,"title":{},"body":{"classes/AsynchField.html":{}}}],["console.log(error",{"_index":3426,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(eventdata",{"_index":1312,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["console.log(f.class",{"_index":1796,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["console.log(model",{"_index":3445,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["console.log(nam",{"_index":357,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(oid",{"_index":2453,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["console.log(progress",{"_index":736,"title":{},"body":{"classes/AsynchField.html":{}}}],["console.log(r",{"_index":2002,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["console.log(select",{"_index":1751,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["console.log(socketr",{"_index":723,"title":{},"body":{"classes/AsynchField.html":{}}}],["console.log(this.form.valu",{"_index":537,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["console.log(valu",{"_index":522,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["conspicu",{"_index":3821,"title":{},"body":{"license.html":{}}}],["const",{"_index":384,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["constant",{"_index":2236,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["constantli",{"_index":3685,"title":{},"body":{"license.html":{}}}],["constitut",{"_index":3774,"title":{},"body":{"license.html":{}}}],["constru",{"_index":4019,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"injectables/ANDSService.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/TabOrAccordionContainerComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(@inject(componentfactoryresolv",{"_index":1006,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(@inject(http",{"_index":1719,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["constructor(changeref",{"_index":3056,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["constructor(completerservic",{"_index":1852,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["constructor(componentfactoryresolv",{"_index":975,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(elm",{"_index":1436,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["constructor(http",{"_index":11,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["constructor(opt",{"_index":168,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["constructor(priv",{"_index":420,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["constructor(rectyp",{"_index":2639,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["constructor(translatei18next",{"_index":3075,"title":{},"body":{"injectables/TranslationService.html":{}}}],["constructor(url",{"_index":1519,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{}}}],["constructor(userservic",{"_index":1969,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["consum",{"_index":3882,"title":{},"body":{"license.html":{}}}],["contact",{"_index":4069,"title":{},"body":{"license.html":{}}}],["contain",{"_index":335,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["containeris",{"_index":4161,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["content",{"_index":3773,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["context",{"_index":3746,"title":{},"body":{"license.html":{}}}],["continu",{"_index":3903,"title":{},"body":{"license.html":{}}}],["contractu",{"_index":3938,"title":{},"body":{"license.html":{}}}],["contradict",{"_index":4022,"title":{},"body":{"license.html":{}}}],["contrast",{"_index":3620,"title":{},"body":{"license.html":{}}}],["contrib/redbox2ckan#dev_build",{"_index":3555,"title":{},"body":{"dependencies.html":{}}}],["contributor",{"_index":1354,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["contributor'",{"_index":3985,"title":{},"body":{"license.html":{}}}],["contributor'},{'nam",{"_index":213,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["contributor.compon",{"_index":1177,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["contributorcompon",{"_index":211,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["contributorfield",{"_index":1176,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["control",{"_index":401,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["control.servic",{"_index":2949,"title":{},"body":{"modules/SharedModule.html":{}}}],["control.service.t",{"_index":1845,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:42",{"_index":1854,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:54",{"_index":1856,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:58",{"_index":1858,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:62",{"_index":1866,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:69",{"_index":1864,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:77",{"_index":1862,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:88",{"_index":1859,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.service.ts:93",{"_index":1860,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["control.valu",{"_index":3170,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["control.value.length",{"_index":2501,"title":{},"body":{"classes/RbValidator.html":{}}}],["control1",{"_index":3597,"title":{},"body":{"miscellaneous/functions.html":{}}}],["control2",{"_index":3151,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["conveni",{"_index":147,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["convert",{"_index":1685,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["converttoitem",{"_index":1517,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{}}}],["converttoitem(data",{"_index":1526,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["convey",{"_index":3719,"title":{},"body":{"license.html":{}}}],["copi",{"_index":1115,"title":{},"body":{"modules/DmpModule.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["copyleft",{"_index":3613,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1077,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["core",{"_index":3515,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":4042,"title":{},"body":{"license.html":{}}}],["correctli",{"_index":2069,"title":{},"body":{"components/MapComponent.html":{}}}],["correspond",{"_index":3752,"title":{},"body":{"license.html":{}}}],["cost",{"_index":3862,"title":{},"body":{"license.html":{}}}],["count",{"_index":4193,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["counterclaim",{"_index":3980,"title":{},"body":{"license.html":{}}}],["countri",{"_index":3717,"title":{},"body":{"license.html":{}}}],["cours",{"_index":4081,"title":{},"body":{"license.html":{}}}],["court",{"_index":4021,"title":{},"body":{"license.html":{}}}],["coven",{"_index":3995,"title":{},"body":{"license.html":{}}}],["cover",{"_index":3708,"title":{},"body":{"license.html":{}}}],["coverag",{"_index":2056,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["creat",{"_index":446,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["create(record",{"_index":2550,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["createddownload",{"_index":2355,"title":{},"body":{"components/PDFListComponent.html":{}}}],["createdinfo",{"_index":701,"title":{},"body":{"classes/AsynchField.html":{}}}],["createdinfo.oid",{"_index":703,"title":{},"body":{"classes/AsynchField.html":{}}}],["createformgroup",{"_index":1589,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["createformmodel",{"_index":593,"title":{},"body":{"classes/AsynchField.html":{},"components/WorkspaceFieldComponent.html":{}}}],["createformmodel(valueelem",{"_index":614,"title":{},"body":{"classes/AsynchField.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["createnewelem(basefieldinst",{"_index":1253,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["creation",{"_index":699,"title":{},"body":{"classes/AsynchField.html":{}}}],["cred",{"_index":2011,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["credenti",{"_index":4285,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["criteria",{"_index":579,"title":{},"body":{"classes/AsynchField.html":{}}}],["criterion",{"_index":3734,"title":{},"body":{"license.html":{}}}],["criticalerror",{"_index":1414,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["cross",{"_index":3978,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["csrf",{"_index":825,"title":{},"body":{"classes/BaseService.html":{}}}],["csrfres.json()['_csrf",{"_index":849,"title":{},"body":{"injectables/ConfigService.html":{}}}],["csrftoken",{"_index":833,"title":{},"body":{"injectables/ConfigService.html":{}}}],["css",{"_index":136,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["cssclass",{"_index":1891,"title":{},"body":{"components/GenericGroupComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{}}}],["csv",{"_index":1504,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["ctrl",{"_index":403,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrl.valu",{"_index":404,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ctrlindex",{"_index":122,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["cuddihi",{"_index":1143,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["cure",{"_index":3959,"title":{},"body":{"license.html":{}}}],["currentpag",{"_index":2371,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["curtabid",{"_index":2175,"title":{},"body":{"components/MapComponent.html":{}}}],["custom",{"_index":2485,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["customarili",{"_index":3855,"title":{},"body":{"license.html":{}}}],["customis",{"_index":4136,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["cwd",{"_index":4125,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["cyber",{"_index":1081,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["d",{"_index":3837,"title":{},"body":{"license.html":{}}}],["d:ani",{"_index":3280,"title":{},"body":{"injectables/UtilityService.html":{}}}],["damag",{"_index":4043,"title":{},"body":{"license.html":{}}}],["danger",{"_index":1169,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["dashboard",{"_index":42,"title":{},"body":{"injectables/ANDSService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{}}}],["dashboard'},{'nam",{"_index":215,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["dashboard.compon",{"_index":876,"title":{},"body":{"modules/DashboardModule.html":{}}}],["dashboardcompon",{"_index":214,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["dashboardmodul",{"_index":857,"title":{"modules/DashboardModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules.html":{},"overview.html":{}}}],["dashboardservic",{"_index":883,"title":{"injectables/DashboardService.html":{}},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["dashboardtitl",{"_index":2362,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["data",{"_index":217,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["data.oid",{"_index":2710,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["data.originalobject",{"_index":1672,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["data.titl",{"_index":1624,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["data[fieldnam",{"_index":1711,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["data[titlefld",{"_index":1653,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["databas",{"_index":3421,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["datacr",{"_index":3518,"title":{},"body":{"dependencies.html":{}}}],["dataloc",{"_index":2390,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.compon",{"_index":2955,"title":{},"body":{"modules/SharedModule.html":{}}}],["datalocation.loc",{"_index":2480,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.nam",{"_index":2481,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.not",{"_index":2470,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation.select",{"_index":2465,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocation:ani",{"_index":2464,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datalocationcompon",{"_index":216,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["datarecord",{"_index":2055,"title":{},"body":{"components/MapComponent.html":{}}}],["dataservic",{"_index":1543,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["datatypelookup:ani",{"_index":2410,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["datatypes:object",{"_index":2407,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["date",{"_index":220,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["date().gettim",{"_index":851,"title":{},"body":{"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{}}}],["datecompletedlabel",{"_index":580,"title":{},"body":{"classes/AsynchField.html":{}}}],["datecr",{"_index":2363,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["dateformat",{"_index":581,"title":{},"body":{"classes/AsynchField.html":{}}}],["dateformat:str",{"_index":634,"title":{},"body":{"classes/AsynchField.html":{}}}],["datemodifi",{"_index":2364,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{}}}],["datepicker.readthedocs.io/en/st",{"_index":541,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["datepickeropt",{"_index":1415,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["datestartedlabel",{"_index":582,"title":{},"body":{"classes/AsynchField.html":{}}}],["datetim",{"_index":336,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"modules/ReportModule.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"dependencies.html":{}}}],["datetime/ng2",{"_index":1513,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["datetimecompon",{"_index":219,"title":{"components/DateTimeComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["day",{"_index":3956,"title":{},"body":{"license.html":{}}}],["dc_titl",{"_index":1579,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["dd",{"_index":1497,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["dd/mm/yyyi",{"_index":1481,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["debug",{"_index":3086,"title":{},"body":{"injectables/TranslationService.html":{}}}],["decemb",{"_index":3806,"title":{},"body":{"license.html":{}}}],["decid",{"_index":1764,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["declar",{"_index":346,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/ReportModule.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["declin",{"_index":3934,"title":{},"body":{"license.html":{}}}],["decodeuri(querystr",{"_index":2678,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["decodeuricomponent(window.location.search.substring(1",{"_index":512,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["decor",{"_index":962,"title":{},"body":{"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["deem",{"_index":3796,"title":{},"body":{"license.html":{}}}],["default",{"_index":111,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["defaultdrawopt",{"_index":2119,"title":{},"body":{"components/MapComponent.html":{}}}],["defaultform",{"_index":4210,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["defaultleafletopt",{"_index":2139,"title":{},"body":{"components/MapComponent.html":{}}}],["defaults/format",{"_index":4250,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/from",{"_index":4247,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defaults/subject",{"_index":4249,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["defect",{"_index":4039,"title":{},"body":{"license.html":{}}}],["defens",{"_index":4020,"title":{},"body":{"license.html":{}}}],["defin",{"_index":16,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["definit",{"_index":454,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableGroupComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["defvalu",{"_index":1448,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["deleg",{"_index":548,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["delegateerrorhandl",{"_index":1189,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delet",{"_index":1313,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["delete(oid",{"_index":2620,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["delim",{"_index":1657,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["delimit",{"_index":3251,"title":{},"body":{"injectables/UtilityService.html":{}}}],["delimpair",{"_index":1661,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["delimpair.prefix}${titleval}${_.isempty(titl",{"_index":1663,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["delimpair.suffix",{"_index":1664,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["delim}targetstep=${targetstep",{"_index":2559,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["deni",{"_index":2789,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["denomin",{"_index":3994,"title":{},"body":{"license.html":{}}}],["depend",{"_index":858,"title":{"dependencies.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{}}}],["dependentfieldnam",{"_index":2494,"title":{},"body":{"classes/RbValidator.html":{}}}],["deploy",{"_index":4142,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["depriv",{"_index":4001,"title":{},"body":{"license.html":{}}}],["desc",{"_index":3021,"title":{},"body":{"components/SortComponent.html":{}}}],["descend",{"_index":2345,"title":{},"body":{"components/PDFListComponent.html":{}}}],["describ",{"_index":4227,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["descript",{"_index":459,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["design",{"_index":488,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["detail",{"_index":1113,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["details.th",{"_index":4078,"title":{},"body":{"license.html":{}}}],["details:detail",{"_index":3230,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["detect",{"_index":2544,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["detector",{"_index":3097,"title":{},"body":{"injectables/TranslationService.html":{}}}],["detectretina",{"_index":2113,"title":{},"body":{"components/MapComponent.html":{}}}],["determin",{"_index":3890,"title":{},"body":{"license.html":{}}}],["dev_build",{"_index":4115,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["develop",{"_index":3599,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["devic",{"_index":3661,"title":{},"body":{"license.html":{}}}],["di'e",{"_index":980,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dict",{"_index":3258,"title":{},"body":{"injectables/UtilityService.html":{}}}],["differ",{"_index":3869,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["direct",{"_index":195,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["directli",{"_index":2237,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["directori",{"_index":4233,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["disabl",{"_index":967,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabled:boolean",{"_index":1005,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["disabledel",{"_index":969,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledelement.prop(\"disabled\",tru",{"_index":1044,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disabledexpress",{"_index":970,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["disableeditafterselect",{"_index":1550,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["disableinput",{"_index":1738,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["disclaim",{"_index":3813,"title":{},"body":{"license.html":{}}}],["discriminatori",{"_index":4012,"title":{},"body":{"license.html":{}}}],["display",{"_index":154,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["distinguish",{"_index":4032,"title":{},"body":{"license.html":{}}}],["distribut",{"_index":1100,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["distro",{"_index":4130,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["dmp",{"_index":223,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["dmpfieldcompon",{"_index":222,"title":{"components/DmpFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["dmpformcompon",{"_index":225,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["dmpmodul",{"_index":1071,"title":{"modules/DmpModule.html":{}},"body":{"modules/DmpModule.html":{},"modules.html":{},"overview.html":{}}}],["dmpt",{"_index":1896,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["doaction",{"_index":474,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["docker",{"_index":3600,"title":{},"body":{"index.html":{},"additional-documentation/configuration-guide.html":{}}}],["document",{"_index":1973,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/SortComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["document:ani",{"_index":1987,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["documentation](http://leafletjs.com/refer",{"_index":2241,"title":{},"body":{"components/MapComponent.html":{}}}],["documentation](https://leaflet.github.io/leaflet.draw/docs/leaflet",{"_index":2243,"title":{},"body":{"components/MapComponent.html":{}}}],["doesn't",{"_index":2509,"title":{},"body":{"classes/RbValidator.html":{}}}],["dom",{"_index":67,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["domain",{"_index":3678,"title":{},"body":{"license.html":{}}}],["dont",{"_index":1027,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["dotenv",{"_index":3520,"title":{},"body":{"dependencies.html":{}}}],["doubt",{"_index":3891,"title":{},"body":{"license.html":{}}}],["down",{"_index":1213,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["download",{"_index":1426,"title":{},"body":{"components/ExportFormComponent.html":{},"components/PDFListComponent.html":{}}}],["downstream",{"_index":3967,"title":{},"body":{"license.html":{}}}],["draft",{"_index":4204,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["draftplan",{"_index":2824,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["draw",{"_index":2085,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["draw'",{"_index":2086,"title":{},"body":{"components/MapComponent.html":{}}}],["drawlay",{"_index":2213,"title":{},"body":{"components/MapComponent.html":{}}}],["drawn",{"_index":2079,"title":{},"body":{"components/MapComponent.html":{}}}],["drawnitem",{"_index":2103,"title":{},"body":{"components/MapComponent.html":{}}}],["drawopt",{"_index":2084,"title":{},"body":{"components/MapComponent.html":{}}}],["dropdown",{"_index":2354,"title":{},"body":{"components/PDFListComponent.html":{}}}],["dropdownfield",{"_index":390,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["dropdownfield'},{'nam",{"_index":228,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["dropdownfieldcompon",{"_index":227,"title":{"components/DropdownFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["duplic",{"_index":4267,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["durabl",{"_index":3854,"title":{},"body":{"license.html":{}}}],["dwell",{"_index":3889,"title":{},"body":{"license.html":{}}}],["dynam",{"_index":3757,"title":{},"body":{"license.html":{}}}],["e",{"_index":498,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["e.g",{"_index":4112,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["e.lay",{"_index":2193,"title":{},"body":{"components/MapComponent.html":{}}}],["e.layertyp",{"_index":2192,"title":{},"body":{"components/MapComponent.html":{}}}],["e.preventdefault",{"_index":1503,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["e.target.href.split('#')[1",{"_index":499,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["each",{"_index":2780,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["earli",{"_index":4217,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["earlier",{"_index":3707,"title":{},"body":{"license.html":{}}}],["easier",{"_index":4268,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["ecosystem.json",{"_index":4134,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ecosytem.json",{"_index":4118,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["edit",{"_index":1760,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editable).then((form:ani",{"_index":2537,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editable:boolean",{"_index":2528,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["editcssclass",{"_index":4212,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editingnot",{"_index":2381,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnot",{"_index":2382,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotes(dataloc",{"_index":2388,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotesbuttontext",{"_index":2415,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotescssclass",{"_index":2419,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editnotestitl",{"_index":2416,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["editonli",{"_index":1894,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["editrol",{"_index":4202,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["effect",{"_index":3691,"title":{},"body":{"license.html":{}}}],["effort",{"_index":3975,"title":{},"body":{"license.html":{}}}],["ej",{"_index":3522,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["electron",{"_index":4070,"title":{},"body":{"license.html":{}}}],["elem",{"_index":1234,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.componentreactors.push(thi",{"_index":1395,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.margintop",{"_index":1392,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.setupeventhandl",{"_index":1394,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem.vocabfield.initialvalu",{"_index":1393,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elem:ani",{"_index":1390,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["element",{"_index":194,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["element(by.css('app",{"_index":568,"title":{},"body":{"classes/AngularPage.html":{}}}],["elementref",{"_index":1437,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["elems.push(fieldclone.createformmodel",{"_index":1242,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["elm",{"_index":1440,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["email",{"_index":2027,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email'",{"_index":4257,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["email:email",{"_index":2571,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["emailnotification.j",{"_index":4157,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["emailnotificationservic",{"_index":1135,"title":{"injectables/EmailNotificationService.html":{}},"body":{"injectables/EmailNotificationService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["emailregexp",{"_index":3163,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["emailregexp.test(control.valu",{"_index":3171,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["embeddablecompon",{"_index":1149,"title":{"classes/EmbeddableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:222",{"_index":1905,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:223",{"_index":1908,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:224",{"_index":1907,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:225",{"_index":1906,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:226",{"_index":1909,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:228",{"_index":1911,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embeddablecomponent:232",{"_index":1910,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["embodi",{"_index":3851,"title":{},"body":{"license.html":{}}}],["emerg",{"_index":445,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["emitconfig",{"_index":834,"title":{},"body":{"injectables/ConfigService.html":{}}}],["emitev",{"_index":179,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["emitevent:boolean",{"_index":2440,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["emitinit",{"_index":757,"title":{},"body":{"classes/BaseService.html":{}}}],["emitmodeltoviewchange:tru",{"_index":181,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{}}}],["employ",{"_index":4084,"title":{},"body":{"license.html":{}}}],["empti",{"_index":2070,"title":{},"body":{"components/MapComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UtilityService.html":{}}}],["emptyfield",{"_index":2498,"title":{},"body":{"classes/RbValidator.html":{}}}],["en",{"_index":3103,"title":{},"body":{"injectables/TranslationService.html":{}}}],["enabl",{"_index":1029,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["enabledvalid",{"_index":2302,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["encapsul",{"_index":3125,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["end",{"_index":2541,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["endpoint",{"_index":4239,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["enforc",{"_index":3816,"title":{},"body":{"license.html":{}}}],["ensur",{"_index":2152,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["enter",{"_index":2246,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["entir",{"_index":3830,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entiti",{"_index":3969,"title":{},"body":{"license.html":{}}}],["entri",{"_index":1319,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["entrycompon",{"_index":1130,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/SharedModule.html":{},"modules/WorkspaceListModule.html":{}}}],["env",{"_index":4119,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["environ",{"_index":4101,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["equival",{"_index":3777,"title":{},"body":{"license.html":{}}}],["erron",{"_index":3660,"title":{},"body":{"license.html":{}}}],["error",{"_index":142,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["error('cannot",{"_index":3424,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["es",{"_index":3535,"title":{},"body":{"dependencies.html":{}}}],["es6",{"_index":36,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"dependencies.html":{}}}],["escap",{"_index":1537,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["essenti",{"_index":3747,"title":{},"body":{"license.html":{}}}],["etc",{"_index":3038,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["even",{"_index":1105,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["event",{"_index":118,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/LocalAuthComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"license.html":{}}}],["event.preventdefault",{"_index":1998,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["event.shown",{"_index":2181,"title":{},"body":{"components/MapComponent.html":{}}}],["event.tabid",{"_index":2182,"title":{},"body":{"components/MapComponent.html":{}}}],["event.target.check",{"_index":409,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event:ani",{"_index":406,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["event[1",{"_index":1343,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["eventconfig=nul",{"_index":1323,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventdata",{"_index":620,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["eventemitt",{"_index":1172,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["eventnam",{"_index":623,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["everyon",{"_index":3609,"title":{},"body":{"license.html":{}}}],["exact",{"_index":2592,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["exactnam",{"_index":2594,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnam",{"_index":2584,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames}${exactsearchvalues}${facetsearchnames}${facetsearchvalu",{"_index":2602,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchnames},`}${refiner.nam",{"_index":2595,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalu",{"_index":2585,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exactsearchvalues}&exact_${refiner.name}=${refiner.valu",{"_index":2596,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["exampl",{"_index":576,"title":{},"body":{"classes/AsynchField.html":{},"components/CancelButtonComponent.html":{},"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["except",{"_index":3714,"title":{},"body":{"license.html":{}}}],["exclud",{"_index":3881,"title":{},"body":{"license.html":{}}}],["exclus",{"_index":3781,"title":{},"body":{"license.html":{}}}],["excus",{"_index":4023,"title":{},"body":{"license.html":{}}}],["execut",{"_index":3715,"title":{},"body":{"license.html":{}}}],["executeact",{"_index":89,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(action:str",{"_index":2612,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["executeaction(ev",{"_index":116,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["executeaction(event:ani",{"_index":183,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["exercis",{"_index":3812,"title":{},"body":{"license.html":{}}}],["exist",{"_index":2510,"title":{},"body":{"classes/RbValidator.html":{}}}],["existingrefin",{"_index":2669,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["existingrefiner.valu",{"_index":2674,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["expand/collaps",{"_index":417,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expandcollapseal",{"_index":438,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["expect",{"_index":1656,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["explain",{"_index":3654,"title":{},"body":{"license.html":{}}}],["explicitli",{"_index":3769,"title":{},"body":{"license.html":{}}}],["export",{"_index":47,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["exportformcompon",{"_index":229,"title":{"components/ExportFormComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["exportmodul",{"_index":1505,"title":{"modules/ExportModule.html":{}},"body":{"modules/ExportModule.html":{},"modules.html":{},"overview.html":{}}}],["express",{"_index":3037,"title":{},"body":{"pipes/StringTemplatePipe.html":{},"license.html":{}}}],["expressli",{"_index":3945,"title":{},"body":{"license.html":{}}}],["extend",{"_index":49,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["extens",{"_index":3840,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["extent",{"_index":3726,"title":{},"body":{"license.html":{}}}],["extern",{"_index":1646,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["externallookupdataservic",{"_index":1514,"title":{"classes/ExternalLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["extra",{"_index":3524,"title":{},"body":{"dependencies.html":{}}}],["extractdata",{"_index":758,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["extractdata(r",{"_index":776,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["f",{"_index":1245,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/UtilityService.html":{},"license.html":{}}}],["f.compclass",{"_index":1811,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.completerservic",{"_index":1833,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definit",{"_index":1816,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.definition.field",{"_index":1817,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.field",{"_index":1822,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.haslookup",{"_index":1827,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.lookupservic",{"_index":1834,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setlookupservices(this.getinjectedservice('completerservic",{"_index":1832,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["f.setupeventhandl",{"_index":1246,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f.triggervalid",{"_index":1309,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["f:ani",{"_index":1308,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/UtilityService.html":{}}}],["f]{32",{"_index":2329,"title":{},"body":{"components/PDFListComponent.html":{}}}],["fa",{"_index":1163,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["facet",{"_index":910,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["facet.nam",{"_index":2701,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facet.valu",{"_index":2702,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetnam",{"_index":2598,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchnam",{"_index":2586,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchnames},`}${refiner.nam",{"_index":2599,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalu",{"_index":2587,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetsearchvalues}&facet_${refiner.name}=${refiner.activevalu",{"_index":2601,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["facetvalue.count",{"_index":2771,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facetvalue.valu",{"_index":2770,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["facil",{"_index":3782,"title":{},"body":{"license.html":{}}}],["factori",{"_index":1846,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fail",{"_index":2802,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"license.html":{}}}],["failedobject",{"_index":2305,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["failur",{"_index":4050,"title":{},"body":{"license.html":{}}}],["fair",{"_index":3776,"title":{},"body":{"license.html":{}}}],["fallbacklng",{"_index":3116,"title":{},"body":{"injectables/TranslationService.html":{}}}],["fals",{"_index":113,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["famili",{"_index":3885,"title":{},"body":{"license.html":{}}}],["fashion",{"_index":3706,"title":{},"body":{"license.html":{}}}],["favor",{"_index":3893,"title":{},"body":{"license.html":{}}}],["fb",{"_index":1971,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["fc",{"_index":351,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[ctrlindex",{"_index":363,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.field.nam",{"_index":367,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fc.controls[this.index",{"_index":365,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["fcmetaservic",{"_index":1853,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["featur",{"_index":3728,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["featuregroup",{"_index":2087,"title":{},"body":{"components/MapComponent.html":{}}}],["fee",{"_index":3643,"title":{},"body":{"license.html":{}}}],["fg",{"_index":1221,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fg[this.nam",{"_index":1251,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fgdef",{"_index":3437,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["fgdef.push(new",{"_index":3441,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field",{"_index":83,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["field'},{'nam",{"_index":224,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.accessdeniedobjects.length",{"_index":2803,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.addbuttontext",{"_index":1345,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["field.cansort",{"_index":1356,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.columntitl",{"_index":2854,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.compon",{"_index":2969,"title":{},"body":{"modules/SharedModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.component.t",{"_index":966,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:101",{"_index":989,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:111",{"_index":3389,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:154",{"_index":990,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:25",{"_index":3385,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:30",{"_index":3387,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:34",{"_index":3388,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:38",{"_index":3386,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:42",{"_index":981,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:47",{"_index":983,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:49",{"_index":3390,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:51",{"_index":988,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:55",{"_index":982,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:59",{"_index":1000,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:64",{"_index":987,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:66",{"_index":985,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:68",{"_index":986,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:70",{"_index":984,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:72",{"_index":997,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:74",{"_index":1001,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:76",{"_index":992,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.component.ts:80",{"_index":979,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["field.component.ts:91",{"_index":1003,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["field.datatypelookup[datalocation.typ",{"_index":2479,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.editnotesbuttontext",{"_index":2482,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.failedobjects.length",{"_index":2801,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["field.field",{"_index":1881,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.fields[0].emailcolhdr",{"_index":1372,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].label",{"_index":1355,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].namecolhdr",{"_index":1371,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].orcidcolhdr",{"_index":1374,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.fields[0].rolecolhdr",{"_index":1373,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.formatvaluefordisplay",{"_index":542,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.formmodel",{"_index":2502,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.getgroup(group",{"_index":1884,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.hasgroup",{"_index":1882,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["field.help",{"_index":1737,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"components/RepeatableGroupComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.label",{"_index":320,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.label}}submit",{"_index":81,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["field.locationhead",{"_index":2477,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.nam",{"_index":2511,"title":{},"body":{"classes/RbValidator.html":{}}}],["field.nextlabel",{"_index":493,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.noteshead",{"_index":2478,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.onaccordioncollapseexpand.subscribe((ev",{"_index":2180,"title":{},"body":{"components/MapComponent.html":{}}}],["field.open",{"_index":3462,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.postinit(field.valu",{"_index":1726,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.prevlabel",{"_index":492,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["field.removebuttontext",{"_index":1366,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["field.savefirst",{"_index":3463,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.sourcedata",{"_index":1725,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.sourcetyp",{"_index":1722,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.typehead",{"_index":2476,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["field.validationmessages.requir",{"_index":391,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.valu",{"_index":80,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["field.value.titl",{"_index":2852,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["field.vocabid",{"_index":1721,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["field.workspaceapp.descript",{"_index":3461,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.workspaceapp.nam",{"_index":3458,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field.workspaceapp.subtitl",{"_index":3460,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["field:thi",{"_index":1225,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldanchor",{"_index":971,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldarr",{"_index":1781,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarr.push(f",{"_index":1821,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldarray",{"_index":1824,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fieldbas",{"_index":101,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["fieldclass",{"_index":1790,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldclon",{"_index":1237,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldclone.valu",{"_index":1238,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldcompref",{"_index":1068,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.inst",{"_index":1070,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.field",{"_index":1053,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.fieldmap",{"_index":1055,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.form",{"_index":1054,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.index",{"_index":1061,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.injector",{"_index":1052,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref.instance.isembed",{"_index":1058,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.nam",{"_index":1060,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["fieldcompref.instance.parentid",{"_index":1056,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcompref:componentref",{"_index":1049,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldcontrolmetaservic",{"_index":1773,"title":{"injectables/FieldControlMetaService.html":{}},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldcontrolmetaservice,andsservic",{"_index":2985,"title":{},"body":{"modules/SharedModule.html":{}}}],["fieldcontrolservic",{"_index":1844,"title":{"injectables/FieldControlService.html":{}},"body":{"injectables/FieldControlService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["fieldctr",{"_index":1231,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldel",{"_index":972,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["fieldelem.margintop",{"_index":1361,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.email",{"_index":1376,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.orcid",{"_index":1378,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.rol",{"_index":1377,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldelem.value.text_full_nam",{"_index":1375,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldmap",{"_index":98,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["fieldmap[this.nam",{"_index":1224,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldmap[this.name].control",{"_index":1247,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fieldnam",{"_index":1547,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["fieldname:string=nul",{"_index":3329,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fieldpath",{"_index":3288,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fields.foreach((field:ani",{"_index":1880,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fieldsarr",{"_index":1785,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["fieldsepar",{"_index":3267,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fieldseparator:string=nul",{"_index":3330,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fieldsmeta.push(rendercompleteel",{"_index":2526,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["fifth",{"_index":1122,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["file':\"fil",{"_index":2414,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["fill",{"_index":4219,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filter",{"_index":2769,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["filteractiverefinerswithnodata",{"_index":2692,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["filteredplan",{"_index":2812,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["final",{"_index":3683,"title":{},"body":{"license.html":{}}}],["finalkeyword",{"_index":4197,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["find",{"_index":3873,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["findlookupdata",{"_index":3339,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["findlookupdata(field",{"_index":1732,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["first",{"_index":1314,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["fit",{"_index":1108,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["fix",{"_index":3853,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["flag",{"_index":157,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["flagstrail",{"_index":3317,"title":{},"body":{"injectables/UtilityService.html":{}}}],["flatmap((field:ani",{"_index":1838,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flatmap((r",{"_index":1724,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["flatmap((whatever:ani",{"_index":1839,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfield",{"_index":1775,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["flattenfields(field",{"_index":1780,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["fld",{"_index":1590,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["flddata",{"_index":3281,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fldname",{"_index":137,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["flds[targetfld",{"_index":1595,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["flexibl",{"_index":4166,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["flip",{"_index":1062,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["floor",{"_index":1123,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["flow",{"_index":3761,"title":{},"body":{"license.html":{}}}],["fm",{"_index":1220,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["fmap.field",{"_index":1878,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap.field.setupeventhandl",{"_index":1879,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fmap:ani",{"_index":1877,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["fn",{"_index":3035,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["focustabid",{"_index":502,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["follow",{"_index":3697,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["for(var",{"_index":2288,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"injectables/ReportService.html":{}}}],["forbid",{"_index":3811,"title":{},"body":{"license.html":{}}}],["forc",{"_index":2492,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["forceclon",{"_index":1182,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["form",{"_index":99,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form'},{'nam",{"_index":226,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["form.compon",{"_index":1129,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["form.component.t",{"_index":1405,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:42",{"_index":1460,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:43",{"_index":1465,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:44",{"_index":1464,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:45",{"_index":1463,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:46",{"_index":1461,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:47",{"_index":1467,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:48",{"_index":1462,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:49",{"_index":1466,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:50",{"_index":1439,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:76",{"_index":1441,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:83",{"_index":1442,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.component.ts:87",{"_index":1444,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.field",{"_index":2538,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmata",{"_index":2521,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.fieldsmeta",{"_index":2547,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["form.html",{"_index":1413,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["form.j",{"_index":4159,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/act",{"_index":2961,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/dmp",{"_index":2968,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/field",{"_index":2948,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/record",{"_index":2951,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/records.servic",{"_index":2947,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/tre",{"_index":2977,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/view",{"_index":4208,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["form/workflow",{"_index":2959,"title":{},"body":{"modules/SharedModule.html":{}}}],["form/workspac",{"_index":2972,"title":{},"body":{"modules/SharedModule.html":{}}}],["formarray",{"_index":344,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formarray(elem",{"_index":1243,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["formarray(fgdef",{"_index":3442,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["formarray(this.getinitarrayentri",{"_index":1229,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["format",{"_index":547,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["formatd",{"_index":885,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdatefordisplay(valu",{"_index":748,"title":{},"body":{"classes/AsynchField.html":{}}}],["formatdates(respons",{"_index":893,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatdates(response:object",{"_index":945,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["formatvalu",{"_index":549,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formatvaluefordisplay",{"_index":2268,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["formbuild",{"_index":1972,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/SortComponent.html":{}}}],["formcontrol",{"_index":126,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["formcontrol(opt.valu",{"_index":411,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["formcontrol(this.layergeojson",{"_index":2222,"title":{},"body":{"components/MapComponent.html":{}}}],["formcontrol(this.valu",{"_index":1598,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["formcontrol(this.value[targetfld",{"_index":1596,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["formcontrol.push(new",{"_index":410,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol.removeat(idx",{"_index":414,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formcontrol:ani",{"_index":407,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["formgroup",{"_index":107,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["formgroup(fld",{"_index":1597,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["formgroup(group",{"_index":1875,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["formmodel",{"_index":1267,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["formsmodul",{"_index":874,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["found",{"_index":4065,"title":{},"body":{"license.html":{}}}],["foundat",{"_index":1083,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["foundmap",{"_index":3293,"title":{},"body":{"injectables/UtilityService.html":{}}}],["foundmapping.valu",{"_index":3297,"title":{},"body":{"injectables/UtilityService.html":{}}}],["fq",{"_index":710,"title":{},"body":{"classes/AsynchField.html":{}}}],["framework",{"_index":4146,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["framework'",{"_index":450,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["franklin",{"_index":1120,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["free",{"_index":1092,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["freedom",{"_index":3618,"title":{},"body":{"license.html":{}}}],["frompromis",{"_index":2778,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["fs",{"_index":3523,"title":{},"body":{"dependencies.html":{}}}],["fulfil",{"_index":3799,"title":{},"body":{"license.html":{}}}],["full",{"_index":4064,"title":{},"body":{"license.html":{}}}],["fullnam",{"_index":4075,"title":{},"body":{"license.html":{}}}],["function",{"_index":451,"title":{"miscellaneous/functions.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["function(",{"_index":2191,"title":{},"body":{"components/MapComponent.html":{}}}],["function('map",{"_index":3049,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(_",{"_index":3042,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["function(o",{"_index":2203,"title":{},"body":{"components/MapComponent.html":{}}}],["function(valu",{"_index":1278,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["function(w",{"_index":3435,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["fundament",{"_index":3665,"title":{},"body":{"license.html":{}}}],["further",{"_index":3868,"title":{},"body":{"license.html":{}}}],["futur",{"_index":3682,"title":{},"body":{"license.html":{}}}],["g",{"_index":3312,"title":{},"body":{"injectables/UtilityService.html":{},"additional-documentation/installation-guide.html":{}}}],["gener",{"_index":231,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["generatetempl",{"_index":3050,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplate(templ",{"_index":3034,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["generatetemplatestr",{"_index":3032,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["genericgroupcompon",{"_index":230,"title":{"components/GenericGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["genkey",{"_index":3191,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genkey(userid",{"_index":3203,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["genuserkey",{"_index":3192,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["geocoord",{"_index":2054,"title":{},"body":{"components/MapComponent.html":{}}}],["geojson",{"_index":2095,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlay",{"_index":2215,"title":{},"body":{"components/MapComponent.html":{}}}],["geojsonlayer.eachlayer(lay",{"_index":2218,"title":{},"body":{"components/MapComponent.html":{}}}],["get",{"_index":3598,"title":{"index.html":{},"license.html":{}},"body":{}}],["getabsurl",{"_index":2383,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(loc",{"_index":2391,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getabsurl(location:str",{"_index":2467,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getactiveplan",{"_index":886,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumb",{"_index":895,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getactiveplans(pagenumber:numb",{"_index":924,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalldraftplanscanedit",{"_index":887,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit",{"_index":888,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtyp",{"_index":898,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getallrecordscanedit(recordtype:str",{"_index":917,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getalltyp",{"_index":2606,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getasyncprogress(fq:str",{"_index":2615,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getattachments(oid",{"_index":2564,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getbaseurl",{"_index":766,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrand",{"_index":3492,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getbrandingandportalurl",{"_index":765,"title":{},"body":{"classes/BaseService.html":{}}}],["getbrandrol",{"_index":2917,"title":{},"body":{"injectables/RolesService.html":{}}}],["getclearunselect",{"_index":1772,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getclonecustomizer(cloneopts:ani",{"_index":1277,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getcollectionrooturl",{"_index":3340,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["getcollectionrooturl(collectionid",{"_index":1728,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getconfig",{"_index":759,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["getconfig(handl",{"_index":838,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getcontrolfromopt",{"_index":2929,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["getcontrolfromoption(opt",{"_index":400,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getdashboardurl(rectype:string='rdmp",{"_index":2562,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getdataloc",{"_index":2384,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["getdownloadurl",{"_index":2294,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdownloadurl(attach",{"_index":2295,"title":{},"body":{"components/PDFListComponent.html":{}}}],["getdraftplan",{"_index":889,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumb",{"_index":902,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getdraftplans(pagenumber:numb",{"_index":928,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getemptyformgroup",{"_index":1848,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["geterror",{"_index":1967,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["getexternalserviceurl",{"_index":3341,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["getexternalserviceurl(provid",{"_index":1735,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getfieldsmeta",{"_index":1776,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldsmeta(fieldsarr",{"_index":1783,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["getfieldvaluepair(fldnam",{"_index":1674,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getfirstofarray",{"_index":3239,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getfirstofarray(data",{"_index":3248,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getfirstofarray(data:ani",{"_index":3326,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getform(oid",{"_index":2517,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformcontrol",{"_index":91,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getformcontrol(nam",{"_index":121,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getformfields(recordtype:str",{"_index":2527,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getformfieldsmeta(recordtype:str",{"_index":2534,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getfrominjector",{"_index":92,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getfrominjector(token",{"_index":130,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getfrominjector(token:ani",{"_index":379,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getgetbaseurl",{"_index":792,"title":{},"body":{"classes/BaseService.html":{}}}],["getgetbrandingandportalurl",{"_index":790,"title":{},"body":{"classes/BaseService.html":{}}}],["getgroup",{"_index":594,"title":{},"body":{"classes/AsynchField.html":{}}}],["getgroup(group",{"_index":617,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getgroupclass",{"_index":93,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getgroupclass(fldnam",{"_index":134,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getgroupclass(fldname:string=nul",{"_index":369,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["gethttpqueri",{"_index":2720,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["gethttpquery(searchurl",{"_index":2660,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getinfo",{"_index":3193,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getinitarrayentri",{"_index":1217,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["getinitsubject",{"_index":760,"title":{},"body":{"classes/BaseService.html":{}}}],["getinjectedservic",{"_index":1777,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getinjectedservice(servicenam",{"_index":1786,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["getisvalid",{"_index":1002,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["getlabel",{"_index":1131,"title":{},"body":{"components/DropdownFieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getlabel(field.valu",{"_index":392,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getlabel(v",{"_index":382,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getlookupdata",{"_index":1778,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getlookupdata(field",{"_index":1720,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getmeta",{"_index":4274,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["getmintrooturl",{"_index":3342,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["getmintrooturl(sourc",{"_index":1733,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getopt",{"_index":761,"title":{},"body":{"classes/BaseService.html":{}}}],["getoptions(headersobj",{"_index":782,"title":{},"body":{"classes/BaseService.html":{}}}],["getoptionscli",{"_index":762,"title":{},"body":{"classes/BaseService.html":{}}}],["getoptionsclient(headersobj",{"_index":785,"title":{},"body":{"classes/BaseService.html":{}}}],["getparagraphtext",{"_index":561,"title":{},"body":{"classes/AngularPage.html":{}}}],["getpropertyfromobject",{"_index":3240,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobject(data",{"_index":3255,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat",{"_index":3241,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat(data",{"_index":3256,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectconcat(data:ani",{"_index":3300,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmap",{"_index":3242,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getpropertyfromobjectmapping(data",{"_index":3260,"title":{},"body":{"injectables/UtilityService.html":{}}}],["getrecord",{"_index":890,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecordmeta(oid:string=nul",{"_index":2610,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrecordmetaob",{"_index":2782,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.length",{"_index":2793,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecordmetaobs.push(frompromise(this.recordsservice.getrecordmeta(item.id)).flatmap(meta",{"_index":2784,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["getrecords(recordtyp",{"_index":904,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecords(recordtype:string,state:string,pagenumber:number,packagetype:string=undefin",{"_index":931,"title":{},"body":{"injectables/DashboardService.html":{}}}],["getrecordtypenam",{"_index":1427,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["getrefinerconfig",{"_index":2667,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getrefinerconfig(nam",{"_index":2649,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getreport",{"_index":2900,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(nam",{"_index":2902,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreport(name:str",{"_index":2905,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresult",{"_index":2901,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(nam",{"_index":2903,"title":{},"body":{"injectables/ReportService.html":{}}}],["getreportresults(name:str",{"_index":2907,"title":{},"body":{"injectables/ReportService.html":{}}}],["getrequiredlabelstr",{"_index":94,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["getrequiredlabelstr():str",{"_index":377,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getresourcedetail",{"_index":9,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri",{"_index":23,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getresourcedetails(uri:str",{"_index":56,"title":{},"body":{"injectables/ANDSService.html":{}}}],["getstatuslabel",{"_index":592,"title":{},"body":{"classes/AsynchField.html":{}}}],["getstatuslabel(statu",{"_index":612,"title":{},"body":{"classes/AsynchField.html":{}}}],["gettargetstepparam(targetstep",{"_index":2557,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["gettitl",{"_index":1518,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["gettitle(data",{"_index":1529,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["gettransferresponsibility(recordtyp",{"_index":2577,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["gettransl",{"_index":1430,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["gettranslated(key",{"_index":1447,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["gettype(nam",{"_index":2604,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["geturlparamet",{"_index":2357,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["geturlparameter(param",{"_index":2358,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["geturlparameter(param:str",{"_index":510,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["getus",{"_index":3194,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["getuserlookupurl",{"_index":3343,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["getuserlookupurl(searchsourc",{"_index":1730,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getvalue(data",{"_index":1665,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["getworkflowsteps(nam",{"_index":2608,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["getworkspacetyp",{"_index":3493,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["getworkspacetype(nam",{"_index":3494,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["git",{"_index":4106,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["github:itayadler/passport",{"_index":3548,"title":{},"body":{"dependencies.html":{}}}],["github:redbox",{"_index":3554,"title":{},"body":{"dependencies.html":{}}}],["github:shilob/mo",{"_index":3538,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":3650,"title":{},"body":{"license.html":{}}}],["given",{"_index":3772,"title":{},"body":{"license.html":{}}}],["global",{"_index":831,"title":{},"body":{"injectables/ConfigService.html":{},"additional-documentation/installation-guide.html":{}}}],["glyphicon",{"_index":1039,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["gnu",{"_index":1085,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["googl",{"_index":2144,"title":{},"body":{"components/MapComponent.html":{}}}],["googlehybrid",{"_index":2114,"title":{},"body":{"components/MapComponent.html":{}}}],["googlemap",{"_index":2105,"title":{},"body":{"components/MapComponent.html":{}}}],["gototargetstep",{"_index":3354,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["gototargetstep(ev",{"_index":3361,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["gototargetstep(event:ani",{"_index":3381,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["govern",{"_index":3923,"title":{},"body":{"license.html":{}}}],["gpl",{"_index":3646,"title":{},"body":{"license.html":{}}}],["grant",{"_index":3766,"title":{},"body":{"license.html":{}}}],["grant_number_nam",{"_index":4196,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["grati",{"_index":3642,"title":{},"body":{"license.html":{}}}],["greatest",{"_index":4059,"title":{},"body":{"license.html":{}}}],["gridf",{"_index":3573,"title":{},"body":{"dependencies.html":{}}}],["gridfs.git",{"_index":3575,"title":{},"body":{"dependencies.html":{}}}],["group",{"_index":106,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["group'},{'nam",{"_index":272,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["group.compon",{"_index":2971,"title":{},"body":{"modules/SharedModule.html":{}}}],["group.component.t",{"_index":1887,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["group.component.ts:118",{"_index":1912,"title":{},"body":{"components/GenericGroupComponent.html":{}}}],["group.component.ts:232",{"_index":2877,"title":{},"body":{"components/RepeatableGroupComponent.html":{}}}],["group.controls[control1",{"_index":3153,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group.controls[control1].valu",{"_index":3174,"title":{},"body":{"interfaces/UserForm.html":{}}}],["group.controls[control2",{"_index":3155,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["group[this.groupnam",{"_index":1249,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.groupname].addcontrol(this.nam",{"_index":1250,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["group[this.nam",{"_index":1252,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["groupclass",{"_index":1899,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["groupnam",{"_index":1898,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["grp",{"_index":1219,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["grunt",{"_index":3526,"title":{},"body":{"dependencies.html":{}}}],["guarante",{"_index":3621,"title":{},"body":{"license.html":{}}}],["gui",{"_index":4082,"title":{},"body":{"license.html":{}}}],["guid",{"_index":4098,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["h1",{"_index":4228,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["h1')).gettext",{"_index":569,"title":{},"body":{"classes/AngularPage.html":{}}}],["hack",{"_index":1621,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["handl",{"_index":830,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["handlechang",{"_index":1914,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["handlechange(valu",{"_index":519,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["handler",{"_index":789,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"components/DmpFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["handler:ani",{"_index":1945,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["happen",{"_index":682,"title":{},"body":{"classes/AsynchField.html":{}}}],["harvest",{"_index":4276,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["hasact",{"_index":2696,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasactiverefin",{"_index":2695,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["hasclearbutton",{"_index":1416,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["haserror",{"_index":1334,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["hasfilteredresult",{"_index":2807,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["hasinit",{"_index":2306,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["hasload",{"_index":1431,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["hasrequirederror",{"_index":95,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["hasrequirederror():boolean",{"_index":372,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hasvalu",{"_index":2752,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["hasvalue(data",{"_index":3264,"title":{},"body":{"injectables/UtilityService.html":{}}}],["have",{"_index":3780,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["head",{"_index":4192,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["header",{"_index":795,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"components/LocalAuthComponent.html":{},"injectables/UserSimpleService.html":{}}}],["header.label",{"_index":2796,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["headers(headersobj",{"_index":819,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj",{"_index":784,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj['cont",{"_index":822,"title":{},"body":{"classes/BaseService.html":{}}}],["headersobj['x",{"_index":820,"title":{},"body":{"classes/BaseService.html":{}}}],["hello",{"_index":4261,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["help",{"_index":149,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["helpshow",{"_index":84,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["here",{"_index":4306,"title":{},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["hereaft",{"_index":3988,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":233,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["hiddenvaluecompon",{"_index":232,"title":{"components/HiddenValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["hideconfirmdlg",{"_index":472,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["hideeditnot",{"_index":2385,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["highli",{"_index":4148,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["holder",{"_index":3926,"title":{},"body":{"license.html":{}}}],["hook",{"_index":3563,"title":{},"body":{"dependencies.html":{}}}],["hope",{"_index":1101,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["host",{"_index":3874,"title":{},"body":{"license.html":{}}}],["household",{"_index":3886,"title":{},"body":{"license.html":{}}}],["html",{"_index":193,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["htmlraw",{"_index":334,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["htmlraw'},{'nam",{"_index":235,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["htmlrawcompon",{"_index":234,"title":{"components/HtmlRawComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["http",{"_index":12,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://fsf.org",{"_index":3608,"title":{},"body":{"license.html":{}}}],["http://i18next.com/docs/opt",{"_index":3090,"title":{},"body":{"injectables/TranslationService.html":{}}}],["http://localhost:1500/default/rdmp/images/leaflet/mark",{"_index":2130,"title":{},"body":{"components/MapComponent.html":{}}}],["http://localhost:9000/redbox",{"_index":4271,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://localhost:9001/mint",{"_index":4273,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["http://www.gnu.org/licens",{"_index":4068,"title":{},"body":{"license.html":{}}}],["http://www.gnu.org/philosophy/whi",{"_index":4090,"title":{},"body":{"license.html":{}}}],["http://www.qcif.edu.au",{"_index":1084,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["httpmodul",{"_index":875,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["https://bootstrap",{"_index":540,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://dev",{"_index":4296,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://github.com/marcelomedina10/skipp",{"_index":3574,"title":{},"body":{"dependencies.html":{}}}],["https://github.com/nkalinov/ng2",{"_index":539,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["https://github.com/redbox",{"_index":4116,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["https://rapid.aaf.edu.au",{"_index":4300,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au",{"_index":4294,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["https://rapid.test.aaf.edu.au/jwt/authnrequest/research/xxxxxx",{"_index":4289,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["hybrid",{"_index":2145,"title":{},"body":{"components/MapComponent.html":{}}}],["hypothet",{"_index":4079,"title":{},"body":{"license.html":{}}}],["i.",{"_index":3160,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["i18next",{"_index":2964,"title":{},"body":{"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["i:numb",{"_index":1397,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["i=0",{"_index":2289,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["i=0;i",{"_index":948,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["i=1",{"_index":1326,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["icon",{"_index":1482,"title":{},"body":{"components/ExportFormComponent.html":{},"components/MapComponent.html":{}}}],["icon.png",{"_index":2131,"title":{},"body":{"components/MapComponent.html":{}}}],["icon.png\",shadowurl:\"http://localhost:1500/default/rdmp/images/leaflet/mark",{"_index":2089,"title":{},"body":{"components/MapComponent.html":{}}}],["iconanchor",{"_index":2127,"title":{},"body":{"components/MapComponent.html":{}}}],["icons",{"_index":2124,"title":{},"body":{"components/MapComponent.html":{}}}],["iconurl",{"_index":2129,"title":{},"body":{"components/MapComponent.html":{}}}],["id",{"_index":2022,"title":{},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["idea",{"_index":4067,"title":{},"body":{"license.html":{}}}],["identifi",{"_index":4006,"title":{},"body":{"license.html":{}}}],["idx",{"_index":412,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["if(!_.isstring(this.valu",{"_index":1599,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["if(!edit",{"_index":2539,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["if(!this.field.editmod",{"_index":434,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(!valu",{"_index":3433,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(_.isstring(data",{"_index":1648,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["if(arg",{"_index":3053,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["if(compil",{"_index":1023,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(disabledexpress",{"_index":1012,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["if(field",{"_index":3305,"title":{},"body":{"injectables/UtilityService.html":{}}}],["if(jquery(this.fieldelement.nativeelement).prop('dis",{"_index":3393,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(layerindex",{"_index":2206,"title":{},"body":{"components/MapComponent.html":{}}}],["if(matchingexpression.test(attachment.label",{"_index":2335,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(oid",{"_index":2323,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(paramvalu",{"_index":556,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(response['statu",{"_index":3419,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["if(stat",{"_index":921,"title":{},"body":{"injectables/DashboardService.html":{}}}],["if(this.field.allexpand",{"_index":439,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["if(this.field.latestpdf",{"_index":2339,"title":{},"body":{"components/PDFListComponent.html":{}}}],["if(this.field.storelabelonli",{"_index":1754,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["if(this.fieldmap",{"_index":2829,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["if(this.importdatastring.indexof",{"_index":2227,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.importdatastring.length",{"_index":2226,"title":{},"body":{"components/MapComponent.html":{}}}],["if(this.isembed",{"_index":1745,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["if(typeof",{"_index":1797,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["if(v){v",{"_index":3322,"title":{},"body":{"injectables/UtilityService.html":{}}}],["ignorenotbefor",{"_index":4298,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["implement",{"_index":552,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["impli",{"_index":1106,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["import",{"_index":30,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["importdata",{"_index":2225,"title":{},"body":{"components/MapComponent.html":{}}}],["importdatastr",{"_index":2100,"title":{},"body":{"components/MapComponent.html":{}}}],["importfailed:boolean",{"_index":2102,"title":{},"body":{"components/MapComponent.html":{}}}],["impos",{"_index":3940,"title":{},"body":{"license.html":{}}}],["inabl",{"_index":4046,"title":{},"body":{"license.html":{}}}],["inaccur",{"_index":4048,"title":{},"body":{"license.html":{}}}],["inc",{"_index":1118,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["incident",{"_index":4044,"title":{},"body":{"license.html":{}}}],["includ",{"_index":3531,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["inclus",{"_index":3847,"title":{},"body":{"license.html":{}}}],["incompat",{"_index":3666,"title":{},"body":{"license.html":{}}}],["incorpor",{"_index":3888,"title":{},"body":{"license.html":{}}}],["indemnif",{"_index":3937,"title":{},"body":{"license.html":{}}}],["independ",{"_index":3838,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["index:i",{"_index":2471,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["index]=\"i",{"_index":1344,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["indic",{"_index":3107,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{}}}],["individu",{"_index":3672,"title":{},"body":{"license.html":{}}}],["industri",{"_index":3897,"title":{},"body":{"license.html":{}}}],["inexact",{"_index":4188,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inform",{"_index":2073,"title":{},"body":{"components/MapComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["infrastructur",{"_index":1082,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["infring",{"_index":3713,"title":{},"body":{"license.html":{}}}],["inherit",{"_index":102,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["init",{"_index":1600,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["init.titl",{"_index":1602,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["init['titl",{"_index":1605,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["init[this.stringlabeltofield",{"_index":1606,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["initconfig",{"_index":835,"title":{},"body":{"injectables/ConfigService.html":{}}}],["initi",{"_index":855,"title":{},"body":{"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["initialis",{"_index":2099,"title":{},"body":{"components/MapComponent.html":{}}}],["initialvalu",{"_index":1544,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["initlookupdata",{"_index":1620,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["initmap(map",{"_index":2184,"title":{},"body":{"components/MapComponent.html":{}}}],["initsub",{"_index":1417,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["initsubject",{"_index":756,"title":{},"body":{"classes/BaseService.html":{}}}],["inittransl",{"_index":1432,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{}}}],["inittranslator(translationservic",{"_index":1451,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["inject",{"_index":0,"title":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"components/SortComponent.html":{},"pipes/StringTemplatePipe.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["inject(completerservic",{"_index":1793,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(configservic",{"_index":51,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(docu",{"_index":1986,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["inject(fieldcontrolmetaservic",{"_index":1870,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["inject(formbuild",{"_index":1985,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["inject(http",{"_index":50,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["inject(loc",{"_index":1475,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["inject(translationservic",{"_index":53,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"injectables/ReportService.html":{}}}],["inject(usersimpleservic",{"_index":1984,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["inject(utilityservic",{"_index":1794,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{}}}],["inject(vocabfieldlookupservic",{"_index":1792,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["injectablebackendconfigfactori",{"_index":3113,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injectablecustomlanguagedetectorservic",{"_index":3094,"title":{},"body":{"injectables/TranslationService.html":{}}}],["injector",{"_index":86,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["injector:ani",{"_index":169,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["inlin",{"_index":1892,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["input",{"_index":97,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["insid",{"_index":3662,"title":{},"body":{"license.html":{}}}],["inst",{"_index":1799,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.appconfig",{"_index":1803,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.compclass",{"_index":1806,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.field",{"_index":1818,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["inst.utilityservic",{"_index":1801,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["instal",{"_index":3603,"title":{"additional-documentation/installation-guide.html":{}},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["instanc",{"_index":4270,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["instanti",{"_index":991,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["instead",{"_index":4089,"title":{},"body":{"license.html":{}}}],["intact",{"_index":3823,"title":{},"body":{"license.html":{}}}],["integr",{"_index":4262,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["intend",{"_index":1622,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["intent",{"_index":3814,"title":{},"body":{"license.html":{}}}],["interact",{"_index":3722,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["interchang",{"_index":3856,"title":{},"body":{"license.html":{}}}],["interest",{"_index":3974,"title":{},"body":{"license.html":{}}}],["interf",{"_index":3904,"title":{},"body":{"license.html":{}}}],["interfac",{"_index":3142,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["internationalis",{"_index":4229,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["interpret",{"_index":3751,"title":{},"body":{"license.html":{}}}],["intim",{"_index":3759,"title":{},"body":{"license.html":{}}}],["introduct",{"_index":4165,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["invalid",{"_index":1995,"title":{},"body":{"components/LocalAuthComponent.html":{},"license.html":{}}}],["invalidemail",{"_index":3172,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["io",{"_index":633,"title":{},"body":{"classes/AsynchField.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.get(`${this.brandingandportalurl}/asynch/subscribe/${oid",{"_index":2619,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["io.socket.on('start",{"_index":727,"title":{},"body":{"classes/AsynchField.html":{}}}],["io.socket.on('stop",{"_index":729,"title":{},"body":{"classes/AsynchField.html":{}}}],["io.socket.on('upd",{"_index":731,"title":{},"body":{"classes/AsynchField.html":{}}}],["irrevoc",{"_index":3767,"title":{},"body":{"license.html":{}}}],["isdis",{"_index":90,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isembed",{"_index":100,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["isempti",{"_index":2487,"title":{},"body":{"classes/RbValidator.html":{}}}],["isempty(control",{"_index":2489,"title":{},"body":{"classes/RbValidator.html":{}}}],["ishelp",{"_index":1037,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["ishelp.length",{"_index":1042,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["islistening:boolean",{"_index":689,"title":{},"body":{"classes/AsynchField.html":{}}}],["isload",{"_index":1423,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["islogindis",{"_index":1965,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["isn't",{"_index":2071,"title":{},"body":{"components/MapComponent.html":{}}}],["isradio",{"_index":397,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isreadi",{"_index":3073,"title":{},"body":{"injectables/TranslationService.html":{}}}],["isready(handl",{"_index":3077,"title":{},"body":{"injectables/TranslationService.html":{}}}],["issearch",{"_index":2753,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["issuer",{"_index":4293,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["isvalarray",{"_index":395,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["isvalid",{"_index":974,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["isvis",{"_index":517,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["it'",{"_index":3089,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["it'll",{"_index":2116,"title":{},"body":{"components/MapComponent.html":{}}}],["item",{"_index":946,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/RelatedObjectDataComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["item.dateupd",{"_index":2356,"title":{},"body":{"components/PDFListComponent.html":{}}}],["item.trim",{"_index":3325,"title":{},"body":{"injectables/UtilityService.html":{}}}],["item[column.properti",{"_index":2799,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["item[fieldnam",{"_index":1710,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["item[srcfld",{"_index":1713,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["item[targetfld",{"_index":1714,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["itemarray",{"_index":1686,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["itemresult",{"_index":3278,"title":{},"body":{"injectables/UtilityService.html":{}}}],["itemresult}${_.isempty(itemresult",{"_index":3284,"title":{},"body":{"injectables/UtilityService.html":{}}}],["itself",{"_index":3912,"title":{},"body":{"license.html":{}}}],["jit",{"_index":3604,"title":{},"body":{"index.html":{}}}],["joinarray",{"_index":3243,"title":{},"body":{"injectables/UtilityService.html":{}}}],["joinarray(data",{"_index":3266,"title":{},"body":{"injectables/UtilityService.html":{}}}],["joinarray(data:ani",{"_index":3328,"title":{},"body":{"injectables/UtilityService.html":{}}}],["jqueri",{"_index":347,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"modules/ExportModule.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"modules/RecordSearchModule.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/ReportModule.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{}}}],["jquery(\"#loading\").addclass(\"hidden",{"_index":1939,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery(\"#loading\").removeclass(\"hidden",{"_index":1938,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["jquery('a[data",{"_index":496,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('hid",{"_index":440,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).collapse('show",{"_index":441,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('hidden.bs.collaps",{"_index":432,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${tab.id}`).on('shown.bs.collaps",{"_index":426,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.datetime.iddatepicker}`).attr('aria",{"_index":545,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('hid",{"_index":473,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_confirmation`).modal('show",{"_index":471,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('hid",{"_index":2473,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(`#${this.field.name}_editnotes`).modal('show",{"_index":2472,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["jquery(buttonelem).find(\"span[class='glyphicon",{"_index":1038,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["jquery(this.fieldelement.nativeelement.parentel",{"_index":1022,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["js",{"_index":3516,"title":{},"body":{"dependencies.html":{}}}],["jsclient",{"_index":821,"title":{},"body":{"classes/BaseService.html":{}}}],["json",{"_index":1889,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["json.stringify(this.field.criteria).replace(/@oid/g",{"_index":711,"title":{},"body":{"classes/AsynchField.html":{}}}],["jsonwebtokenopt",{"_index":4292,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["june",{"_index":1089,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["jwt",{"_index":3547,"title":{},"body":{"dependencies.html":{}}}],["keep",{"_index":3822,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["kept",{"_index":4231,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kernel",{"_index":3748,"title":{},"body":{"license.html":{}}}],["key",{"_index":1016,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["keyword",{"_index":4198,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["kind",{"_index":3614,"title":{},"body":{"license.html":{}}}],["kml",{"_index":2247,"title":{},"body":{"components/MapComponent.html":{}}}],["know",{"_index":3632,"title":{},"body":{"license.html":{}}}],["knowingli",{"_index":3997,"title":{},"body":{"license.html":{}}}],["knowledg",{"_index":4004,"title":{},"body":{"license.html":{}}}],["l",{"_index":671,"title":{},"body":{"classes/AsynchField.html":{},"components/MapComponent.html":{}}}],["l.featuregroup",{"_index":2104,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(that.layers).togeojson",{"_index":2196,"title":{},"body":{"components/MapComponent.html":{}}}],["l.featuregroup(this.layers).togeojson",{"_index":2234,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(json.parse(this.importdatastr",{"_index":2232,"title":{},"body":{"components/MapComponent.html":{}}}],["l.geojson(this.layergeojson",{"_index":2216,"title":{},"body":{"components/MapComponent.html":{}}}],["l.icon",{"_index":2123,"title":{},"body":{"components/MapComponent.html":{}}}],["l.latlng",{"_index":2140,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z",{"_index":2106,"title":{},"body":{"components/MapComponent.html":{}}}],["l.tilelayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z",{"_index":2115,"title":{},"body":{"components/MapComponent.html":{}}}],["label",{"_index":139,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["label]=\"'mov",{"_index":1363,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["label]=\"'remov",{"_index":1370,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["label]=\"\\'mov",{"_index":2875,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["label]=\"\\'remov",{"_index":2876,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["languag",{"_index":3096,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["larger",{"_index":3841,"title":{},"body":{"license.html":{}}}],["last",{"_index":668,"title":{},"body":{"classes/AsynchField.html":{},"injectables/FieldControlMetaService.html":{}}}],["lastupdatelabel",{"_index":583,"title":{},"body":{"classes/AsynchField.html":{}}}],["later",{"_index":1099,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["latest.html#opt",{"_index":2244,"title":{},"body":{"components/MapComponent.html":{}}}],["latestpdf",{"_index":2309,"title":{},"body":{"components/PDFListComponent.html":{}}}],["latlng",{"_index":2081,"title":{},"body":{"components/MapComponent.html":{}}}],["latlng([108.94248962402342",{"_index":2060,"title":{},"body":{"components/MapComponent.html":{}}}],["latter",{"_index":2238,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["law",{"_index":3698,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":3981,"title":{},"body":{"license.html":{}}}],["lay",{"_index":4224,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["layer",{"_index":2074,"title":{},"body":{"components/MapComponent.html":{}}}],["layer._leaflet_id",{"_index":2205,"title":{},"body":{"components/MapComponent.html":{}}}],["layer.addto(that.drawnitem",{"_index":2219,"title":{},"body":{"components/MapComponent.html":{}}}],["layergeojson",{"_index":2101,"title":{},"body":{"components/MapComponent.html":{}}}],["layerindex",{"_index":2201,"title":{},"body":{"components/MapComponent.html":{}}}],["layers.eachlayer(function(lay",{"_index":2200,"title":{},"body":{"components/MapComponent.html":{}}}],["layerscontrol",{"_index":2142,"title":{},"body":{"components/MapComponent.html":{}}}],["layout",{"_index":2174,"title":{},"body":{"components/MapComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ld",{"_index":4170,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["leaf",{"_index":2136,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet",{"_index":2066,"title":{},"body":{"components/MapComponent.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["leaflet'",{"_index":2072,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.draw",{"_index":2050,"title":{},"body":{"components/MapComponent.html":{}}}],["leaflet.j",{"_index":2047,"title":{},"body":{"components/MapComponent.html":{}}}],["leafletdrawmodul",{"_index":2967,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletdrawmodule.forroot",{"_index":2982,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodul",{"_index":2965,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletmodule.forroot",{"_index":2981,"title":{},"body":{"modules/SharedModule.html":{}}}],["leafletopt",{"_index":2057,"title":{},"body":{"components/MapComponent.html":{}}}],["leav",{"_index":461,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["left",{"_index":1168,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["legal",{"_index":3651,"title":{},"body":{"license.html":{}}}],["legend",{"_index":192,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["lesser",{"_index":4088,"title":{},"body":{"license.html":{}}}],["let",{"_index":3394,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["let'",{"_index":2347,"title":{},"body":{"components/PDFListComponent.html":{}}}],["lgpl.html",{"_index":4091,"title":{},"body":{"license.html":{}}}],["liabil",{"_index":3927,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":3712,"title":{},"body":{"license.html":{}}}],["librari",{"_index":3742,"title":{},"body":{"license.html":{}}}],["licens",{"_index":1086,"title":{"license.html":{}},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["license",{"_index":3701,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":3933,"title":{},"body":{"license.html":{}}}],["likewis",{"_index":3965,"title":{},"body":{"license.html":{}}}],["limit",{"_index":3815,"title":{},"body":{"license.html":{}}}],["line",{"_index":2260,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"license.html":{}}}],["link",{"_index":237,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["linkvaluecompon",{"_index":236,"title":{"components/LinkValueComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["list",{"_index":2292,"title":{},"body":{"components/PDFListComponent.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["list'},{'nam",{"_index":257,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["listen",{"_index":675,"title":{},"body":{"classes/AsynchField.html":{}}}],["listentyp",{"_index":584,"title":{},"body":{"classes/AsynchField.html":{}}}],["liter",{"_index":3145,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["litig",{"_index":3977,"title":{},"body":{"license.html":{}}}],["lng",{"_index":3115,"title":{},"body":{"injectables/TranslationService.html":{}}}],["load",{"_index":87,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["loadablecompon",{"_index":1407,"title":{"classes/LoadableComponent.html":{}},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/SortComponent.html":{}}}],["loadablecomponent:30",{"_index":1468,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:31",{"_index":1471,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:32",{"_index":1470,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:33",{"_index":1469,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:41",{"_index":1452,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:48",{"_index":1456,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:53",{"_index":1446,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:59",{"_index":1450,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:63",{"_index":1454,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:68",{"_index":1455,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:76",{"_index":1449,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadablecomponent:89",{"_index":1458,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["loadpath",{"_index":3114,"title":{},"body":{"injectables/TranslationService.html":{}}}],["loadworkspacedetails(valu",{"_index":3432,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["loc.loc",{"_index":2462,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.nam",{"_index":2460,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["loc.typ",{"_index":2458,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["local",{"_index":240,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UserSimpleService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"dependencies.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["local_auth.compon",{"_index":2019,"title":{},"body":{"modules/LocalAuthModule.html":{}}}],["localauth.html",{"_index":1964,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["localauthcompon",{"_index":239,"title":{"components/LocalAuthComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["localauthmodul",{"_index":2013,"title":{"modules/LocalAuthModule.html":{}},"body":{"modules/LocalAuthModule.html":{},"modules.html":{},"overview.html":{}}}],["locale_id",{"_index":3101,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/en/translation.json",{"_index":3109,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/pt/translation.json",{"_index":3111,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locales/{{lng}}/{{ns}}.json?ts=${t",{"_index":3117,"title":{},"body":{"injectables/TranslationService.html":{}}}],["locat",{"_index":218,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["location:\"\",not",{"_index":2406,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locationhead",{"_index":2421,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["locationservic",{"_index":1438,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["locationstrategi",{"_index":1410,"title":{},"body":{"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["lociz",{"_index":4230,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["lodash",{"_index":46,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"dependencies.html":{}}}],["logger",{"_index":3580,"title":{},"body":{"dependencies.html":{}}}],["login",{"_index":2012,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginloc",{"_index":3195,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginlocal(usernam",{"_index":3208,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["loginmessag",{"_index":1966,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["loginresult",{"_index":1982,"title":{"classes/LoginResult.html":{}},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["loginurl",{"_index":4288,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["long",{"_index":3778,"title":{},"body":{"license.html":{}}}],["lookupservic",{"_index":1549,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["lookupservicenam",{"_index":1828,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["loos",{"_index":4172,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["loss",{"_index":4047,"title":{},"body":{"license.html":{}}}],["lt",{"_index":672,"title":{},"body":{"classes/AsynchField.html":{}}}],["lucen",{"_index":1536,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["luceneescapequeri",{"_index":1535,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["ma",{"_index":1125,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["machin",{"_index":3849,"title":{},"body":{"license.html":{}}}],["made",{"_index":3905,"title":{},"body":{"license.html":{}}}],["mail",{"_index":4072,"title":{},"body":{"license.html":{}}}],["main",{"_index":1406,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["maintabid",{"_index":2147,"title":{},"body":{"components/MapComponent.html":{}}}],["maintain",{"_index":3870,"title":{},"body":{"license.html":{}}}],["major",{"_index":3744,"title":{},"body":{"license.html":{}}}],["make",{"_index":1064,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/RbValidator.html":{},"license.html":{}}}],["manag",{"_index":243,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["manage_roles.compon",{"_index":2036,"title":{},"body":{"modules/ManageRolesModule.html":{}}}],["manage_users.compon",{"_index":2044,"title":{},"body":{"modules/ManageUsersModule.html":{}}}],["managerolescompon",{"_index":242,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/ManageRolesModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["managerolesmodul",{"_index":2030,"title":{"modules/ManageRolesModule.html":{}},"body":{"modules/ManageRolesModule.html":{},"modules.html":{},"overview.html":{}}}],["manageuserscompon",{"_index":245,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["manageusersmodul",{"_index":2037,"title":{"modules/ManageUsersModule.html":{}},"body":{"modules/ManageUsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mandatori",{"_index":4220,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["manner",{"_index":3989,"title":{},"body":{"license.html":{}}}],["manufactur",{"_index":3664,"title":{},"body":{"license.html":{}}}],["map",{"_index":104,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["map((res:ani",{"_index":2554,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["map.${match.trim",{"_index":3043,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.compon",{"_index":2958,"title":{},"body":{"modules/SharedModule.html":{}}}],["map.component.t",{"_index":2046,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:362",{"_index":2094,"title":{},"body":{"components/MapComponent.html":{}}}],["map.component.ts:364",{"_index":2093,"title":{},"body":{"components/MapComponent.html":{}}}],["map.express",{"_index":3039,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["map.fitbounds(this.drawnitems.getbound",{"_index":2170,"title":{},"body":{"components/MapComponent.html":{}}}],["map.html",{"_index":2092,"title":{},"body":{"components/MapComponent.html":{}}}],["map.invalidates",{"_index":2169,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:delet",{"_index":2211,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:deletestop",{"_index":2210,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:edit",{"_index":2198,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on('draw:editstop",{"_index":2209,"title":{},"body":{"components/MapComponent.html":{}}}],["map.on(l.draw.event.cr",{"_index":2190,"title":{},"body":{"components/MapComponent.html":{}}}],["mapcompon",{"_index":247,"title":{"components/MapComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["mapdata",{"_index":2091,"title":{},"body":{"components/MapComponent.html":{}}}],["mapdata'},{'nam",{"_index":248,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["mapentri",{"_index":3295,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapentry.key",{"_index":3296,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mapfield",{"_index":2053,"title":{},"body":{"components/MapComponent.html":{}}}],["march",{"_index":4018,"title":{},"body":{"license.html":{}}}],["mark",{"_index":3657,"title":{},"body":{"license.html":{}}}],["markdown",{"_index":250,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["markdownmodul",{"_index":2944,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownmodule.forroot",{"_index":2983,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdownservic",{"_index":2945,"title":{},"body":{"modules/SharedModule.html":{}}}],["markdowntextarea",{"_index":2252,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["markdowntextareacompon",{"_index":249,"title":{"components/MarkdownTextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["marker",{"_index":2122,"title":{},"body":{"components/MapComponent.html":{}}}],["mask",{"_index":3700,"title":{},"body":{"license.html":{}}}],["master",{"_index":2151,"title":{},"body":{"components/MapComponent.html":{}}}],["masterdrawopt",{"_index":2117,"title":{},"body":{"components/MapComponent.html":{}}}],["masterleafletopt",{"_index":2137,"title":{},"body":{"components/MapComponent.html":{}}}],["match",{"_index":64,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["matches.push(this.converttoitem(item",{"_index":1689,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["matchingexpress",{"_index":2326,"title":{},"body":{"components/PDFListComponent.html":{}}}],["matchingvaluesvalid",{"_index":3593,"title":{},"body":{"miscellaneous/functions.html":{}}}],["matchingvaluesvalidator(control1",{"_index":3150,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["materi",{"_index":3784,"title":{},"body":{"license.html":{}}}],["maxzoom",{"_index":2107,"title":{},"body":{"components/MapComponent.html":{}}}],["md",{"_index":4221,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["mean",{"_index":1758,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["measur",{"_index":3798,"title":{},"body":{"license.html":{}}}],["medium",{"_index":3820,"title":{},"body":{"license.html":{}}}],["meet",{"_index":3733,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["member",{"_index":1066,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["menu",{"_index":3732,"title":{},"body":{"license.html":{}}}],["merchant",{"_index":1107,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["mere",{"_index":3721,"title":{},"body":{"license.html":{}}}],["merg",{"_index":2150,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["merge_log",{"_index":4124,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["messag",{"_index":661,"title":{},"body":{"classes/AsynchField.html":{},"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["message_for_transl",{"_index":3092,"title":{},"body":{"injectables/TranslationService.html":{}}}],["messagelabel",{"_index":585,"title":{},"body":{"classes/AsynchField.html":{}}}],["met",{"_index":3768,"title":{},"body":{"license.html":{}}}],["meta",{"_index":2785,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta.compon",{"_index":343,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["meta.component.t",{"_index":2704,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.component.ts:48",{"_index":2705,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["meta.servic",{"_index":1869,"title":{},"body":{"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"modules/SharedModule.html":{}}}],["meta.service.t",{"_index":1774,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:16",{"_index":1779,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:30",{"_index":1784,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:60",{"_index":1782,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:69",{"_index":1789,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta.service.ts:93",{"_index":1787,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["meta['statu",{"_index":2787,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["meta['titl",{"_index":2791,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["metadata",{"_index":72,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["method",{"_index":8,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["mint",{"_index":1642,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["mint/redbox",{"_index":4117,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["mintdataitem",{"_index":1707,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["mintlookupdataservic",{"_index":1644,"title":{"classes/MintLookupDataService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["minu",{"_index":1164,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["miscellan",{"_index":3592,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mismatch",{"_index":3158,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["misrepresent",{"_index":3931,"title":{},"body":{"license.html":{}}}],["mm",{"_index":1496,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mobx",{"_index":2980,"title":{},"body":{"modules/SharedModule.html":{}}}],["mobxangularmodul",{"_index":2979,"title":{},"body":{"modules/SharedModule.html":{}}}],["modaft",{"_index":1418,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["modalmodul",{"_index":2043,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modalmodule.forroot",{"_index":2045,"title":{},"body":{"modules/ManageUsersModule.html":{},"modules/UserProfileModule.html":{}}}],["modbefor",{"_index":1419,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["mode",{"_index":150,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["model",{"_index":43,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["models.t",{"_index":2021,"title":{},"body":{"classes/LoginResult.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{}}}],["models.ts:10",{"_index":2369,"title":{},"body":{"classes/Plan.html":{}}}],["models.ts:11",{"_index":2366,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:12",{"_index":2367,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:13",{"_index":2899,"title":{},"body":{"classes/ReportResults.html":{}}}],["models.ts:14",{"_index":2365,"title":{},"body":{"classes/Plan.html":{},"classes/ReportResults.html":{}}}],["models.ts:21",{"_index":3135,"title":{},"body":{"classes/User.html":{}}}],["models.ts:22",{"_index":3141,"title":{},"body":{"classes/User.html":{}}}],["models.ts:23",{"_index":3137,"title":{},"body":{"classes/User.html":{}}}],["models.ts:24",{"_index":3140,"title":{},"body":{"classes/User.html":{}}}],["models.ts:25",{"_index":3136,"title":{},"body":{"classes/User.html":{}}}],["models.ts:26",{"_index":3134,"title":{},"body":{"classes/User.html":{}}}],["models.ts:27",{"_index":3139,"title":{},"body":{"classes/User.html":{}}}],["models.ts:28",{"_index":3138,"title":{},"body":{"classes/User.html":{}}}],["models.ts:3",{"_index":2376,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:31",{"_index":2023,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:32",{"_index":2024,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:33",{"_index":2026,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:34",{"_index":2025,"title":{},"body":{"classes/LoginResult.html":{}}}],["models.ts:37",{"_index":2912,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:38",{"_index":2913,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:39",{"_index":2914,"title":{},"body":{"classes/Role.html":{}}}],["models.ts:4",{"_index":2373,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:42",{"_index":2926,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:43",{"_index":2925,"title":{},"body":{"classes/SaveResult.html":{}}}],["models.ts:5",{"_index":2375,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:6",{"_index":2374,"title":{},"body":{"classes/PlanTable.html":{},"classes/Report.html":{}}}],["models.ts:7",{"_index":2887,"title":{},"body":{"classes/Report.html":{}}}],["models.ts:9",{"_index":2368,"title":{},"body":{"classes/Plan.html":{}}}],["modif",{"_index":3696,"title":{},"body":{"license.html":{}}}],["modifi",{"_index":1096,"title":{},"body":{"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["modifyeditors(record",{"_index":2567,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["modul",{"_index":856,"title":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["module.id",{"_index":1409,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["moduleid",{"_index":1408,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["mois",{"_index":3252,"title":{},"body":{"injectables/UtilityService.html":{}}}],["moisbo",{"_index":3384,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["moment",{"_index":35,"title":{},"body":{"injectables/ANDSService.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["moment(a['dateupdated']).isbefore(moment(b['dateupd",{"_index":2344,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(attachment.dateupdated).format('ll",{"_index":2337,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.field.latestpdf['dateupdated']).isbefore(moment(attachment.dateupd",{"_index":2340,"title":{},"body":{"components/PDFListComponent.html":{}}}],["moment(this.modafter).format('yyyi",{"_index":1499,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(this.modbefore).format('yyyi",{"_index":1495,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["moment(value).locale(this.locale).format(this.field.dateformat",{"_index":749,"title":{},"body":{"classes/AsynchField.html":{}}}],["moment:mo",{"_index":3336,"title":{},"body":{"injectables/UtilityService.html":{}}}],["mongo",{"_index":3571,"title":{},"body":{"dependencies.html":{}}}],["mongodb",{"_index":4103,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["more",{"_index":1112,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["moreov",{"_index":3958,"title":{},"body":{"license.html":{}}}],["movedown",{"_index":2861,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["movedown(ev",{"_index":1403,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["movedownbuttonclass",{"_index":1188,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveup",{"_index":2862,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["moveup(ev",{"_index":1396,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["moveupbuttonclass",{"_index":1187,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["mt0",{"_index":2109,"title":{},"body":{"components/MapComponent.html":{}}}],["mt1",{"_index":2110,"title":{},"body":{"components/MapComponent.html":{}}}],["mt2",{"_index":2111,"title":{},"body":{"components/MapComponent.html":{}}}],["mt3",{"_index":2112,"title":{},"body":{"components/MapComponent.html":{}}}],["much",{"_index":4137,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["multipl",{"_index":1632,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["multivalu",{"_index":2280,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["multivaluefieldpip",{"_index":2278,"title":{"pipes/MultivalueFieldPipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"modules/ReportModule.html":{},"overview.html":{}}}],["n/a",{"_index":4240,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["name",{"_index":20,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["namelabel",{"_index":586,"title":{},"body":{"classes/AsynchField.html":{}}}],["natur",{"_index":3839,"title":{},"body":{"license.html":{}}}],["nav",{"_index":289,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["navigateto",{"_index":562,"title":{},"body":{"classes/AngularPage.html":{}}}],["nbsp",{"_index":558,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["nbsp;{{field.label",{"_index":321,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["necessari",{"_index":4040,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["need",{"_index":2065,"title":{},"body":{"components/MapComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["network",{"_index":3723,"title":{},"body":{"license.html":{}}}],["new",{"_index":804,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["newelem",{"_index":1283,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["newelem.componentreactors.push(thi",{"_index":1389,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.createformmodel",{"_index":1289,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.margintop",{"_index":1384,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setemptyvalu",{"_index":1286,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.setupeventhandl",{"_index":1387,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.showhead",{"_index":1388,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem.vocabfield.initialvalu",{"_index":1386,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newelem:ani",{"_index":1383,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newformmodel",{"_index":1288,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newidx",{"_index":1398,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst",{"_index":1258,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst.postinit(valu",{"_index":1276,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f",{"_index":1262,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newinst[f.field",{"_index":1272,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newlocation:ani",{"_index":2404,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["newopt",{"_index":1255,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["newopts.valu",{"_index":1257,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["next",{"_index":3871,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["ng2",{"_index":125,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"modules/ReportModule.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"dependencies.html":{}}}],["ng2completermodul",{"_index":2962,"title":{},"body":{"modules/SharedModule.html":{}}}],["ngafterviewinit",{"_index":423,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ngclass]=\"field.cssclasses\">download",{"_index":2352,"title":{},"body":{"components/PDFListComponent.html":{}}}],["ngclass]=\"field.movedownbuttonclass",{"_index":1365,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.moveupbuttonclass",{"_index":1358,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttonclass",{"_index":1369,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngclass]=\"field.removebuttontextclass",{"_index":1368,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngcomplet",{"_index":1740,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["nginx",{"_index":4104,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ngmodul",{"_index":870,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["ngonchang",{"_index":973,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["ngoninit",{"_index":494,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["ngstyle]=\"{'margin",{"_index":1359,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["ngstyle]=\"{\\'margin",{"_index":2874,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["ngx",{"_index":879,"title":{},"body":{"modules/DashboardModule.html":{},"classes/ExternalLookupDataService.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"modules/UserProfileModule.html":{},"injectables/VocabFieldLookupService.html":{},"modules/WorkspaceListModule.html":{},"dependencies.html":{}}}],["nkdatetimemodul",{"_index":1512,"title":{},"body":{"modules/ExportModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{}}}],["node",{"_index":302,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"dependencies.html":{},"additional-documentation/installation-guide.html":{}}}],["node_arg",{"_index":4123,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["node_env",{"_index":4126,"title":{},"body":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["nodej",{"_index":4100,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["noemptyingroup",{"_index":2488,"title":{},"body":{"classes/RbValidator.html":{}}}],["noemptyingroup(field",{"_index":2493,"title":{},"body":{"classes/RbValidator.html":{}}}],["noitem",{"_index":2372,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["non",{"_index":3694,"title":{},"body":{"license.html":{}}}],["noncommerci",{"_index":3865,"title":{},"body":{"license.html":{}}}],["noreply@redbox",{"_index":4254,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["noreply@redboxresearchdata.com.au",{"_index":4244,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["normal",{"_index":3743,"title":{},"body":{"license.html":{}}}],["note",{"_index":1026,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/MapComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["noteshead",{"_index":2422,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["noth",{"_index":3966,"title":{},"body":{"license.html":{}}}],["notic",{"_index":3725,"title":{},"body":{"license.html":{}}}],["notif",{"_index":4158,"title":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["notifi",{"_index":3953,"title":{},"body":{"license.html":{}}}],["notinformfield",{"_index":575,"title":{},"body":{"classes/AsynchField.html":{}}}],["notinformfield:30",{"_index":615,"title":{},"body":{"classes/AsynchField.html":{}}}],["notinformfield:33",{"_index":618,"title":{},"body":{"classes/AsynchField.html":{}}}],["notinformfield:38",{"_index":622,"title":{},"body":{"classes/AsynchField.html":{}}}],["notwithstand",{"_index":3925,"title":{},"body":{"license.html":{}}}],["now",{"_index":536,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["npm",{"_index":4107,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["null",{"_index":129,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["null):formcontrol",{"_index":350,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["number",{"_index":123,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["o._leaflet_id",{"_index":2204,"title":{},"body":{"components/MapComponent.html":{}}}],["o.oid",{"_index":3431,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["object",{"_index":894,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/FieldControlService.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["oblig",{"_index":3800,"title":{},"body":{"license.html":{}}}],["observ",{"_index":627,"title":{},"body":{"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["observable.from(fieldarray).flatmap((f:ani",{"_index":1826,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["observable.of(field",{"_index":1727,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["observable.of(form",{"_index":2522,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["observable.of(nul",{"_index":1837,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"components/RelatedObjectDataComponent.html":{}}}],["observable.zip(...getrecordmetaob",{"_index":2794,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["occasion",{"_index":3864,"title":{},"body":{"license.html":{}}}],["occur",{"_index":3670,"title":{},"body":{"license.html":{}}}],["offer",{"_index":3649,"title":{},"body":{"license.html":{}}}],["offici",{"_index":3737,"title":{},"body":{"license.html":{}}}],["oid",{"_index":681,"title":{},"body":{"classes/AsynchField.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["oid).then((form:ani",{"_index":2519,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["oid:string=nul",{"_index":2535,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["omnivor",{"_index":2096,"title":{},"body":{"components/MapComponent.html":{}}}],["on",{"_index":3740,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["onapplyfilt",{"_index":2754,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["onc",{"_index":3605,"title":{},"body":{"index.html":{},"additional-documentation/installation-guide.html":{}}}],["onchang",{"_index":2930,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["onchange(opt",{"_index":2934,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["onchange(opt:ani",{"_index":405,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["onclick",{"_index":322,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["onclick(ev",{"_index":324,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["onfilterchang",{"_index":2838,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["oninit",{"_index":329,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onitemselect",{"_index":1555,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onkeyup(valu",{"_index":1767,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onlogin",{"_index":1968,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(ev",{"_index":1977,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onlogin(event:ani",{"_index":1997,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["onmapready(map",{"_index":2165,"title":{},"body":{"components/MapComponent.html":{}}}],["onremov",{"_index":1151,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onremove(ev",{"_index":1158,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onremovebtnclick",{"_index":1156,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onremovebtnclick)=\"removeelem($event[0",{"_index":1342,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["onselect(select",{"_index":1749,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["onstart(progress",{"_index":734,"title":{},"body":{"classes/AsynchField.html":{}}}],["onstop(progress",{"_index":738,"title":{},"body":{"classes/AsynchField.html":{}}}],["onupdate(progress",{"_index":741,"title":{},"body":{"classes/AsynchField.html":{}}}],["onvalueload",{"_index":1269,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["onvalueupd",{"_index":1268,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["open",{"_index":3398,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["oper",{"_index":3749,"title":{},"body":{"license.html":{}}}],["opt",{"_index":385,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordSearchRefiner.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["opt.label",{"_index":389,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["opt.valu",{"_index":387,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["opt/redbox",{"_index":4113,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["opt:ani",{"_index":3439,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option",{"_index":22,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["option['label",{"_index":3413,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["option['nam",{"_index":3415,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["optionalemailvalid",{"_index":3595,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optionalemailvalidator(control",{"_index":3162,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"miscellaneous/functions.html":{}}}],["options.parameternam",{"_index":2707,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["options.valu",{"_index":2162,"title":{},"body":{"components/MapComponent.html":{}}}],["options['addbuttonclass",{"_index":1202,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontext",{"_index":1192,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['addbuttontextclass",{"_index":1200,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['cansort",{"_index":1350,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['col",{"_index":2265,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['column",{"_index":2316,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["options['columntitl",{"_index":2818,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['completionlabel",{"_index":663,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['completionratetyp",{"_index":639,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['criteria",{"_index":680,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['datecompletedlabel",{"_index":652,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['dateformat",{"_index":670,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['datestartedlabel",{"_index":648,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['delegateerrorhandl",{"_index":1216,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['disableeditafterselect",{"_index":1576,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['drawopt",{"_index":2156,"title":{},"body":{"components/MapComponent.html":{}}}],["options['editnotescssclass",{"_index":2433,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["options['fieldnam",{"_index":1570,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['forceclon",{"_index":1198,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['lastupdatelabel",{"_index":666,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['leafletopt",{"_index":2149,"title":{},"body":{"components/MapComponent.html":{}}}],["options['listentyp",{"_index":674,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['maintabid",{"_index":2164,"title":{},"body":{"components/MapComponent.html":{}}}],["options['messagelabel",{"_index":659,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['namelabel",{"_index":642,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['open",{"_index":3405,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['opt",{"_index":3410,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['placehold",{"_index":1574,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['provid",{"_index":1586,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['recordtyp",{"_index":2819,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["options['relatedrecordid",{"_index":636,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['removebuttonclass",{"_index":1207,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontext",{"_index":1194,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['removebuttontextclass",{"_index":1205,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['restricttoselect",{"_index":1582,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['resultarrayproperti",{"_index":1588,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['row",{"_index":2262,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['savefirst",{"_index":3408,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["options['searchfield",{"_index":1566,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['skipclon",{"_index":1196,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["options['sourcetyp",{"_index":1572,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['startedbylabel",{"_index":656,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['startswith",{"_index":2318,"title":{},"body":{"components/PDFListComponent.html":{}}}],["options['statuslabel",{"_index":645,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['storelabelonli",{"_index":1584,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['stringlabeltofield",{"_index":1578,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['tabid",{"_index":2160,"title":{},"body":{"components/MapComponent.html":{}}}],["options['targetact",{"_index":172,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["options['targetstep",{"_index":3379,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["options['tasktyp",{"_index":678,"title":{},"body":{"classes/AsynchField.html":{}}}],["options['titlefieldarr",{"_index":1564,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['titlefielddelim",{"_index":1568,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['titlefieldnam",{"_index":1562,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["options['typ",{"_index":2255,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["options['valu",{"_index":176,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["options['vocabid",{"_index":1558,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["opts.alwaysact",{"_index":2634,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.nam",{"_index":2626,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.titl",{"_index":2628,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.typ",{"_index":2629,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.typelabel",{"_index":2632,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["opts.valu",{"_index":2630,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["order",{"_index":2346,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["organ",{"_index":3703,"title":{},"body":{"license.html":{}}}],["organis",{"_index":4174,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["origdata",{"_index":621,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["origin",{"_index":3932,"title":{},"body":{"license.html":{}}}],["orm",{"_index":3567,"title":{},"body":{"dependencies.html":{}}}],["os",{"_index":4099,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["other",{"_index":3635,"title":{},"body":{"license.html":{}}}],["otherwis",{"_index":2497,"title":{},"body":{"classes/RbValidator.html":{},"injectables/UtilityService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["out",{"_index":868,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["output",{"_index":1155,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/RecordSearchRefinerComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["outsid",{"_index":3787,"title":{},"body":{"license.html":{}}}],["over",{"_index":4128,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["overlay",{"_index":4141,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overrid",{"_index":4162,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["overridden",{"_index":2076,"title":{},"body":{"components/MapComponent.html":{}}}],["overview",{"_index":4094,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owasp",{"_index":3146,"title":{},"body":{"interfaces/UserForm.html":{}}}],["owasp.test(password",{"_index":3176,"title":{},"body":{"interfaces/UserForm.html":{}}}],["own",{"_index":3986,"title":{},"body":{"license.html":{}}}],["owner'},{'nam",{"_index":300,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["ownership",{"_index":2853,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["packag",{"_index":3497,"title":{"dependencies.html":{}},"body":{"license.html":{}}}],["packagetyp",{"_index":905,"title":{},"body":{"injectables/DashboardService.html":{}}}],["packagetype=${packagetyp",{"_index":938,"title":{},"body":{"injectables/DashboardService.html":{}}}],["page",{"_index":462,"title":{"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pagedata",{"_index":3018,"title":{},"body":{"components/SortComponent.html":{}}}],["pagenumb",{"_index":897,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["pagenumber:numb",{"_index":2908,"title":{},"body":{"injectables/ReportService.html":{}}}],["pageurl",{"_index":511,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["pageurl.split",{"_index":514,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["paginationmodul",{"_index":3016,"title":{},"body":{"components/SortComponent.html":{}}}],["paginationmodule,tooltipmodul",{"_index":878,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["paginationmodule.forroot",{"_index":881,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["pair",{"_index":1658,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["paper",{"_index":4071,"title":{},"body":{"license.html":{}}}],["paragraph",{"_index":3947,"title":{},"body":{"license.html":{}}}],["param",{"_index":349,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"modules/WorkspaceListModule.html":{}}}],["paramet",{"_index":18,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"miscellaneous/functions.html":{}}}],["parameternam",{"_index":515,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parameterretrievercompon",{"_index":253,"title":{"components/ParameterRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["parameterretrieverfield",{"_index":553,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["params.filteractiverefinerswithnodata",{"_index":2582,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:ani",{"_index":2613,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["params:object",{"_index":2909,"title":{},"body":{"injectables/ReportService.html":{}}}],["paramvalu",{"_index":554,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["parent",{"_index":3454,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["parent'},{'nam",{"_index":315,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["parentel",{"_index":1021,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('*:dis",{"_index":1033,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentelement.find('button').filter((index",{"_index":1035,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["parentelement.find('input').prop",{"_index":1034,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["parentfield",{"_index":777,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["parentid",{"_index":88,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["pars",{"_index":1765,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/VocabFieldLookupService.html":{}}}],["parsedlay",{"_index":2231,"title":{},"body":{"components/MapComponent.html":{}}}],["parsedlayers.eachlayer(lay",{"_index":2233,"title":{},"body":{"components/MapComponent.html":{}}}],["parsequerystr",{"_index":2721,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr",{"_index":2735,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["parsequerystr(querystr:str",{"_index":2676,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["part",{"_index":3705,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["parti",{"_index":3720,"title":{},"body":{"license.html":{}}}],["particular",{"_index":1109,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["particularli",{"_index":4160,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["party'",{"_index":3972,"title":{},"body":{"license.html":{}}}],["pass",{"_index":3106,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["passport",{"_index":3544,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":1991,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"license.html":{}}}],["password:password",{"_index":3226,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["passwordstrength",{"_index":3178,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthdetail",{"_index":3179,"title":{},"body":{"interfaces/UserForm.html":{}}}],["passwordstrengthvalid",{"_index":3596,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordstrengthvalidator(control1",{"_index":3173,"title":{},"body":{"interfaces/UserForm.html":{},"miscellaneous/functions.html":{}}}],["patent",{"_index":3686,"title":{},"body":{"license.html":{}}}],["path",{"_index":2409,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"injectables/UtilityService.html":{}}}],["pathlocationstrategi",{"_index":1412,"title":{},"body":{"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["pattern",{"_index":3588,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["payload",{"_index":1144,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['from",{"_index":1146,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payload['subject",{"_index":1145,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["payment",{"_index":4015,"title":{},"body":{"license.html":{}}}],["pdf",{"_index":256,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["pdfattach",{"_index":2308,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.compon",{"_index":2952,"title":{},"body":{"modules/SharedModule.html":{}}}],["pdflist.component.t",{"_index":2291,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:100",{"_index":2300,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:102",{"_index":2298,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.component.ts:132",{"_index":2296,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflist.html",{"_index":2293,"title":{},"body":{"components/PDFListComponent.html":{}}}],["pdflistcompon",{"_index":255,"title":{"components/PDFListComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["pdflistfield",{"_index":2299,"title":{},"body":{"components/PDFListComponent.html":{}}}],["peer",{"_index":3876,"title":{},"body":{"license.html":{}}}],["pend",{"_index":2451,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["percentag",{"_index":640,"title":{},"body":{"classes/AsynchField.html":{}}}],["percentpip",{"_index":624,"title":{},"body":{"classes/AsynchField.html":{}}}],["perform",{"_index":3755,"title":{},"body":{"license.html":{}}}],["perman",{"_index":3952,"title":{},"body":{"license.html":{}}}],["permiss",{"_index":3652,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3610,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["perpetu",{"_index":3907,"title":{},"body":{"license.html":{}}}],["person",{"_index":3884,"title":{},"body":{"license.html":{}}}],["pertin",{"_index":4025,"title":{},"body":{"license.html":{}}}],["physic",{"_index":2408,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"license.html":{}}}],["physical':\"phys",{"_index":2412,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["piec",{"_index":3631,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":2277,"title":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":2285,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["place",{"_index":2064,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["placehold",{"_index":1480,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["plain",{"_index":4251,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["plan",{"_index":41,"title":{"classes/Plan.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"components/PDFListComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plan.dashboardtitl",{"_index":949,"title":{},"body":{"injectables/DashboardService.html":{}}}],["plan.select",{"_index":2841,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plan.titl",{"_index":955,"title":{},"body":{"injectables/DashboardService.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["plan.title[0",{"_index":2843,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["plantabl",{"_index":40,"title":{"classes/PlanTable.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["pleas",{"_index":2010,"title":{},"body":{"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["plu",{"_index":1203,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"license.html":{}}}],["plugin",{"_index":2051,"title":{},"body":{"components/MapComponent.html":{}}}],["pm2",{"_index":4109,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["point",{"_index":4278,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["pointer",{"_index":4063,"title":{},"body":{"license.html":{}}}],["populatedatalocation(oid",{"_index":2452,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["populateformgroup",{"_index":1849,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["populateformgroup(field",{"_index":1861,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["portal",{"_index":3223,"title":{},"body":{"injectables/UserSimpleService.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["portal'",{"_index":4154,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["portion",{"_index":3879,"title":{},"body":{"license.html":{}}}],["posit",{"_index":2120,"title":{},"body":{"components/MapComponent.html":{}}}],["position:\"topright\",draw:{marker:{icon:icon({iconsize:[25,41],iconanchor:[13,41],iconurl:\"http://localhost:1500/default/rdmp/images/leaflet/mark",{"_index":2088,"title":{},"body":{"components/MapComponent.html":{}}}],["possess",{"_index":3833,"title":{},"body":{"license.html":{}}}],["possibl",{"_index":4052,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["post",{"_index":4252,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["postinit(valu",{"_index":1608,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["postinit(value:ani",{"_index":2258,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["power",{"_index":3810,"title":{},"body":{"license.html":{}}}],["practic",{"_index":3616,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["preambl",{"_index":3612,"title":{},"body":{"license.html":{}}}],["precis",{"_index":3673,"title":{},"body":{"license.html":{}}}],["predecessor",{"_index":3973,"title":{},"body":{"license.html":{}}}],["prefer",{"_index":3735,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":1659,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["present",{"_index":2186,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["preserv",{"_index":3930,"title":{},"body":{"license.html":{}}}],["prevent",{"_index":3634,"title":{},"body":{"license.html":{}}}],["preview",{"_index":2250,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["previou",{"_index":2353,"title":{},"body":{"components/PDFListComponent.html":{},"license.html":{}}}],["previous",{"_index":1942,"title":{},"body":{"classes/LoadableComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["price",{"_index":3627,"title":{},"body":{"license.html":{}}}],["primari",{"_index":1211,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["primarili",{"_index":4016,"title":{},"body":{"license.html":{}}}],["prior",{"_index":3954,"title":{},"body":{"license.html":{}}}],["privat",{"_index":968,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["problem",{"_index":3658,"title":{},"body":{"license.html":{}}}],["proce",{"_index":4299,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["procedur",{"_index":3901,"title":{},"body":{"license.html":{}}}],["process",{"_index":686,"title":{},"body":{"classes/AsynchField.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["procur",{"_index":4011,"title":{},"body":{"license.html":{}}}],["produc",{"_index":3750,"title":{},"body":{"license.html":{}}}],["product",{"_index":3671,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["profile'},{'nam",{"_index":306,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["prog",{"_index":745,"title":{},"body":{"classes/AsynchField.html":{}}}],["prog.id",{"_index":746,"title":{},"body":{"classes/AsynchField.html":{}}}],["program",{"_index":1091,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["program'",{"_index":3819,"title":{},"body":{"license.html":{}}}],["programm",{"_index":4085,"title":{},"body":{"license.html":{}}}],["programsif",{"_index":4058,"title":{},"body":{"license.html":{}}}],["progress",{"_index":714,"title":{},"body":{"classes/AsynchField.html":{}}}],["progress.completionr",{"_index":715,"title":{},"body":{"classes/AsynchField.html":{}}}],["progress.currentidx",{"_index":716,"title":{},"body":{"classes/AsynchField.html":{}}}],["progress.id",{"_index":721,"title":{},"body":{"classes/AsynchField.html":{}}}],["progress.targetidx",{"_index":717,"title":{},"body":{"classes/AsynchField.html":{}}}],["progressarr",{"_index":587,"title":{},"body":{"classes/AsynchField.html":{}}}],["prohibit",{"_index":3675,"title":{},"body":{"license.html":{}}}],["project",{"_index":4074,"title":{},"body":{"license.html":{}}}],["promin",{"_index":3727,"title":{},"body":{"license.html":{}}}],["promis",{"_index":29,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{}}}],["propag",{"_index":3710,"title":{},"body":{"license.html":{}}}],["properti",{"_index":82,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["proprietari",{"_index":3692,"title":{},"body":{"license.html":{}}}],["protect",{"_index":52,"title":{},"body":{"injectables/ANDSService.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["protocol",{"_index":3917,"title":{},"body":{"license.html":{}}}],["protractor",{"_index":566,"title":{},"body":{"classes/AngularPage.html":{}}}],["prove",{"_index":4038,"title":{},"body":{"license.html":{}}}],["provid",{"_index":860,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"classes/MintLookupDataService.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"modules/WorkspaceListModule.html":{},"license.html":{},"overview.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["provis",{"_index":3681,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["provision",{"_index":3950,"title":{},"body":{"license.html":{}}}],["proxi",{"_index":4034,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["proxy'",{"_index":4035,"title":{},"body":{"license.html":{}}}],["pt",{"_index":3104,"title":{},"body":{"injectables/TranslationService.html":{}}}],["public",{"_index":85,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["publicli",{"_index":3918,"title":{},"body":{"license.html":{}}}],["publish",{"_index":78,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["publishdatalocationselector.compon",{"_index":2956,"title":{},"body":{"modules/SharedModule.html":{}}}],["publishdatalocationselector.component.t",{"_index":2377,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:155",{"_index":2402,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:156",{"_index":2400,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:158",{"_index":2395,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:162",{"_index":2398,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:168",{"_index":2393,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:172",{"_index":2392,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:176",{"_index":2389,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:181",{"_index":2394,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.component.ts:185",{"_index":2396,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselector.html",{"_index":2380,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishdatalocationselectorcompon",{"_index":258,"title":{"components/PublishDataLocationSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["publishdatalocationselectorfield",{"_index":2401,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["publishmetadata(oid",{"_index":2708,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["pull",{"_index":1167,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["puppet",{"_index":3549,"title":{},"body":{"dependencies.html":{}}}],["purpos",{"_index":1110,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["pursuant",{"_index":4008,"title":{},"body":{"license.html":{}}}],["q",{"_index":2680,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["q.split",{"_index":2682,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj",{"_index":2681,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[0].split('|')[1",{"_index":2686,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qobj[1",{"_index":2684,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["qualifi",{"_index":3961,"title":{},"body":{"license.html":{}}}],["qualiti",{"_index":4037,"title":{},"body":{"license.html":{}}}],["queensland",{"_index":1080,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["queri",{"_index":1538,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["querystr",{"_index":2677,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["question",{"_index":1040,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["radio",{"_index":399,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["ran",{"_index":995,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["rb",{"_index":212,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["rbmapdatatempl",{"_index":2239,"title":{},"body":{"components/MapComponent.html":{}}}],["rbportal",{"_index":4120,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["rbrelatedobjectdatatempl",{"_index":2795,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rbvalid",{"_index":2483,"title":{"classes/RbValidator.html":{}},"body":{"classes/RbValidator.html":{}}}],["rbvalidator.isempty(group.controls[f",{"_index":2504,"title":{},"body":{"classes/RbValidator.html":{}}}],["rc",{"_index":3551,"title":{},"body":{"dependencies.html":{}}}],["rdmp",{"_index":2319,"title":{},"body":{"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["re",{"_index":779,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["react",{"_index":1311,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reactev",{"_index":595,"title":{},"body":{"classes/AsynchField.html":{},"components/RepeatableContributorComponent.html":{}}}],["reactevent(eventnam",{"_index":619,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["reactiveformsmodul",{"_index":873,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["read",{"_index":999,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["readabl",{"_index":3850,"title":{},"body":{"license.html":{}}}],["readi",{"_index":3680,"title":{},"body":{"license.html":{}}}],["readili",{"_index":3999,"title":{},"body":{"license.html":{}}}],["reason",{"_index":3861,"title":{},"body":{"license.html":{}}}],["receipt",{"_index":3960,"title":{},"body":{"license.html":{}}}],["receiv",{"_index":1114,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["recipi",{"_index":3644,"title":{},"body":{"license.html":{}}}],["recipient'",{"_index":4005,"title":{},"body":{"license.html":{}}}],["recogn",{"_index":3738,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":4139,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record",{"_index":77,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["record'",{"_index":4180,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["record.dataloc",{"_index":2455,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["record.j",{"_index":4152,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["record.oid",{"_index":2827,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["record/",{"_index":4258,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["record_search_refiner.html",{"_index":2750,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["record_typ",{"_index":1420,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["recordactionresult",{"_index":2512,"title":{"classes/RecordActionResult.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordmetadataretrievercompon",{"_index":259,"title":{"components/RecordMetadataRetrieverComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["recordmetadataretrieverfield",{"_index":342,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["records.servic",{"_index":164,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["records:record",{"_index":2569,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchcompon",{"_index":260,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["recordsearchmodul",{"_index":2712,"title":{"modules/RecordSearchModule.html":{}},"body":{"modules/RecordSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["recordsearchparam",{"_index":2580,"title":{"classes/RecordSearchParams.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordsearchrefin",{"_index":2590,"title":{"classes/RecordSearchRefiner.html":{}},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["recordsearchrefinercompon",{"_index":262,"title":{"components/RecordSearchRefinerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["recordselected(record",{"_index":2825,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordselectedemit(record",{"_index":2831,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordservic",{"_index":166,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["recordsservic",{"_index":163,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"components/ExportFormComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"overview.html":{}}}],["recordtyp",{"_index":901,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["recordtype:str",{"_index":2813,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["recordtype=${recordtyp",{"_index":935,"title":{},"body":{"injectables/DashboardService.html":{}}}],["rectyp",{"_index":1445,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rectypenam",{"_index":1421,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["redbox",{"_index":2379,"title":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"index.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox.research.uts.edu.au/default/rdmp",{"_index":4297,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["redbox2ckan",{"_index":3553,"title":{},"body":{"dependencies.html":{}}}],["redbox@dev",{"_index":4255,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redbox@redboxresearchdata.com.au",{"_index":4248,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["redboxapikey",{"_index":4127,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["redirect",{"_index":464,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redirectloc",{"_index":457,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["redistribut",{"_index":1094,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["reduc",{"_index":4266,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["redux",{"_index":3556,"title":{},"body":{"dependencies.html":{}}}],["refer",{"_index":3626,"title":{},"body":{"license.html":{}}}],["refin",{"_index":2589,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["refinedsearchstr",{"_index":2581,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner'},{'nam",{"_index":264,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["refiner.activevalu",{"_index":2647,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.alwaysact",{"_index":2648,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.component.t",{"_index":2749,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:10",{"_index":2756,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:11",{"_index":2755,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:12",{"_index":2757,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:14",{"_index":2759,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.component.ts:22",{"_index":2760,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refiner.nam",{"_index":2673,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.typ",{"_index":2591,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner.valu",{"_index":2646,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refiner:recordsearchrefin",{"_index":2663,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig",{"_index":2638,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.alwaysact",{"_index":2658,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.nam",{"_index":2700,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinerconfig.titl",{"_index":2767,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinerconfig.typelabel",{"_index":2768,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinernam",{"_index":2685,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalu",{"_index":2661,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{}}}],["refinervalue:ani",{"_index":2762,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["refinervalues[refinernam",{"_index":2687,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.activevalu",{"_index":2664,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refinervalues}&refiner|${refiner.name}=${_.isempty(refiner.valu",{"_index":2665,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["refrain",{"_index":4027,"title":{},"body":{"license.html":{}}}],["reg",{"_index":3313,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regard",{"_index":3924,"title":{},"body":{"license.html":{}}}],["regardless",{"_index":3835,"title":{},"body":{"license.html":{}}}],["regener",{"_index":3763,"title":{},"body":{"license.html":{}}}],["regex",{"_index":3309,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(`${this.field.startswith",{"_index":2327,"title":{},"body":{"components/PDFListComponent.html":{}}}],["regexp(regex",{"_index":3314,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regexp(regextrail",{"_index":3320,"title":{},"body":{"injectables/UtilityService.html":{}}}],["regextrail",{"_index":3315,"title":{},"body":{"injectables/UtilityService.html":{}}}],["region",{"_index":2052,"title":{},"body":{"components/MapComponent.html":{}}}],["regist",{"_index":4301,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["registerev",{"_index":3427,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["registermapeventhandlers(map",{"_index":2189,"title":{},"body":{"components/MapComponent.html":{}}}],["regtrail",{"_index":3319,"title":{},"body":{"injectables/UtilityService.html":{}}}],["reinstat",{"_index":3949,"title":{},"body":{"license.html":{}}}],["relat",{"_index":1137,"title":{},"body":{"injectables/EmailNotificationService.html":{},"components/GenericGroupComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["related_not",{"_index":1904,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_titl",{"_index":1903,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_url",{"_index":1895,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["related_websit",{"_index":1890,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["relatedobject",{"_index":2303,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata",{"_index":2773,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata'},{'nam",{"_index":266,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["relatedobjectdata.compon",{"_index":2953,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectdata.component.t",{"_index":2772,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.component.ts:134",{"_index":2776,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdata.html",{"_index":2774,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["relatedobjectdatacompon",{"_index":265,"title":{"components/RelatedObjectDataComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["relatedobjectdatafield",{"_index":2775,"title":{},"body":{"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselected:eventemitt",{"_index":2815,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector",{"_index":2805,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector'},{'nam",{"_index":268,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["relatedobjectselector.compon",{"_index":2954,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectselector.component.t",{"_index":2804,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:143",{"_index":2809,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.component.ts:145",{"_index":2810,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselector.html",{"_index":2806,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedobjectselectorcompon",{"_index":267,"title":{"components/RelatedObjectSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["relatedobjectselectorcomponent,datalocationcompon",{"_index":2986,"title":{},"body":{"modules/SharedModule.html":{}}}],["relatedobjectselectorfield",{"_index":2808,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["relatedrecordid",{"_index":588,"title":{},"body":{"classes/AsynchField.html":{}}}],["relationship",{"_index":3788,"title":{},"body":{"license.html":{}}}],["releas",{"_index":3623,"title":{},"body":{"license.html":{}}}],["relev",{"_index":3829,"title":{},"body":{"license.html":{}}}],["reli",{"_index":3998,"title":{},"body":{"license.html":{}}}],["reliabl",{"_index":2545,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["relicens",{"_index":3941,"title":{},"body":{"license.html":{}}}],["remain",{"_index":3622,"title":{},"body":{"license.html":{}}}],["remov",{"_index":2693,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["removeallelem",{"_index":1320,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebtnclass",{"_index":1153,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["removebtntext",{"_index":1154,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["removebuttonclass",{"_index":1186,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontext",{"_index":1180,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removebuttontextclass",{"_index":1184,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removeelem",{"_index":2856,"title":{},"body":{"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removeelem(ev",{"_index":1332,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["removeelem(index",{"_index":1291,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["removelocation(loc",{"_index":2456,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["render",{"_index":2048,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["rendercompleteel",{"_index":2524,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["rendit",{"_index":4226,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["repair",{"_index":4041,"title":{},"body":{"license.html":{}}}],["repeat",{"_index":270,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["repeatable.compon",{"_index":1913,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"modules/SharedModule.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatable.component.t",{"_index":1150,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:222",{"_index":1160,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:223",{"_index":1171,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:224",{"_index":1170,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:225",{"_index":1161,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:226",{"_index":1173,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:228",{"_index":1159,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:232",{"_index":1157,"title":{},"body":{"classes/EmbeddableComponent.html":{}}}],["repeatable.component.ts:242",{"_index":2857,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:244",{"_index":2858,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:248",{"_index":2860,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:252",{"_index":2859,"title":{},"body":{"classes/RepeatableComponent.html":{}}}],["repeatable.component.ts:318",{"_index":2883,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:319",{"_index":2882,"title":{},"body":{"components/RepeatableVocabComponent.html":{}}}],["repeatable.component.ts:397",{"_index":2872,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:399",{"_index":2866,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:405",{"_index":2863,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:414",{"_index":2868,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:421",{"_index":2867,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:430",{"_index":2865,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatable.component.ts:441",{"_index":2864,"title":{},"body":{"components/RepeatableContributorComponent.html":{}}}],["repeatablecompon",{"_index":1329,"title":{"classes/RepeatableComponent.html":{}},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["repeatablecomponent:242",{"_index":2873,"title":{},"body":{"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:244",{"_index":2869,"title":{},"body":{"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:248",{"_index":2871,"title":{},"body":{"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecomponent:252",{"_index":2870,"title":{},"body":{"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontain",{"_index":1178,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributor",{"_index":1346,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablecontributorcompon",{"_index":269,"title":{"components/RepeatableContributorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["repeatablegroupcompon",{"_index":271,"title":{"components/RepeatableGroupComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["repeatabletextfieldcompon",{"_index":273,"title":{"components/RepeatableTextfieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["repeatablevocab",{"_index":1337,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["repeatablevocabcompon",{"_index":275,"title":{"components/RepeatableVocabComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["replac",{"_index":1637,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"pipes/StringTemplatePipe.html":{},"injectables/VocabFieldLookupService.html":{}}}],["replace(/(\\$\\{(?!map\\.)[^}]+\\})/g",{"_index":3048,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g",{"_index":3041,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["report",{"_index":2884,"title":{"classes/Report.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["report'},{'nam",{"_index":278,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["report.compon",{"_index":2897,"title":{},"body":{"modules/ReportModule.html":{}}}],["reportcompon",{"_index":277,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/ReportModule.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["reportmodul",{"_index":2889,"title":{"modules/ReportModule.html":{}},"body":{"modules/ReportModule.html":{},"modules.html":{},"overview.html":{}}}],["reportresult",{"_index":2888,"title":{"classes/ReportResults.html":{}},"body":{"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{}}}],["reportservic",{"_index":2895,"title":{"injectables/ReportService.html":{}},"body":{"modules/ReportModule.html":{},"injectables/ReportService.html":{},"overview.html":{}}}],["repositori",{"_index":4140,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["repres",{"_index":3899,"title":{},"body":{"license.html":{}}}],["request",{"_index":3558,"title":{},"body":{"dependencies.html":{}}}],["requestopt",{"_index":794,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["requir",{"_index":141,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["res.json",{"_index":817,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["res.messag",{"_index":2008,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.url",{"_index":2006,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["res.us",{"_index":2003,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["research",{"_index":4179,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["reset",{"_index":867,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}],["reset(data=nul",{"_index":1322,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["resetfilt",{"_index":2845,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resetselector",{"_index":2833,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resetselectorev",{"_index":2816,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["resolv",{"_index":3892,"title":{},"body":{"license.html":{}}}],["respect",{"_index":3639,"title":{},"body":{"license.html":{}}}],["respons",{"_index":188,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/UserSimpleService.html":{},"license.html":{}}}],["response[\"item",{"_index":947,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["response['workspacetyp",{"_index":3423,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["rest",{"_index":4305,"title":{"additional-documentation/rest-api-documentation.html":{}},"body":{"additional-documentation/rest-api-documentation.html":{}}}],["restor",{"_index":996,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["restrict",{"_index":3687,"title":{},"body":{"license.html":{}}}],["restricttoselect",{"_index":1552,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["result",{"_index":63,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{},"additional-documentation/rest-api-documentation.html":{}}}],["result.errors.length",{"_index":3177,"title":{},"body":{"interfaces/UserForm.html":{}}}],["result.push(itemresult",{"_index":3286,"title":{},"body":{"injectables/UtilityService.html":{}}}],["result:ani",{"_index":3275,"title":{},"body":{"injectables/UtilityService.html":{}}}],["resultarrayproperti",{"_index":1554,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["result}${_.isempty(result",{"_index":3287,"title":{},"body":{"injectables/UtilityService.html":{}}}],["retain",{"_index":3909,"title":{},"body":{"license.html":{}}}],["retriev",{"_index":551,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["retriever'},{'nam",{"_index":254,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["return",{"_index":28,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["returnemptystr",{"_index":3088,"title":{},"body":{"injectables/TranslationService.html":{}}}],["returnnul",{"_index":3087,"title":{},"body":{"injectables/TranslationService.html":{}}}],["retval",{"_index":2507,"title":{},"body":{"classes/RbValidator.html":{}}}],["revers",{"_index":2348,"title":{},"body":{"components/PDFListComponent.html":{},"additional-documentation/installation-guide.html":{}}}],["review",{"_index":4053,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["revis",{"_index":4030,"title":{},"body":{"license.html":{}}}],["revokekey",{"_index":3196,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokekey(userid",{"_index":3210,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["revokeuserkey",{"_index":3197,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["rich",{"_index":4259,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["right",{"_index":1065,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["risk",{"_index":4036,"title":{},"body":{"license.html":{}}}],["role",{"_index":2028,"title":{"classes/Role.html":{}},"body":{"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"modules/SharedModule.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/WorkspaceTypeService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["role:rol",{"_index":2575,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["roleid",{"_index":2920,"title":{},"body":{"injectables/RolesService.html":{}}}],["roles'},{'nam",{"_index":244,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["roles:roleid",{"_index":2924,"title":{},"body":{"injectables/RolesService.html":{}}}],["rolesservic",{"_index":2915,"title":{"injectables/RolesService.html":{}},"body":{"injectables/RolesService.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["rom",{"_index":3911,"title":{},"body":{"license.html":{}}}],["root",{"_index":132,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["row",{"_index":913,"title":{},"body":{"injectables/DashboardService.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"injectables/ReportService.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["royalti",{"_index":3976,"title":{},"body":{"license.html":{}}}],["rule",{"_index":3916,"title":{},"body":{"license.html":{}}}],["run",{"_index":3601,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{}}}],["runfordev.sh",{"_index":3602,"title":{},"body":{"index.html":{}}}],["runtempl",{"_index":3244,"title":{},"body":{"injectables/UtilityService.html":{}}}],["runtemplate(data",{"_index":3269,"title":{},"body":{"injectables/UtilityService.html":{}}}],["runtemplate(data:ani",{"_index":3333,"title":{},"body":{"injectables/UtilityService.html":{}}}],["rxj",{"_index":1533,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{}}}],["rxjs/add/observable/from",{"_index":1868,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/observable/interv",{"_index":796,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["rxjs/add/observable/of",{"_index":797,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["rxjs/add/observable/zip",{"_index":2777,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rxjs/add/operator/buffertim",{"_index":631,"title":{},"body":{"classes/AsynchField.html":{}}}],["rxjs/add/operator/filt",{"_index":632,"title":{},"body":{"classes/AsynchField.html":{}}}],["rxjs/add/operator/last",{"_index":1867,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/map",{"_index":33,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/add/operator/mergemap",{"_index":798,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlService.html":{}}}],["rxjs/add/operator/topromis",{"_index":34,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["rxjs/observ",{"_index":628,"title":{},"body":{"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{}}}],["rxjs/observable/frompromis",{"_index":2779,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["rxjs/subject",{"_index":630,"title":{},"body":{"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/TranslationService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["sacal",{"_index":3253,"title":{},"body":{"injectables/UtilityService.html":{}}}],["safest",{"_index":4062,"title":{},"body":{"license.html":{}}}],["sail",{"_index":3562,"title":{},"body":{"dependencies.html":{},"additional-documentation/configuration-guide.html":{}}}],["sailshq/upgrad",{"_index":3498,"title":{},"body":{"dependencies.html":{}}}],["sailsj",{"_index":4145,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sake",{"_index":3656,"title":{},"body":{"license.html":{}}}],["sale",{"_index":3984,"title":{},"body":{"license.html":{}}}],["same",{"_index":3645,"title":{},"body":{"license.html":{}}}],["sampl",{"_index":4143,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["sanit",{"_index":3040,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["satisfi",{"_index":3875,"title":{},"body":{"license.html":{}}}],["save",{"_index":280,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["saveandopenworkspac",{"_index":3466,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["savebutton",{"_index":337,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["savebuttoncompon",{"_index":279,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["savefirst",{"_index":3399,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["savenot",{"_index":2386,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["saveresult",{"_index":2029,"title":{"classes/SaveResult.html":{}},"body":{"classes/LoginResult.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{}}}],["savesuccess",{"_index":4222,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["say",{"_index":3872,"title":{},"body":{"license.html":{}}}],["schedul",{"_index":3542,"title":{},"body":{"dependencies.html":{}}}],["schema",{"_index":4173,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["school",{"_index":4086,"title":{},"body":{"license.html":{}}}],["scope",{"_index":4013,"title":{},"body":{"license.html":{}}}],["screenshot",{"_index":2542,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["script",{"_index":3753,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{}}}],["search",{"_index":263,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["search'},{'nam",{"_index":261,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["search(param",{"_index":2579,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["search(term",{"_index":1531,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchfield",{"_index":1546,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchfieldstr",{"_index":1694,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchfieldstr.split",{"_index":1695,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchfilt",{"_index":4194,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["searchfilternam",{"_index":2811,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["searchfld",{"_index":1700,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchfld}:${term",{"_index":1702,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchrecord",{"_index":891,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumb",{"_index":908,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchrecords(pagenumber:numb",{"_index":956,"title":{},"body":{"injectables/DashboardService.html":{}}}],["searchsourc",{"_index":3352,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["searchstr",{"_index":1540,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchstring}${_.isempty(searchstr",{"_index":1701,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchurl",{"_index":1703,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordSearchParams.html":{},"injectables/VocabFieldLookupService.html":{}}}],["searchurl}?q=${this.basicsearch}&type=${this.recordtype}${refinervalu",{"_index":2666,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["secondarili",{"_index":3711,"title":{},"body":{"license.html":{}}}],["secretorkey",{"_index":4290,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["section",{"_index":448,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["see",{"_index":1111,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["select",{"_index":1339,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["selectallloc",{"_index":2387,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selectalllocations(check",{"_index":2397,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["selected['originalobject",{"_index":1340,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["selectioncompon",{"_index":381,"title":{"classes/SelectionComponent.html":{}},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectioncomponent:147",{"_index":1134,"title":{},"body":{"components/DropdownFieldComponent.html":{},"components/SelectionFieldComponent.html":{}}}],["selectioncomponent:149",{"_index":1132,"title":{},"body":{"components/DropdownFieldComponent.html":{},"components/SelectionFieldComponent.html":{}}}],["selectionfield",{"_index":333,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["selectionfield'},{'nam",{"_index":282,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["selectionfieldcompon",{"_index":281,"title":{"components/SelectionFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["selector",{"_index":73,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector'},{'nam",{"_index":203,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector.compon",{"_index":2973,"title":{},"body":{"modules/SharedModule.html":{}}}],["selector.component.t",{"_index":3453,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector.component.ts:12",{"_index":3456,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:14",{"_index":3455,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{}}}],["selector.component.ts:76",{"_index":3485,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector.component.ts:77",{"_index":3484,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector.component.ts:79",{"_index":3475,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["selector.component.ts:84",{"_index":3476,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["sell",{"_index":3983,"title":{},"body":{"license.html":{}}}],["semiconductor",{"_index":3699,"title":{},"body":{"license.html":{}}}],["send",{"_index":4235,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sendnotif",{"_index":1138,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["sendnotification(to",{"_index":1139,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["separ",{"_index":3836,"title":{},"body":{"license.html":{}}}],["serv",{"_index":3745,"title":{},"body":{"license.html":{}}}],["server",{"_index":3583,"title":{},"body":{"dependencies.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["servic",{"_index":39,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"modules/ReportModule.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["service.emitinit",{"_index":1960,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject",{"_index":1947,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.getinitsubject().subscribe(subtrackerfn(serviceidx",{"_index":1959,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["service.t",{"_index":6,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:111",{"_index":3257,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:128",{"_index":3274,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:13",{"_index":17,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:146",{"_index":3272,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:174",{"_index":3249,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:184",{"_index":3268,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:188",{"_index":3270,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:22",{"_index":26,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["service.ts:28",{"_index":2904,"title":{},"body":{"injectables/ReportService.html":{}}}],["service.ts:30",{"_index":900,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:32",{"_index":3081,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:33",{"_index":3082,"title":{},"body":{"injectables/TranslationService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:34",{"_index":773,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"injectables/RolesService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:35",{"_index":771,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:36",{"_index":772,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{}}}],["service.ts:37",{"_index":769,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:38",{"_index":770,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["service.ts:39",{"_index":774,"title":{},"body":{"classes/BaseService.html":{},"injectables/UtilityService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:40",{"_index":768,"title":{},"body":{"classes/BaseService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{}}}],["service.ts:41",{"_index":767,"title":{},"body":{"classes/BaseService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:42",{"_index":1140,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["service.ts:43",{"_index":896,"title":{},"body":{"injectables/DashboardService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["service.ts:46",{"_index":839,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/RolesService.html":{}}}],["service.ts:49",{"_index":3495,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["service.ts:51",{"_index":903,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:52",{"_index":836,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:56",{"_index":791,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:58",{"_index":840,"title":{},"body":{"injectables/ConfigService.html":{}}}],["service.ts:59",{"_index":907,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:60",{"_index":793,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:64",{"_index":788,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:65",{"_index":3080,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:70",{"_index":781,"title":{},"body":{"classes/BaseService.html":{},"injectables/UtilityService.html":{}}}],["service.ts:71",{"_index":837,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"injectables/TranslationService.html":{}}}],["service.ts:74",{"_index":775,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:77",{"_index":3079,"title":{},"body":{"injectables/TranslationService.html":{}}}],["service.ts:80",{"_index":780,"title":{},"body":{"classes/BaseService.html":{},"injectables/DashboardService.html":{}}}],["service.ts:82",{"_index":3261,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service.ts:84",{"_index":778,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:86",{"_index":911,"title":{},"body":{"injectables/DashboardService.html":{}}}],["service.ts:93",{"_index":783,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:98",{"_index":786,"title":{},"body":{"classes/BaseService.html":{}}}],["service.ts:99",{"_index":3265,"title":{},"body":{"injectables/UtilityService.html":{}}}],["service:ani",{"_index":1957,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicearr",{"_index":1459,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["serviceidx:ani",{"_index":1950,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["serviceinst",{"_index":1830,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["serviceinst.getlookupdata(f",{"_index":1836,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["serviceinst:ani",{"_index":1951,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["servicenam",{"_index":1788,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["set",{"_index":465,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["setcurrentvalu",{"_index":2739,"title":{},"body":{"classes/RecordSearchRefiner.html":{}}}],["setcurrentvalue(valu",{"_index":2635,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setdashboardtitl",{"_index":892,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setdashboardtitle(plant",{"_index":912,"title":{},"body":{"injectables/DashboardService.html":{}}}],["setemptyvalu",{"_index":2224,"title":{},"body":{"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setemptyvalue(updatetitl",{"_index":1611,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["setfacetvalu",{"_index":2722,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setfacetvalues(facet",{"_index":2698,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["setload",{"_index":1433,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["setloading(load",{"_index":1453,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["setlookupservices(completerservic",{"_index":1617,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["setoid(o",{"_index":3430,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["setrecordtyp",{"_index":1428,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrecordtype(rectyp",{"_index":1443,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["setrefinerconfig",{"_index":2723,"title":{},"body":{"classes/RecordSearchParams.html":{}}}],["setrefinerconfig(config",{"_index":2652,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["settin",{"_index":4241,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/en",{"_index":4242,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/from",{"_index":4243,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["settings/templatedir",{"_index":4245,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["setup",{"_index":4129,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["setupeventhandl",{"_index":1850,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setupeventhandlers(fieldmap",{"_index":1863,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["setvalue(valu",{"_index":1680,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/RelatedObjectDataComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["setvalue(value:ani",{"_index":177,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["setvalueatelem(index",{"_index":1304,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["sever",{"_index":4151,"title":{},"body":{"additional-documentation/configuration-guide.html":{}}}],["shadow.png",{"_index":2133,"title":{},"body":{"components/MapComponent.html":{}}}],["shadow.png\"})},circlemarker:false,circle:fals",{"_index":2090,"title":{},"body":{"components/MapComponent.html":{}}}],["shadowurl",{"_index":2132,"title":{},"body":{"components/MapComponent.html":{}}}],["shall",{"_index":3795,"title":{},"body":{"license.html":{}}}],["share",{"_index":3619,"title":{},"body":{"license.html":{}}}],["shared/bas",{"_index":38,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["shared/config",{"_index":1141,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["shared/dashboard",{"_index":3015,"title":{},"body":{"components/SortComponent.html":{}}}],["shared/form/records.servic",{"_index":1474,"title":{},"body":{"components/ExportFormComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/SortComponent.html":{}}}],["shared/loadable.compon",{"_index":1472,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/SortComponent.html":{}}}],["shared/report",{"_index":2898,"title":{},"body":{"modules/ReportModule.html":{}}}],["shared/shared.modul",{"_index":880,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{}}}],["shared/transl",{"_index":1473,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/SortComponent.html":{}}}],["shared/us",{"_index":1983,"title":{},"body":{"components/LocalAuthComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["shared/user.servic",{"_index":1981,"title":{},"body":{"components/LocalAuthComponent.html":{},"components/SortComponent.html":{}}}],["sharedmodul",{"_index":865,"title":{"modules/SharedModule.html":{}},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["shilo",{"_index":144,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/RolesService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["short",{"_index":4073,"title":{},"body":{"license.html":{}}}],["show",{"_index":2062,"title":{},"body":{"components/MapComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["showconfirmdlg",{"_index":470,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["showhead",{"_index":2301,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["showhistorytable:boolean",{"_index":2311,"title":{},"body":{"components/PDFListComponent.html":{}}}],["side",{"_index":752,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["sign",{"_index":1041,"title":{},"body":{"components/DmpFieldComponent.html":{},"license.html":{}}}],["signific",{"_index":3900,"title":{},"body":{"license.html":{}}}],["similar",{"_index":3808,"title":{},"body":{"license.html":{}}}],["simpl",{"_index":162,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["simple.compon",{"_index":159,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["simple.component.t",{"_index":319,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["simple.component.ts:111",{"_index":2994,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:119",{"_index":2996,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:126",{"_index":2997,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:133",{"_index":2995,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:141",{"_index":2993,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:147",{"_index":2927,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:149",{"_index":2928,"title":{},"body":{"classes/SelectionComponent.html":{}}}],["simple.component.ts:186",{"_index":1133,"title":{},"body":{"components/DropdownFieldComponent.html":{}}}],["simple.component.ts:230",{"_index":2936,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:232",{"_index":2933,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:236",{"_index":2932,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:240",{"_index":2931,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:247",{"_index":2935,"title":{},"body":{"components/SelectionFieldComponent.html":{}}}],["simple.component.ts:316",{"_index":3057,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:322",{"_index":3059,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:344",{"_index":3058,"title":{},"body":{"components/TabOrAccordionContainerComponent.html":{}}}],["simple.component.ts:38",{"_index":2998,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:381",{"_index":1916,"title":{},"body":{"components/HtmlRawComponent.html":{}}}],["simple.component.ts:402",{"_index":3063,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:403",{"_index":3062,"title":{},"body":{"components/TextBlockComponent.html":{}}}],["simple.component.ts:42",{"_index":3000,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:46",{"_index":2999,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:50",{"_index":3001,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:507",{"_index":828,"title":{},"body":{"components/CancelButtonComponent.html":{}}}],["simple.component.ts:521",{"_index":326,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:523",{"_index":325,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:527",{"_index":323,"title":{},"body":{"components/AnchorOrButtonComponent.html":{}}}],["simple.component.ts:54",{"_index":3003,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:56",{"_index":3002,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:60",{"_index":2989,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:606",{"_index":1917,"title":{},"body":{"components/LinkValueComponent.html":{}}}],["simple.component.ts:621",{"_index":1915,"title":{},"body":{"components/HiddenValueComponent.html":{}}}],["simple.component.ts:64",{"_index":2988,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:672",{"_index":964,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:674",{"_index":963,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:676",{"_index":961,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:684",{"_index":960,"title":{},"body":{"components/DateTimeComponent.html":{}}}],["simple.component.ts:69",{"_index":2991,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:699",{"_index":2361,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:701",{"_index":2360,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:708",{"_index":2359,"title":{},"body":{"components/ParameterRetrieverComponent.html":{}}}],["simple.component.ts:731",{"_index":3026,"title":{},"body":{"components/SpacerComponent.html":{}}}],["simple.component.ts:74",{"_index":2990,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.component.ts:746",{"_index":3064,"title":{},"body":{"components/ToggleComponent.html":{}}}],["simple.component.ts:81",{"_index":2992,"title":{},"body":{"classes/SimpleComponent.html":{}}}],["simple.t",{"_index":3189,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:35",{"_index":3217,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:36",{"_index":3218,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:37",{"_index":3200,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:43",{"_index":3206,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:49",{"_index":3209,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:56",{"_index":3207,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:62",{"_index":3214,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:68",{"_index":3202,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:74",{"_index":3204,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:80",{"_index":3211,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:86",{"_index":3216,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:92",{"_index":3205,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simple.ts:98",{"_index":3212,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["simplecompon",{"_index":71,"title":{"classes/SimpleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["simplecomponent:111",{"_index":135,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:119",{"_index":140,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:126",{"_index":146,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:133",{"_index":138,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:141",{"_index":131,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:38",{"_index":103,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:42",{"_index":108,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:46",{"_index":105,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:50",{"_index":109,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:54",{"_index":115,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:56",{"_index":114,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:60",{"_index":155,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:64",{"_index":153,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:69",{"_index":158,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:74",{"_index":156,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simplecomponent:81",{"_index":124,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{}}}],["simultan",{"_index":4024,"title":{},"body":{"license.html":{}}}],["singl",{"_index":4010,"title":{},"body":{"license.html":{}}}],["skip",{"_index":3283,"title":{},"body":{"injectables/UtilityService.html":{}}}],["skipclon",{"_index":1181,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["skipper",{"_index":3572,"title":{},"body":{"dependencies.html":{}}}],["skipvalidationonsav",{"_index":4211,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["smart",{"_index":3579,"title":{},"body":{"dependencies.html":{}}}],["socket",{"_index":3569,"title":{},"body":{"dependencies.html":{}}}],["socketr",{"_index":720,"title":{},"body":{"classes/AsynchField.html":{}}}],["softwar",{"_index":1093,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["sold",{"_index":3887,"title":{},"body":{"license.html":{}}}],["sole",{"_index":3779,"title":{},"body":{"license.html":{}}}],["solr",{"_index":4185,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["solrqueri",{"_index":2886,"title":{},"body":{"classes/Report.html":{},"classes/ReportResults.html":{}}}],["sort",{"_index":906,"title":{},"body":{"injectables/DashboardService.html":{},"components/SortComponent.html":{}}}],["sort'},{'nam",{"_index":284,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["sort.compon",{"_index":877,"title":{},"body":{"modules/DashboardModule.html":{}}}],["sort.html",{"_index":3005,"title":{},"body":{"components/SortComponent.html":{}}}],["sort:string=undefin",{"_index":932,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sort:this.sort",{"_index":3024,"title":{},"body":{"components/SortComponent.html":{}}}],["sort=${sort",{"_index":941,"title":{},"body":{"injectables/DashboardService.html":{}}}],["sortchang",{"_index":3008,"title":{},"body":{"components/SortComponent.html":{}}}],["sortclick",{"_index":3006,"title":{},"body":{"components/SortComponent.html":{}}}],["sortcompon",{"_index":283,"title":{"components/SortComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"modules/DashboardModule.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AngularPage.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"modules/DmpModule.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"modules/LocalAuthModule.html":{},"classes/LoginResult.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"modules/RecordSearchModule.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"modules/ReportModule.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"modules/UserProfileModule.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{}}}],["sourcedata",{"_index":1542,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["sourcetyp",{"_index":1548,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["spacer",{"_index":341,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["spacer'},{'nam",{"_index":286,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["spacercompon",{"_index":285,"title":{"components/SpacerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["span",{"_index":2525,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["spare",{"_index":3860,"title":{},"body":{"license.html":{}}}],["speak",{"_index":3625,"title":{},"body":{"license.html":{}}}],["special",{"_index":3690,"title":{},"body":{"license.html":{}}}],["specif",{"_index":2486,"title":{},"body":{"classes/RbValidator.html":{},"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["specifi",{"_index":3739,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["specific_backend_messag",{"_index":3091,"title":{},"body":{"injectables/TranslationService.html":{}}}],["spinnerelem",{"_index":1424,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["spirit",{"_index":4031,"title":{},"body":{"license.html":{}}}],["split",{"_index":3250,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitarraystringstoarray",{"_index":3245,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitarraystringstoarray(data",{"_index":3271,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitarraystringstoarray(data:ani",{"_index":3308,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray",{"_index":3246,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray(data",{"_index":3273,"title":{},"body":{"injectables/UtilityService.html":{}}}],["splitstringtoarray(data:ani",{"_index":3303,"title":{},"body":{"injectables/UtilityService.html":{}}}],["srcfld",{"_index":1593,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["stage",{"_index":4176,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stagelabel",{"_index":4200,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["stand",{"_index":3679,"title":{},"body":{"license.html":{}}}],["standard",{"_index":3736,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["start",{"_index":650,"title":{"index.html":{},"license.html":{}},"body":{"classes/AsynchField.html":{},"injectables/DashboardService.html":{},"classes/LoadableComponent.html":{},"injectables/ReportService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["startedbylabel",{"_index":589,"title":{},"body":{"classes/AsynchField.html":{}}}],["startingwher",{"_index":4203,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["startlisten",{"_index":706,"title":{},"body":{"classes/AsynchField.html":{}}}],["startswith:str",{"_index":2310,"title":{},"body":{"components/PDFListComponent.html":{}}}],["startup",{"_index":4131,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["state",{"_index":899,"title":{},"body":{"injectables/DashboardService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["state:str",{"_index":918,"title":{},"body":{"injectables/DashboardService.html":{}}}],["state=${st",{"_index":922,"title":{},"body":{"injectables/DashboardService.html":{}}}],["statement",{"_index":3943,"title":{},"body":{"license.html":{}}}],["static",{"_index":393,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["statu",{"_index":483,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RbValidator.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"license.html":{}}}],["status.empti",{"_index":2506,"title":{},"body":{"classes/RbValidator.html":{}}}],["status.emptyfields.push(f",{"_index":2505,"title":{},"body":{"classes/RbValidator.html":{}}}],["statuslabel",{"_index":590,"title":{},"body":{"classes/AsynchField.html":{}}}],["step",{"_index":3007,"title":{},"body":{"components/SortComponent.html":{},"license.html":{}}}],["step:this.step",{"_index":3025,"title":{},"body":{"components/SortComponent.html":{}}}],["stepto(oid",{"_index":2560,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["steptotab(step",{"_index":506,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stop",{"_index":739,"title":{},"body":{"classes/AsynchField.html":{}}}],["storag",{"_index":3843,"title":{},"body":{"license.html":{}}}],["store",{"_index":4169,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["storelabelonli",{"_index":1553,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["street",{"_index":1121,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["strength",{"_index":3147,"title":{},"body":{"interfaces/UserForm.html":{}}}],["string",{"_index":24,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["string=nul",{"_index":368,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["stringlabeltofield",{"_index":1551,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["stringtempl",{"_index":3028,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["stringtemplate:item",{"_index":2798,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["stringtemplatepip",{"_index":2941,"title":{"pipes/StringTemplatePipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/StringTemplatePipe.html":{},"overview.html":{}}}],["structur",{"_index":4150,"title":{},"body":{"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["style",{"_index":3133,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["sub",{"_index":813,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{},"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["subclass",{"_index":127,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["subdivid",{"_index":3971,"title":{},"body":{"license.html":{}}}],["subdomain",{"_index":2108,"title":{},"body":{"components/MapComponent.html":{}}}],["subfield:str",{"_index":529,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["subject",{"_index":629,"title":{},"body":{"classes/AsynchField.html":{},"classes/BaseService.html":{},"injectables/ConfigService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/TranslationService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["sublicens",{"_index":3791,"title":{},"body":{"license.html":{}}}],["submit",{"_index":167,"title":{},"body":{"components/ActionButtonComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["subprogram",{"_index":3758,"title":{},"body":{"license.html":{}}}],["subroutin",{"_index":4087,"title":{},"body":{"license.html":{}}}],["subs.length",{"_index":1954,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subscrib",{"_index":1691,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["subscribe((res:ani",{"_index":852,"title":{},"body":{"injectables/ConfigService.html":{}}}],["subscribetoasyncprogress(oid",{"_index":2617,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["subsect",{"_index":3866,"title":{},"body":{"license.html":{}}}],["substanti",{"_index":3677,"title":{},"body":{"license.html":{}}}],["subtrack",{"_index":1948,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.loaded[`${serviceidx",{"_index":1952,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx",{"_index":1958,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtracker.subs[`${serviceidx}`].unsubscrib",{"_index":1955,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["subtrackerfn",{"_index":1949,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["success",{"_index":463,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["success:boolean",{"_index":2622,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["successfulli",{"_index":4223,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["successob",{"_index":475,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["successobs.subscrib",{"_index":482,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["such",{"_index":3640,"title":{},"body":{"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["sue",{"_index":3996,"title":{},"body":{"license.html":{}}}],["suffic",{"_index":3902,"title":{},"body":{"license.html":{}}}],["suffix",{"_index":1660,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["suit",{"_index":4177,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["super",{"_index":422,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["super(http",{"_index":55,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["super(opt",{"_index":170,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["super.addelem(v",{"_index":1353,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["super.createformmodel",{"_index":3443,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["supplement",{"_index":3920,"title":{},"body":{"license.html":{}}}],["support",{"_index":1634,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/TranslationService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{},"modules.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["supportedlanguag",{"_index":3102,"title":{},"body":{"injectables/TranslationService.html":{}}}],["sure",{"_index":2496,"title":{},"body":{"classes/RbValidator.html":{},"license.html":{}}}],["surrend",{"_index":3637,"title":{},"body":{"license.html":{}}}],["surviv",{"_index":3942,"title":{},"body":{"license.html":{}}}],["sustain",{"_index":4049,"title":{},"body":{"license.html":{}}}],["svg",{"_index":4092,"title":{},"body":{"modules.html":{}}}],["swap(fromidx",{"_index":1295,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["switch",{"_index":1840,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["sync",{"_index":3530,"title":{},"body":{"dependencies.html":{}}}],["synchload",{"_index":1434,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["system",{"_index":3741,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["systemat",{"_index":3668,"title":{},"body":{"license.html":{}}}],["systemd",{"_index":4132,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["systemj",{"_index":3576,"title":{},"body":{"dependencies.html":{}}}],["t",{"_index":3074,"title":{},"body":{"injectables/TranslationService.html":{}}}],["t(key",{"_index":3078,"title":{},"body":{"injectables/TranslationService.html":{}}}],["tab",{"_index":288,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["tab.expandedchar",{"_index":418,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.id",{"_index":431,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab.label",{"_index":416,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab[\"expandedchar",{"_index":427,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tab['expandedchar",{"_index":425,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontain",{"_index":415,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabcontainer'},{'nam",{"_index":291,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["tabid",{"_index":430,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbutton",{"_index":340,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tabnavbuttoncompon",{"_index":287,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["taboraccordioncontain",{"_index":419,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainer,parameterretrieverfield",{"_index":339,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["taboraccordioncontainercompon",{"_index":290,"title":{"components/TabOrAccordionContainerComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["take",{"_index":1025,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["tangibl",{"_index":3883,"title":{},"body":{"license.html":{}}}],["target=\"#pdfhistorymod",{"_index":2351,"title":{},"body":{"components/PDFListComponent.html":{}}}],["targetact",{"_index":165,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["targetfld",{"_index":1594,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["targetprogress",{"_index":743,"title":{},"body":{"classes/AsynchField.html":{}}}],["targetstep",{"_index":2551,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkflowStepButtonComponent.html":{}}}],["targetv",{"_index":523,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["targetval.push(tv",{"_index":532,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["task",{"_index":574,"title":{},"body":{"classes/AsynchField.html":{}}}],["tasktyp",{"_index":591,"title":{},"body":{"classes/AsynchField.html":{}}}],["technolog",{"_index":3797,"title":{},"body":{"license.html":{}}}],["tell",{"_index":3729,"title":{},"body":{"license.html":{}}}],["temp",{"_index":1297,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["templat",{"_index":76,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["template(arg",{"_index":3055,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templatedata",{"_index":3337,"title":{},"body":{"injectables/UtilityService.html":{}}}],["templatedir",{"_index":4237,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["templatestr",{"_index":3031,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["templateurl",{"_index":687,"title":{},"body":{"classes/AsynchField.html":{},"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/SortComponent.html":{}}}],["term",{"_index":1098,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["termin",{"_index":3944,"title":{},"body":{"license.html":{}}}],["term}}).map((r",{"_index":1684,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["test",{"_index":3148,"title":{},"body":{"interfaces/UserForm.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["text",{"_index":251,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["text_",{"_index":4189,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_descript",{"_index":4195,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["text_titl",{"_index":4191,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textarea",{"_index":2266,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textareacompon",{"_index":292,"title":{"components/TextAreaComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["textblockcompon",{"_index":293,"title":{"components/TextBlockComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["textblockcomponent,markdowntextareacompon",{"_index":2984,"title":{},"body":{"modules/SharedModule.html":{}}}],["textbox",{"_index":1560,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["textfield",{"_index":1893,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield'},{'nam",{"_index":274,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["textfield.compon",{"_index":2950,"title":{},"body":{"modules/SharedModule.html":{}}}],["textfield.component.t",{"_index":2248,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["textfield.component.ts:168",{"_index":2881,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:171",{"_index":2879,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:174",{"_index":2878,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:178",{"_index":2880,"title":{},"body":{"components/RepeatableTextfieldComponent.html":{}}}],["textfield.component.ts:224",{"_index":3061,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:226",{"_index":3060,"title":{},"body":{"components/TextAreaComponent.html":{}}}],["textfield.component.ts:256",{"_index":2253,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfield.component.ts:258",{"_index":2251,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{}}}],["textfieldcompon",{"_index":295,"title":{"components/TextFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["that'",{"_index":3046,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["that.accessdeniedobjects.push(meta",{"_index":2790,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.changeref.detectchang",{"_index":428,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.failedobjects.push(meta",{"_index":2786,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:fals",{"_index":433,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.onaccordioncollapseexpand.emit({shown:tru",{"_index":429,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["that.field.relatedrecordid",{"_index":702,"title":{},"body":{"classes/AsynchField.html":{}}}],["that.field.setvalue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldmap._rootcomp.oid",{"_index":190,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.field.submit",{"_index":189,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.fieldmap._rootcomp.onsubmit().subscrib",{"_index":191,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["that.initialis",{"_index":2183,"title":{},"body":{"components/MapComponent.html":{}}}],["that.initmap(map",{"_index":2177,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layergeojson",{"_index":2195,"title":{},"body":{"components/MapComponent.html":{}}}],["that.layers.push(lay",{"_index":2194,"title":{},"body":{"components/MapComponent.html":{}}}],["that.map.fitbounds(that.drawnitems.getbound",{"_index":2228,"title":{},"body":{"components/MapComponent.html":{}}}],["that.relatedobjects.push(meta",{"_index":2792,"title":{},"body":{"components/RelatedObjectDataComponent.html":{}}}],["that.setvalue(that.layergeojson",{"_index":2197,"title":{},"body":{"components/MapComponent.html":{}}}],["that.startlisten",{"_index":704,"title":{},"body":{"classes/AsynchField.html":{}}}],["that.tabid",{"_index":2176,"title":{},"body":{"components/MapComponent.html":{}}}],["that2",{"_index":2199,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers.push(lay",{"_index":2207,"title":{},"body":{"components/MapComponent.html":{}}}],["that2.layers[layerindex",{"_index":2208,"title":{},"body":{"components/MapComponent.html":{}}}],["that[key",{"_index":1281,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["then((r",{"_index":61,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{}}}],["then((res:ani",{"_index":959,"title":{},"body":{"injectables/DashboardService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["then((res:loginresult",{"_index":2001,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["then(funct",{"_index":187,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["then(this.extractdata",{"_index":1148,"title":{},"body":{"injectables/EmailNotificationService.html":{},"injectables/UserSimpleService.html":{}}}],["there'",{"_index":3263,"title":{},"body":{"injectables/UtilityService.html":{}}}],["therefor",{"_index":3105,"title":{},"body":{"injectables/TranslationService.html":{},"license.html":{},"additional-documentation/configuration-guide.html":{}}}],["thereof",{"_index":128,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["thi",{"_index":1063,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["thing",{"_index":3633,"title":{},"body":{"license.html":{}}}],["third",{"_index":3818,"title":{},"body":{"license.html":{}}}],["this.accessdeniedobject",{"_index":2313,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.activerefin",{"_index":2641,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activerefiners.push(refin",{"_index":2675,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.activevalu",{"_index":2636,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(config",{"_index":2691,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addactiverefiner(refinerconfig",{"_index":2659,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.addbuttonclass",{"_index":1201,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontext",{"_index":1191,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addbuttontextclass",{"_index":1199,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addelem(entri",{"_index":1317,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.addrendercompleteelement(form.field",{"_index":2546,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.alwaysact",{"_index":2633,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.app['_injector",{"_index":1051,"title":{},"body":{"components/DmpFieldComponent.html":{},"injectables/FieldControlMetaService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.applink",{"_index":3416,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.applyeditnotesbuttontext",{"_index":2429,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.arrayproperti",{"_index":1687,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.baseurl",{"_index":807,"title":{},"body":{"classes/BaseService.html":{}}}],["this.baseurl}/${this.config.branding}/${this.config.port",{"_index":810,"title":{},"body":{"classes/BaseService.html":{}}}],["this.basicsearch",{"_index":2644,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl",{"_index":809,"title":{},"body":{"classes/BaseService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.brandingandportalurl}/${this.config.collectionrooturi}/${collectionid}/?search",{"_index":1729,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.brandingandportalurl}/${this.config.mintrooturi}/${source}/?search",{"_index":1734,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.brandingandportalurl}/${this.config.userrooturi}/?source=${searchsource}&nam",{"_index":1731,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.brandingandportalurl}/${this.config.vocabrooturl}/${vocabid",{"_index":1723,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.brandingandportalurl}/admin/getreportresults?name=`+name+`&start=`+start+`&rows=`+row",{"_index":2910,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.brandingandportalurl}/dashboard/${rectyp",{"_index":2563,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/external/vocab/${provid",{"_index":1736,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.brandingandportalurl}/listrecords?recordtype=${recordtype}&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":920,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.brandingandportalurl}/record/form/${recordtype}?edit=${editable}&ts=${t",{"_index":2532,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.brandingandportalurl}/record/form/auto/${oid}?edit=${editable}&ts=${t",{"_index":2531,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.canceleditnotesbuttontext",{"_index":2427,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.cansort",{"_index":1348,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.changeref.detectchang",{"_index":501,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.checkifhasload",{"_index":1493,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["this.class",{"_index":1871,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.classes[f.class",{"_index":1798,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp",{"_index":1815,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].comp[0",{"_index":1814,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.class].meta(f.definit",{"_index":1800,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.classes[f.clname].lookupservic",{"_index":1829,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.clear",{"_index":2642,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.clnam",{"_index":1338,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.col",{"_index":2264,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.column",{"_index":2315,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.columntitl",{"_index":2817,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.completerservic",{"_index":1618,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.completerservice.local(this.sourcedata",{"_index":1627,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.completerservice.remote(url",{"_index":1641,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.completionlabel",{"_index":662,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.completionratetyp",{"_index":638,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.compon",{"_index":1614,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.component.ngcomplet",{"_index":1615,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.component.ngcompleter.ctrinput.nativeelement.valu",{"_index":1616,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.componentfactoryresolv",{"_index":1045,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.field.compclass",{"_index":1048,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.config",{"_index":806,"title":{},"body":{"classes/BaseService.html":{},"injectables/ConfigService.html":{}}}],["this.config.baseurl",{"_index":808,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.brand",{"_index":3222,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config.csrftoken",{"_index":826,"title":{},"body":{"classes/BaseService.html":{}}}],["this.config.maxsearchrowsperpag",{"_index":957,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.maxtransferrowsperpag",{"_index":914,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.config.port",{"_index":3224,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.config['csrftoken",{"_index":853,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.configservic",{"_index":802,"title":{},"body":{"classes/BaseService.html":{},"injectables/FieldControlMetaService.html":{}}}],["this.configservice.getconfig((config:ani",{"_index":805,"title":{},"body":{"classes/BaseService.html":{}}}],["this.controltyp",{"_index":1559,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.converttoitem(mintdataitem",{"_index":1708,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.createnewelem(basefield",{"_index":1241,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.createnewelem(this.fields[0",{"_index":1284,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.criteria",{"_index":679,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.csrftoken",{"_index":848,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.cssclass",{"_index":2256,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.dashboardservic",{"_index":2820,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dashboardservice.getallrecordscanedit(this.recordtype,'').then((draftplan",{"_index":2822,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.dataservic",{"_index":1626,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.datecompletedlabel",{"_index":651,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.dateformat",{"_index":669,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.datepickeropt",{"_index":1479,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.datestartedlabel",{"_index":647,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.defaultdrawopt",{"_index":2135,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultleafletopt",{"_index":2141,"title":{},"body":{"components/MapComponent.html":{}}}],["this.defaultvalu",{"_index":2259,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.delegateerrorhandl",{"_index":1214,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.dis",{"_index":1024,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.disabledel",{"_index":1007,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.disableeditafterselect",{"_index":1575,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.disableinput",{"_index":1757,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.doact",{"_index":469,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.document.location.href",{"_index":2005,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.drawlay",{"_index":2221,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitem",{"_index":2118,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawnitems.clearlay",{"_index":2214,"title":{},"body":{"components/MapComponent.html":{}}}],["this.drawopt",{"_index":2155,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editingnot",{"_index":2469,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editingnotes.not",{"_index":2475,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editmod",{"_index":2171,"title":{},"body":{"components/MapComponent.html":{}}}],["this.editnotesbuttontext",{"_index":2423,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotescssclass",{"_index":2432,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.editnotestitl",{"_index":2425,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.emitconfig",{"_index":845,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.emitinit",{"_index":812,"title":{},"body":{"classes/BaseService.html":{}}}],["this.expandcollapseal",{"_index":437,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.extractdata(r",{"_index":62,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/ConfigService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.failedobject",{"_index":2314,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.fb.group",{"_index":1989,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.fcmetaservice.getfieldsmeta(fieldsarr",{"_index":1885,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getfieldsmeta(form.field",{"_index":2548,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.fcmetaservice.getlookupdata(field",{"_index":1886,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.fcmetaservice.getlookupdata(form.fieldsmeta).flatmap((fields:ani",{"_index":2520,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.field",{"_index":356,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.addelem",{"_index":1331,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.additionaldata",{"_index":480,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.allexpand",{"_index":436,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.applink}${this.field.workspaceapp.name}/edit?rdmp=${this.field.rdmp",{"_index":3468,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["this.field.closeonsav",{"_index":484,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.compon",{"_index":1741,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.confirmationmessag",{"_index":467,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.controltyp",{"_index":398,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.currenttab",{"_index":500,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.disableeditafterselect",{"_index":1752,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.editmod",{"_index":544,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.expandaccordionsonopen",{"_index":435,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.fieldmap._rootcomp.getsubscription('recordcr",{"_index":697,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.fieldmap._rootcomp.oid",{"_index":186,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{}}}],["this.field.fieldmap._rootcomp.subscribe('recordcr",{"_index":700,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.fields.length",{"_index":1391,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].basemargintop",{"_index":1381,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].componentreactors.push(thi",{"_index":1382,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0].margintop",{"_index":1380,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[0]['showhead",{"_index":1379,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[i].margintop",{"_index":1400,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].basemargintop",{"_index":1402,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.fields[newidx].margintop",{"_index":1401,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.filteredplan",{"_index":2850,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.filteredplans.length",{"_index":2851,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.formatvalue(this.getformcontrol().valu",{"_index":550,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formatvaluefordisplay",{"_index":2271,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.formmodel",{"_index":373,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.haserror('requir",{"_index":375,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.formmodel.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1769,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.formmodel.touch",{"_index":374,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.getcontrol(nam",{"_index":358,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettab",{"_index":495,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettabid(step",{"_index":507,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.gettitle(this.field.valu",{"_index":1771,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.groupclass",{"_index":370,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.init",{"_index":3464,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["this.field.initmap(this.field.map",{"_index":2245,"title":{},"body":{"components/MapComponent.html":{}}}],["this.field.isdelet",{"_index":476,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.isdisabledfn",{"_index":490,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.label",{"_index":546,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.latestpdf",{"_index":2332,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.listentyp",{"_index":718,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.nam",{"_index":354,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onchange.updateconf",{"_index":534,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.onitemselect.emit(selected['originalobject",{"_index":1753,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.options['disabledexpress",{"_index":1011,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.field.pdfattachments.push(attach",{"_index":2338,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.pdfattachments.sort(funct",{"_index":2341,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.progressarr",{"_index":733,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.progressarr.push(progress",{"_index":737,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.publishparametervalue(paramvalu",{"_index":557,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.recordservice.executeaction(this.field.targetaction,{oid",{"_index":185,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.recordsservice.getasyncprogress(fq).then(progressarr",{"_index":712,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.recordsservice.getattachments(oid",{"_index":2325,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${loc",{"_index":2468,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.recordsservice.getbrandingandportalurl}/record/${oid}/datastream?datastreamid=${attachment.label",{"_index":2349,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(`${this.field.relatedrecordid",{"_index":725,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(progress.id",{"_index":719,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.recordsservice.subscribetoasyncprogress(this.field.relatedrecordid",{"_index":724,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.redirectloc",{"_index":486,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.registerev",{"_index":3465,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["this.field.relatedrecordid",{"_index":692,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.removeelem(i",{"_index":1333,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.field.requir",{"_index":378,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.restricttoselect",{"_index":1768,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.searchfilternam",{"_index":2848,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.field.setfieldmapentry(this.fieldmap",{"_index":1067,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["this.field.setvalue(nul",{"_index":1762,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.setvalue(this.field.getvalue(selected.titl",{"_index":1755,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.setvalue(this.field.getvalue(selected['originalobject",{"_index":1756,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.setvalue(this.field.getvalue(this.field.searchstr",{"_index":1766,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.field.submit",{"_index":184,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.field.swap(i",{"_index":1399,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.field.targetstep",{"_index":478,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.field.tasktyp",{"_index":726,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.field.valu",{"_index":2466,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.field.value[this.editingnotes.index].not",{"_index":2474,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.fieldanchor",{"_index":1013,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.clear",{"_index":1046,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldanchor.createcomponent(compfactori",{"_index":1050,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap",{"_index":355,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp",{"_index":3392,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.delet",{"_index":477,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.field",{"_index":2179,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.getfieldwithid(this.maintabid",{"_index":2178,"title":{},"body":{"components/MapComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(focustabid",{"_index":505,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.gototab(tabid",{"_index":508,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.oid",{"_index":2322,"title":{},"body":{"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit().subscribe(respons",{"_index":3467,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(nul",{"_index":481,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.onsubmit(this.field.targetstep",{"_index":479,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp.recordcreated.subscribe(this.setoid.bind(thi",{"_index":3428,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.recordsaved.subscribe(this.setoid.bind(thi",{"_index":3429,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(nul",{"_index":2834,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(record.oid",{"_index":2830,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.setrelatedrecordid(this.value.oid",{"_index":2836,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.fieldmap._rootcomp.stepto(this.field.targetstep",{"_index":3382,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.isdisabledfn",{"_index":491,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap._rootcomp[this.field.onclick_rootfn",{"_index":489,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.fieldmap[this.field.name].inst",{"_index":1069,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.fieldnam",{"_index":1569,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.fields.length",{"_index":1325,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields.push(newelem",{"_index":1287,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0",{"_index":1233,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].createformmodel",{"_index":1223,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].getgroup(grp",{"_index":1222,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].isgroup",{"_index":1218,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setmissingfields(v",{"_index":1352,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[0].setvalue(nul",{"_index":1324,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[fromidx",{"_index":1299,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(select",{"_index":1341,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].component.onselect(valu",{"_index":1351,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[index].setvalue(valu",{"_index":1305,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.fields[toidx",{"_index":1298,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.filteredplan",{"_index":2839,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.flattenfields(f.field",{"_index":1823,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.flattenfields(field",{"_index":1825,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.forceclon",{"_index":1197,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.form",{"_index":1008,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/LocalAuthComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.control",{"_index":1009,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.controls['username'].haserror('requir",{"_index":2009,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.controls[this.field.name].valid",{"_index":1010,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.form.statu",{"_index":1994,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.value.password",{"_index":2000,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.form.valuechanges.subscribe(data",{"_index":1992,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.formatdates(this.extractdata(r",{"_index":930,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formatdates(this.extractdata(res))a",{"_index":916,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.formmodel",{"_index":1227,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.formmodel.at(fromidx",{"_index":1302,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.at(toidx",{"_index":1300,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.controls.length",{"_index":1316,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.markasdirti",{"_index":2441,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.formmodel.markastouch",{"_index":182,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.patchvalue(this.layergeojson",{"_index":2223,"title":{},"body":{"components/MapComponent.html":{}}}],["this.formmodel.patchvalue(valu",{"_index":178,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.formmodel.push(newformmodel",{"_index":1290,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.removeat(index",{"_index":1294,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(fromidx",{"_index":1303,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setcontrol(toidx",{"_index":1301,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.formmodel.setvalidators([validators.requir",{"_index":1607,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.formmodel.setvalue(nul",{"_index":1612,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.formmodel.setvalue(valu",{"_index":1681,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.generatetemplatestring(templatestr",{"_index":3054,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["this.getclonecustom",{"_index":1266,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.getclonecustomizer(f",{"_index":1274,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.geterror",{"_index":1996,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.getfieldsmeta(f.definition.field",{"_index":1819,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getfieldvaluepair(fldnam",{"_index":1673,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.getformcontrol",{"_index":408,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformcontrol().setvalue(targetv",{"_index":533,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.getformfields(recordtyp",{"_index":2536,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getformfieldsmeta(recordtyp",{"_index":2518,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getfrominjector(dashboardservic",{"_index":2821,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.getfrominjector(recordsservic",{"_index":174,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/AsynchField.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.getfrominjector(workspacetypeservic",{"_index":3402,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.getinjectedservice('configservice').config",{"_index":1804,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice('utilityservic",{"_index":1802,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getinjectedservice(lookupservicenam",{"_index":1831,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.getoptions(headersobj",{"_index":827,"title":{},"body":{"classes/BaseService.html":{}}}],["this.getoptionscli",{"_index":811,"title":{},"body":{"classes/BaseService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/UserSimpleService.html":{}}}],["this.getoptionsclient()).topromis",{"_index":2566,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.getrefinerconfig(nam",{"_index":2689,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettargetstepparam(targetstep",{"_index":2553,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.gettitle(data",{"_index":1625,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.gettitle(this.valu",{"_index":1603,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.gettitle(valu",{"_index":1682,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.gettranslated(`${this.options.statuslabel",{"_index":684,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(option['label",{"_index":3414,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['applyeditnotesbuttontext",{"_index":2430,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['canceleditnotesbuttontext",{"_index":2428,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['completionlabel",{"_index":664,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['datecompletedlabel",{"_index":653,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['datestartedlabel",{"_index":649,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['editnotesbuttontext",{"_index":2424,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['editnotestitl",{"_index":2426,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['lastupdatelabel",{"_index":667,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['locationhead",{"_index":2437,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['messagelabel",{"_index":660,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['namelabel",{"_index":643,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['noteshead",{"_index":2439,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.gettranslated(options['open",{"_index":3404,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['savefirst",{"_index":3407,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.gettranslated(options['startedbylabel",{"_index":657,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['statuslabel",{"_index":646,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.gettranslated(options['typehead",{"_index":2435,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.geturlparameter('focustabid",{"_index":503,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.geturlparameter(this.field.parameternam",{"_index":555,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.googlehybrid",{"_index":2146,"title":{},"body":{"components/MapComponent.html":{}}}],["this.googlemap",{"_index":2138,"title":{},"body":{"components/MapComponent.html":{}}}],["this.groupnam",{"_index":1248,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasclearbutton",{"_index":1478,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.hasgroup",{"_index":1190,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.hasload",{"_index":1935,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.haslookup",{"_index":1556,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.hasrequirederror",{"_index":371,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.hasvalu",{"_index":2763,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.helpshow",{"_index":376,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.hideconfirmdlg",{"_index":487,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.http",{"_index":801,"title":{},"body":{"classes/BaseService.html":{}}}],["this.http.delete(`${this.brandingandportalurl}/record/delete/${oid",{"_index":2621,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${searchurl}`).map((r",{"_index":1705,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.http.get(`${this.baseurl}/user/info",{"_index":3219,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/getreport?name=`+nam",{"_index":2906,"title":{},"body":{"injectables/ReportService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/roles/get",{"_index":2922,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/admin/users/get",{"_index":3228,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/ands/vocab/resourcedetails?uri=${uri}&vocab=${vocab",{"_index":58,"title":{},"body":{"injectables/ANDSService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/asynch?fq=${fq",{"_index":2616,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?${recordtype}${packagetype}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":944,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&editonly=true&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":915,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?recordtype=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":929,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/listrecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix",{"_index":927,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/${oid}/attach",{"_index":2565,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/metadata/`+oid",{"_index":2611,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/search/${params.recordtype}/?searchstr=${params.basicsearch}${refinedsearchstr",{"_index":2603,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/typ",{"_index":2607,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/type/${nam",{"_index":2605,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/record/wfsteps/${nam",{"_index":2609,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/searchplans?start=${start}&rows=${rows}&query=${basicsearch}&facets=${facets}&ts=${moment().unix",{"_index":958,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.http.get(`${this.brandingandportalurl}/transferconfig/${recordtyp",{"_index":2578,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.get(`${this.brandingandportalurl}/workspaces/typ",{"_index":3496,"title":{},"body":{"injectables/WorkspaceTypeService.html":{}}}],["this.http.get(`/csrftoken`).mergemap((csrfres:ani",{"_index":847,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(`/dynamic/apiclientconfig?v=${new",{"_index":850,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.http.get(url",{"_index":923,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.http.post(`${this.baseurl}/user/login_loc",{"_index":3225,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/action/${act",{"_index":2614,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/roles/us",{"_index":2923,"title":{},"body":{"injectables/RolesService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/genkey",{"_index":3232,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/newus",{"_index":3231,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/revokekey",{"_index":3233,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/admin/users/upd",{"_index":3229,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/api/sendnotif",{"_index":1147,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/editors/modifi",{"_index":2568,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/responsibility/upd",{"_index":2574,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/record/workflow/step/${targetstep}/${oid",{"_index":2561,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/recordmeta/${recordtyp",{"_index":2552,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/genkey",{"_index":3235,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/revokekey",{"_index":3236,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(`${this.brandingandportalurl}/user/upd",{"_index":3234,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["this.http.post(this.url,{options:{queri",{"_index":1683,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.http.put(`${this.brandingandportalurl}/recordmeta/${oid",{"_index":2556,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.importdatastr",{"_index":2229,"title":{},"body":{"components/MapComponent.html":{}}}],["this.importfail",{"_index":2230,"title":{},"body":{"components/MapComponent.html":{}}}],["this.index",{"_index":364,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.initconfig",{"_index":843,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.initialvalu",{"_index":1604,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.initlookupdata",{"_index":1610,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.initsubject",{"_index":803,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.next(thi",{"_index":815,"title":{},"body":{"classes/BaseService.html":{}}}],["this.initsubject.subscribe(handl",{"_index":814,"title":{},"body":{"classes/BaseService.html":{}}}],["this.inittransl",{"_index":3083,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.inittranslator(translationservic",{"_index":1484,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["this.injector",{"_index":1260,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.injector.get(token",{"_index":380,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.isembed",{"_index":1059,"title":{},"body":{"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.islisten",{"_index":707,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.isload",{"_index":1931,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.islogindis",{"_index":1993,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lastupdatelabel",{"_index":665,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.lay",{"_index":2217,"title":{},"body":{"components/MapComponent.html":{}}}],["this.layergeojson",{"_index":2161,"title":{},"body":{"components/MapComponent.html":{}}}],["this.leafletopt",{"_index":2148,"title":{},"body":{"components/MapComponent.html":{}}}],["this.lin",{"_index":2269,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.listentyp",{"_index":673,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.load",{"_index":1744,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.local",{"_index":690,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.locationhead",{"_index":2436,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.locationservice.prepareexternalurl(`export/record/download/csv?before=${before}&after=${after}&rectype=${this.record_typ",{"_index":1500,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.loginmessag",{"_index":2007,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.lookupservic",{"_index":1619,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.lookupservice.getcollectionrooturl(this.vocabid",{"_index":1629,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.lookupservice.getexternalserviceurl(this.provid",{"_index":1647,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.lookupservice.getmintrooturl(this.vocabid",{"_index":1643,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.lookupservice.getuserlookupurl",{"_index":1630,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.lookupservice.http",{"_index":1645,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.maintabid",{"_index":2163,"title":{},"body":{"components/MapComponent.html":{}}}],["this.map",{"_index":2166,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterdrawopt",{"_index":2158,"title":{},"body":{"components/MapComponent.html":{}}}],["this.masterleafletopt",{"_index":2154,"title":{},"body":{"components/MapComponent.html":{}}}],["this.messagelabel",{"_index":658,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.modaft",{"_index":1498,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.modbefor",{"_index":1494,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.movedownbuttonclass",{"_index":1212,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.moveupbuttonclass",{"_index":1208,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.nam",{"_index":353,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.namelabel",{"_index":641,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.newloc",{"_index":2444,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.next(match",{"_index":1690,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.noteshead",{"_index":2438,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.onapplyfilter.emit(this.refinerconfig",{"_index":2765,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.onfilterchang",{"_index":2847,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.onremovebtnclick.emit([ev",{"_index":1327,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.onstart.bind(thi",{"_index":728,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.onstop.bind(thi",{"_index":730,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.onupdate.bind(thi",{"_index":732,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.onvalueupdate.emit(data",{"_index":2711,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.open",{"_index":3403,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.opt",{"_index":59,"title":{},"body":{"injectables/ANDSService.html":{},"classes/BaseService.html":{},"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{}}}],["this.parameternam",{"_index":2706,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.parentid",{"_index":1057,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["this.pdfattach",{"_index":2320,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.placehold",{"_index":1573,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.plan",{"_index":2823,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.populateformgroup(field",{"_index":1873,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.populateformgroup(field.field",{"_index":1883,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.provid",{"_index":1585,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.rdmp",{"_index":3409,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.record_typ",{"_index":1491,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordservic",{"_index":173,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.recordsservic",{"_index":683,"title":{},"body":{"classes/AsynchField.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.recordsservice.getalltypes().then((typeconf",{"_index":1486,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(data",{"_index":2709,"title":{},"body":{"components/RecordMetadataRetrieverComponent.html":{}}}],["this.recordsservice.getrecordmeta(oid).then(record",{"_index":2454,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.recordtyp",{"_index":2640,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.rectypenam",{"_index":1487,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames.push(typeconf.nam",{"_index":1490,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.rectypenames[0",{"_index":1492,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.refinerconfig",{"_index":2653,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.refinerconfig.activevalu",{"_index":2764,"title":{},"body":{"components/RecordSearchRefinerComponent.html":{}}}],["this.registermapeventhandlers(map",{"_index":2167,"title":{},"body":{"components/MapComponent.html":{}}}],["this.relatedobject",{"_index":2312,"title":{},"body":{"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["this.relatedobjectselected.emit(record.oid",{"_index":2832,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.relatedrecordid",{"_index":635,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.removebuttonclass",{"_index":1206,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontext",{"_index":1193,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removebuttontextclass",{"_index":1204,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.removeelem(idx",{"_index":1321,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.requir",{"_index":1228,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.resetselectorevent.emit",{"_index":2835,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.restricttoselect",{"_index":1580,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.resultarrayproperti",{"_index":1587,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.row",{"_index":2261,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.savefirst",{"_index":3406,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.searchfield",{"_index":1565,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.searchfilternam",{"_index":2846,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setemptyvalu",{"_index":1609,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.setloading(fals",{"_index":1936,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.setupeventhandlers(fieldmap",{"_index":1874,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["this.setvalue(this.layergeojson",{"_index":2168,"title":{},"body":{"components/MapComponent.html":{}}}],["this.setvalue(this.valu",{"_index":2321,"title":{},"body":{"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalue({oid",{"_index":2826,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.setvalueatelem(idx",{"_index":1318,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.showconfirmdlg",{"_index":468,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["this.skipclon",{"_index":1195,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.sort",{"_index":3019,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sortchanged.emit({title:this.titl",{"_index":3022,"title":{},"body":{"components/SortComponent.html":{}}}],["this.sourcetyp",{"_index":1571,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.startedbylabel",{"_index":655,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.startlisten",{"_index":705,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.startswith",{"_index":2317,"title":{},"body":{"components/PDFListComponent.html":{}}}],["this.statuslabel",{"_index":644,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.storelabelonli",{"_index":1583,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.stringlabeltofield",{"_index":1577,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.subject",{"_index":841,"title":{},"body":{"injectables/ConfigService.html":{},"injectables/TranslationService.html":{}}}],["this.subjects['get",{"_index":842,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].next(this.config",{"_index":846,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['get'].subscribe(handl",{"_index":844,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.subjects['init",{"_index":3084,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].next(thi",{"_index":3120,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.subjects['init'].subscribe(handl",{"_index":3121,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.synchload",{"_index":1932,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.tabid",{"_index":2159,"title":{},"body":{"components/MapComponent.html":{}}}],["this.targetact",{"_index":171,"title":{},"body":{"components/ActionButtonComponent.html":{}}}],["this.targetstep",{"_index":3378,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["this.tasktyp",{"_index":677,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.timepickeropt",{"_index":1477,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["this.titl",{"_index":2627,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.titlefieldarr",{"_index":1563,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefieldarr.length",{"_index":1639,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefieldarr[0",{"_index":1640,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefielddelim",{"_index":1567,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefielddelim[idx",{"_index":1662,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefielddelim}${data[titlefld",{"_index":1716,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefielddelim}${titlev",{"_index":1655,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.titlefieldnam",{"_index":1561,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.translatei18next.init",{"_index":3085,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatei18next.translate(key",{"_index":3122,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translationservic",{"_index":1842,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"classes/LoadableComponent.html":{}}}],["this.translationservice.t(key",{"_index":1944,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["this.translator.t('plan",{"_index":953,"title":{},"body":{"injectables/DashboardService.html":{}}}],["this.translatorload",{"_index":3119,"title":{},"body":{"injectables/TranslationService.html":{}}}],["this.translatorreadi",{"_index":1934,"title":{},"body":{"classes/LoadableComponent.html":{},"injectables/TranslationService.html":{}}}],["this.typ",{"_index":2254,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.typehead",{"_index":2434,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.typelabel",{"_index":2631,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["this.updateprogress(progress",{"_index":740,"title":{},"body":{"classes/AsynchField.html":{}}}],["this.url}${searchstr",{"_index":1704,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.userservice.loginlocal(this.form.value.usernam",{"_index":1999,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["this.utilityservic",{"_index":1843,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.valu",{"_index":175,"title":{},"body":{"components/ActionButtonComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.value.length",{"_index":1226,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["this.value.push(newloc",{"_index":2446,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.push(this.newloc",{"_index":2443,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["this.value.split(\"\\n",{"_index":2270,"title":{},"body":{"components/MarkdownTextAreaComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/TextAreaComponent.html":{},"components/TextFieldComponent.html":{}}}],["this.value=valu",{"_index":2837,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["this.vocabfieldlookupservic",{"_index":1841,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["this.vocabid",{"_index":1557,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["this.workspaceapp",{"_index":3411,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservic",{"_index":3401,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getbrand",{"_index":3417,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this.workspacetypeservice.getworkspacetypes().then(respons",{"_index":3418,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["this[lookupservicenam",{"_index":1835,"title":{},"body":{"injectables/FieldControlMetaService.html":{}}}],["thom",{"_index":1142,"title":{},"body":{"injectables/EmailNotificationService.html":{}}}],["those",{"_index":2656,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["though",{"_index":3922,"title":{},"body":{"license.html":{}}}],["threaten",{"_index":3684,"title":{},"body":{"license.html":{}}}],["three",{"_index":3858,"title":{},"body":{"license.html":{}}}],["through",{"_index":2654,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["throw",{"_index":2187,"title":{},"body":{"components/MapComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/WorkspaceFieldComponent.html":{}}}],["thu",{"_index":3785,"title":{},"body":{"license.html":{}}}],["tile",{"_index":2068,"title":{},"body":{"components/MapComponent.html":{}}}],["time",{"_index":466,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["time'},{'nam",{"_index":221,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["timepickeropt",{"_index":1422,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["titl",{"_index":954,"title":{},"body":{"injectables/DashboardService.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/MintLookupDataService.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableGroupComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"components/SortComponent.html":{},"injectables/VocabFieldLookupService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["title:record.titl",{"_index":2828,"title":{},"body":{"components/RelatedObjectSelectorComponent.html":{}}}],["titlefieldarr",{"_index":1522,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["titlefielddelim",{"_index":1523,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["titlefieldnam",{"_index":1545,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["titlefld",{"_index":1651,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["titlev",{"_index":1652,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["titleval}${delimpair.suffix",{"_index":1717,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["title}${_.isempty(titl",{"_index":1654,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["todelidx",{"_index":1315,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["todo",{"_index":1635,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["toformgroup",{"_index":1851,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["toformgroup(field",{"_index":1865,"title":{},"body":{"injectables/FieldControlService.html":{}}}],["togeth",{"_index":1888,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["toggl",{"_index":148,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["toggle'},{'nam",{"_index":297,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["toggle=\"mod",{"_index":2350,"title":{},"body":{"components/PDFListComponent.html":{}}}],["toggle=\"tab\"]').on('shown.bs.tab",{"_index":497,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["togglecompon",{"_index":296,"title":{"components/ToggleComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["togglehelp",{"_index":96,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["toidx",{"_index":1296,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["token",{"_index":133,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"classes/User.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["tool",{"_index":2543,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"license.html":{}}}],["tooltipmodul",{"_index":3017,"title":{},"body":{"components/SortComponent.html":{}}}],["tooltipmodule.forroot",{"_index":882,"title":{},"body":{"modules/DashboardModule.html":{},"modules/ReportModule.html":{},"modules/WorkspaceListModule.html":{}}}],["top",{"_index":1360,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["topright",{"_index":2121,"title":{},"body":{"components/MapComponent.html":{}}}],["topromis",{"_index":60,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/EmailNotificationService.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/ReportService.html":{},"injectables/RolesService.html":{},"injectables/UserSimpleService.html":{},"injectables/WorkspaceTypeService.html":{}}}],["totalitem",{"_index":2370,"title":{},"body":{"classes/Plan.html":{},"classes/PlanTable.html":{},"classes/Report.html":{},"classes/ReportResults.html":{}}}],["trade",{"_index":3936,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":3935,"title":{},"body":{"license.html":{}}}],["transact",{"_index":3906,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":299,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transfer_owner.compon",{"_index":3071,"title":{},"body":{"modules/TransferOwnerModule.html":{}}}],["transferownercompon",{"_index":298,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"modules/TransferOwnerModule.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["transferownermodul",{"_index":3065,"title":{"modules/TransferOwnerModule.html":{}},"body":{"modules/TransferOwnerModule.html":{},"modules.html":{},"overview.html":{}}}],["transferownerto",{"_index":4256,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["transform",{"_index":2281,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{},"pipes/StringTemplatePipe.html":{}}}],["transform(templatestr",{"_index":3029,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(templatestring:str",{"_index":3052,"title":{},"body":{"pipes/StringTemplatePipe.html":{}}}],["transform(valu",{"_index":2282,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transform(values:str",{"_index":2286,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["transit",{"_index":4183,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translat",{"_index":14,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"injectables/TranslationService.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["translatei18next",{"_index":3076,"title":{},"body":{"injectables/TranslationService.html":{}}}],["translatei18nextmodul",{"_index":2963,"title":{},"body":{"modules/SharedModule.html":{}}}],["translationservic",{"_index":15,"title":{"injectables/TranslationService.html":{}},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/TranslationService.html":{},"overview.html":{}}}],["translationservice.isready((tservice:ani",{"_index":1933,"title":{},"body":{"classes/LoadableComponent.html":{}}}],["translationservice.isready(tservic",{"_index":1485,"title":{},"body":{"components/ExportFormComponent.html":{},"components/LocalAuthComponent.html":{}}}],["translationservice:translationservic",{"_index":1476,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["translator:translationservic",{"_index":54,"title":{},"body":{"injectables/ANDSService.html":{},"injectables/DashboardService.html":{},"injectables/ReportService.html":{}}}],["translatorload",{"_index":1435,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{}}}],["translatorreadi",{"_index":1425,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"injectables/TranslationService.html":{}}}],["transmiss",{"_index":3877,"title":{},"body":{"license.html":{}}}],["treat",{"_index":3921,"title":{},"body":{"license.html":{}}}],["treati",{"_index":3804,"title":{},"body":{"license.html":{}}}],["tree",{"_index":68,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["treemodul",{"_index":2974,"title":{},"body":{"modules/SharedModule.html":{}}}],["treenod",{"_index":3130,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["treenodecheckboxcompon",{"_index":301,"title":{"components/TreeNodeCheckboxComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["tri",{"_index":2185,"title":{},"body":{"components/MapComponent.html":{}}}],["trigger",{"_index":4216,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["triggervalid",{"_index":1306,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["true",{"_index":180,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["ts",{"_index":2529,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"injectables/TranslationService.html":{},"dependencies.html":{}}}],["tu",{"_index":3582,"title":{},"body":{"dependencies.html":{}}}],["tval",{"_index":527,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["tval}${this.field.onchange.control.delim}`}${v[subfield",{"_index":531,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["two",{"_index":3647,"title":{},"body":{"license.html":{}}}],["type",{"_index":21,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"modules/DashboardModule.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/Plan.html":{},"classes/PlanTable.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Report.html":{},"classes/ReportResults.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["type:\"url",{"_index":2405,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["typeahead",{"_index":1638,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["typeconf",{"_index":1489,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["typehead",{"_index":2420,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["typelabel",{"_index":2624,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typelabelwher",{"_index":4184,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["typeof",{"_index":2240,"title":{},"body":{"components/MapComponent.html":{},"components/RelatedObjectDataComponent.html":{}}}],["types/puppet",{"_index":3500,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":3585,"title":{},"body":{"dependencies.html":{}}}],["typic",{"_index":3894,"title":{},"body":{"license.html":{}}}],["unaccept",{"_index":3674,"title":{},"body":{"license.html":{}}}],["undefin",{"_index":637,"title":{},"body":{"classes/AsynchField.html":{},"injectables/DashboardService.html":{},"components/DmpFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"interfaces/UserForm.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["under",{"_index":1097,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["understand",{"_index":4175,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["uniqu",{"_index":4304,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["unless",{"_index":3898,"title":{},"body":{"license.html":{}}}],["unlimit",{"_index":3771,"title":{},"body":{"license.html":{}}}],["unmodifi",{"_index":3709,"title":{},"body":{"license.html":{}}}],["unnecessari",{"_index":3792,"title":{},"body":{"license.html":{}}}],["unpack",{"_index":3919,"title":{},"body":{"license.html":{}}}],["unqiu",{"_index":2173,"title":{},"body":{"components/MapComponent.html":{}}}],["until",{"_index":3951,"title":{},"body":{"license.html":{}}}],["up",{"_index":1210,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["updat",{"_index":452,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["update(oid",{"_index":2555,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatedata",{"_index":2573,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatedata:updatedata",{"_index":2576,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatemeta",{"_index":4275,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["updateprogress(progress",{"_index":742,"title":{},"body":{"classes/AsynchField.html":{}}}],["updateresponsibilities(record",{"_index":2572,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["updatetitl",{"_index":1613,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["updateuserdetail",{"_index":3198,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserdetails(userid",{"_index":3213,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofil",{"_index":3199,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserprofile(detail",{"_index":3215,"title":{},"body":{"injectables/UserSimpleService.html":{}}}],["updateuserrol",{"_index":2918,"title":{},"body":{"injectables/RolesService.html":{}}}],["updateuserroles(userid",{"_index":2919,"title":{},"body":{"injectables/RolesService.html":{}}}],["uppercas",{"_index":3459,"title":{},"body":{"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["uppi",{"_index":2403,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["uppy/cor",{"_index":3502,"title":{},"body":{"dependencies.html":{}}}],["uppy/dashboard",{"_index":3504,"title":{},"body":{"dependencies.html":{}}}],["uppy/tu",{"_index":3505,"title":{},"body":{"dependencies.html":{}}}],["uri",{"_index":27,"title":{},"body":{"injectables/ANDSService.html":{}}}],["url",{"_index":919,"title":{},"body":{"injectables/DashboardService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RelatedObjectDataComponent.html":{},"components/RepeatableGroupComponent.html":{},"injectables/ReportService.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"injectables/VocabFieldLookupService.html":{},"dependencies.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{},"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["url':\"url",{"_index":2411,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["url:\"/api/v1.1/harvest/$packagetyp",{"_index":4283,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["url=url+'&'+key+\"=\"+params[key",{"_index":2911,"title":{},"body":{"injectables/ReportService.html":{}}}],["urlvari",{"_index":513,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["urlwher",{"_index":4265,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["us",{"_index":1102,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/MapComponent.html":{},"injectables/TranslationService.html":{},"injectables/UserSimpleService.html":{},"license.html":{},"additional-documentation/installation-guide.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["usa",{"_index":1128,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{}}}],["usag",{"_index":453,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MapComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["useclass",{"_index":1411,"title":{},"body":{"components/ExportFormComponent.html":{},"modules/ExportModule.html":{},"modules/RecordSearchModule.html":{},"overview.html":{}}}],["user",{"_index":305,"title":{"classes/User.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/Role.html":{},"injectables/RolesService.html":{},"classes/SaveResult.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"components/TreeNodeCheckboxComponent.html":{},"classes/User.html":{},"injectables/UserSimpleService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["user.servic",{"_index":2970,"title":{},"body":{"modules/SharedModule.html":{}}}],["user/login_aaf",{"_index":4303,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["user_profile.compon",{"_index":3187,"title":{},"body":{"modules/UserProfileModule.html":{}}}],["userform",{"_index":3143,"title":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["userid",{"_index":2921,"title":{},"body":{"injectables/RolesService.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["usernam",{"_index":1990,"title":{},"body":{"components/LocalAuthComponent.html":{},"classes/LoginResult.html":{},"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"classes/Role.html":{},"classes/SaveResult.html":{},"classes/User.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UserSimpleService.html":{}}}],["username:usernam",{"_index":2570,"title":{},"body":{"classes/RecordActionResult.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{}}}],["userprofilecompon",{"_index":304,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"modules/UserProfileModule.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["userprofilemodul",{"_index":3181,"title":{"modules/UserProfileModule.html":{}},"body":{"modules/UserProfileModule.html":{},"modules.html":{},"overview.html":{}}}],["users'},{'nam",{"_index":246,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["userservic",{"_index":1975,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["userservice.waitforinit((whatever:ani",{"_index":1988,"title":{},"body":{"components/LocalAuthComponent.html":{}}}],["usersimpleservic",{"_index":1970,"title":{"injectables/UserSimpleService.html":{}},"body":{"components/LocalAuthComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"injectables/UserSimpleService.html":{},"overview.html":{}}}],["usual",{"_index":4186,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["util",{"_index":1791,"title":{},"body":{"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"modules/SharedModule.html":{},"injectables/UtilityService.html":{}}}],["utilis",{"_index":4263,"title":{},"body":{"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["utilityservic",{"_index":1270,"title":{"injectables/UtilityService.html":{}},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"injectables/UtilityService.html":{},"overview.html":{}}}],["v",{"_index":3321,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v.replace(regtrail",{"_index":3323,"title":{},"body":{"injectables/UtilityService.html":{}}}],["v:ani",{"_index":526,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["val",{"_index":388,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"injectables/UtilityService.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["val.loc",{"_index":2461,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.nam",{"_index":2459,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val.typ",{"_index":2449,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{}}}],["val1",{"_index":3152,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val1.valu",{"_index":3156,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2",{"_index":3154,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val2.valu",{"_index":3157,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["val:ani",{"_index":1293,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["valid",{"_index":626,"title":{},"body":{"classes/AsynchField.html":{},"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlService.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SortComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["validatorfn",{"_index":2499,"title":{},"body":{"classes/RbValidator.html":{}}}],["validators.email",{"_index":3159,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["validators.requir",{"_index":1230,"title":{},"body":{"classes/EmbeddableComponent.html":{},"components/LocalAuthComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["valobj",{"_index":1666,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["valobj[fldnam",{"_index":1676,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["valobj[targetfld",{"_index":1679,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["valobj[this.stringlabeltofield",{"_index":1671,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["valu",{"_index":112,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RbValidator.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"injectables/UtilityService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["value'},{'nam",{"_index":238,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["value.split(delim",{"_index":3307,"title":{},"body":{"injectables/UtilityService.html":{}}}],["value:ani",{"_index":1254,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem",{"_index":616,"title":{},"body":{"classes/AsynchField.html":{},"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/MapComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/VocabFieldLookupService.html":{}}}],["valueelem:ani",{"_index":1236,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["valueelem[fieldctr",{"_index":1240,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{}}}],["values.push(_.get(data",{"_index":3301,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values.push(v.split(reg).map(item",{"_index":3324,"title":{},"body":{"injectables/UtilityService.html":{}}}],["values[i",{"_index":2290,"title":{},"body":{"pipes/MultivalueFieldPipe.html":{}}}],["var",{"_index":196,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"injectables/EmailNotificationService.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"classes/RecordActionResult.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"injectables/ReportService.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["variabl",{"_index":1014,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/SortComponent.html":{},"components/WorkspaceFieldComponent.html":{},"additional-documentation/configuration-guide.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["variable:this.vari",{"_index":3023,"title":{},"body":{"components/SortComponent.html":{}}}],["variables.imports['mo",{"_index":1018,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables.imports[key",{"_index":1017,"title":{},"body":{"components/DmpFieldComponent.html":{}}}],["variables['import",{"_index":3391,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["varieti",{"_index":4168,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["verbatim",{"_index":3611,"title":{},"body":{"license.html":{}}}],["veri",{"_index":4171,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["version",{"_index":1087,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"components/PDFListComponent.html":{},"license.html":{},"additional-documentation/installation-guide.html":{}}}],["via",{"_index":4181,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["view",{"_index":3730,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewchild",{"_index":327,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('datetim",{"_index":543,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["viewchild('field",{"_index":998,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewchild('ngcomplet",{"_index":1739,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["viewcontainerref",{"_index":328,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceFieldComponent.html":{}}}],["viewcssclass",{"_index":4213,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewencapsul",{"_index":3132,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewencapsulation.non",{"_index":3126,"title":{},"body":{"components/TreeNodeCheckboxComponent.html":{}}}],["viewonli",{"_index":4214,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["viewrol",{"_index":4201,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["views/emailtempl",{"_index":4246,"title":{},"body":{"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["violat",{"_index":3915,"title":{},"body":{"license.html":{}}}],["visibl",{"_index":2067,"title":{},"body":{"components/MapComponent.html":{},"license.html":{}}}],["vocab",{"_index":25,"title":{},"body":{"injectables/ANDSService.html":{},"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["vocab'},{'nam",{"_index":276,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["vocab.compon",{"_index":1175,"title":{},"body":{"classes/EmbeddableComponent.html":{},"injectables/FieldControlMetaService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{}}}],["vocab.component.t",{"_index":1515,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:267",{"_index":1524,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:278",{"_index":1532,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:293",{"_index":1525,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:297",{"_index":1527,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:307",{"_index":1530,"title":{},"body":{"classes/ExternalLookupDataService.html":{}}}],["vocab.component.ts:334",{"_index":2272,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:347",{"_index":2276,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:365",{"_index":2273,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:369",{"_index":2274,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:395",{"_index":2275,"title":{},"body":{"classes/MintLookupDataService.html":{}}}],["vocab.component.ts:421",{"_index":3344,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:427",{"_index":3349,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:444",{"_index":3346,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:448",{"_index":3351,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:452",{"_index":3345,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:456",{"_index":3350,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab.component.ts:460",{"_index":3348,"title":{},"body":{"injectables/VocabFieldLookupService.html":{}}}],["vocab:str",{"_index":57,"title":{},"body":{"injectables/ANDSService.html":{}}}],["vocabfield",{"_index":1174,"title":{},"body":{"classes/EmbeddableComponent.html":{},"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableVocabComponent.html":{},"modules/SharedModule.html":{},"injectables/VocabFieldLookupService.html":{}}}],["vocabfieldcompon",{"_index":307,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["vocabfieldlookupservic",{"_index":1718,"title":{"injectables/VocabFieldLookupService.html":{}},"body":{"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"classes/MintLookupDataService.html":{},"modules/SharedModule.html":{},"injectables/VocabFieldLookupService.html":{},"overview.html":{}}}],["vocabid",{"_index":1541,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["vocabulari",{"_index":1539,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["void",{"_index":119,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"classes/AsynchField.html":{},"classes/BaseService.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"injectables/ConfigService.html":{},"injectables/DashboardService.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"classes/EmbeddableComponent.html":{},"components/ExportFormComponent.html":{},"classes/ExternalLookupDataService.html":{},"injectables/FieldControlMetaService.html":{},"injectables/FieldControlService.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"classes/MintLookupDataService.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"classes/RecordSearchParams.html":{},"classes/RecordSearchRefiner.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"classes/RepeatableComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"injectables/TranslationService.html":{},"injectables/VocabFieldLookupService.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"license.html":{}}}],["volum",{"_index":3842,"title":{},"body":{"license.html":{}}}],["w",{"_index":4076,"title":{},"body":{"license.html":{}}}],["w['name",{"_index":3436,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["wait",{"_index":696,"title":{},"body":{"classes/AsynchField.html":{}}}],["waitforinit",{"_index":763,"title":{},"body":{"classes/BaseService.html":{},"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["waitforinit(handl",{"_index":787,"title":{},"body":{"classes/BaseService.html":{}}}],["waitforinit(servicearr",{"_index":1457,"title":{},"body":{"components/ExportFormComponent.html":{},"classes/LoadableComponent.html":{},"components/LocalAuthComponent.html":{}}}],["waiv",{"_index":3809,"title":{},"body":{"license.html":{}}}],["waiver",{"_index":4056,"title":{},"body":{"license.html":{}}}],["want",{"_index":1028,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/MapComponent.html":{},"components/PDFListComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["warranti",{"_index":1104,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["watch",{"_index":4122,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["way",{"_index":3624,"title":{},"body":{"license.html":{}}}],["web",{"_index":4164,"title":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["websit",{"_index":1897,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["welcom",{"_index":4077,"title":{},"body":{"license.html":{}}}],["well",{"_index":3718,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["whatev",{"_index":1763,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{},"license.html":{}}}],["whether",{"_index":3641,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["whole",{"_index":1030,"title":{},"body":{"components/DmpFieldComponent.html":{},"components/WorkspaceFieldComponent.html":{},"license.html":{}}}],["whose",{"_index":3880,"title":{},"body":{"license.html":{}}}],["wide",{"_index":676,"title":{},"body":{"classes/AsynchField.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["widget",{"_index":2049,"title":{},"body":{"components/MapComponent.html":{}}}],["width",{"_index":1900,"title":{},"body":{"components/GenericGroupComponent.html":{},"components/RepeatableGroupComponent.html":{}}}],["window",{"_index":348,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"license.html":{}}}],["window.location.href",{"_index":485,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["window.navigator.languag",{"_index":691,"title":{},"body":{"classes/AsynchField.html":{}}}],["window.open(url",{"_index":1501,"title":{},"body":{"components/ExportFormComponent.html":{}}}],["wipo",{"_index":3803,"title":{},"body":{"license.html":{}}}],["wish",{"_index":3629,"title":{},"body":{"license.html":{}}}],["within",{"_index":2378,"title":{},"body":{"components/PublishDataLocationSelectorComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["without",{"_index":1103,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["work",{"_index":3615,"title":{},"body":{"license.html":{}}}],["work'",{"_index":3754,"title":{},"body":{"license.html":{}}}],["workflow",{"_index":3380,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow.j",{"_index":4215,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflow_stagelabel",{"_index":4199,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workflowstep",{"_index":309,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["workflowstepbutton",{"_index":3371,"title":{},"body":{"components/WorkflowStepButtonComponent.html":{}}}],["workflowstepbuttoncompon",{"_index":308,"title":{"components/WorkflowStepButtonComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["workspac",{"_index":313,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["workspace.compon",{"_index":3452,"title":{},"body":{"modules/WorkspaceListModule.html":{}}}],["workspaceapp",{"_index":3397,"title":{},"body":{"components/WorkspaceFieldComponent.html":{}}}],["workspacefieldcompon",{"_index":310,"title":{"components/WorkspaceFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["workspacelistcompon",{"_index":312,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"modules/WorkspaceListModule.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["workspacelistmodul",{"_index":3446,"title":{"modules/WorkspaceListModule.html":{}},"body":{"modules/WorkspaceListModule.html":{},"modules.html":{},"overview.html":{}}}],["workspaceselectorcompon",{"_index":314,"title":{"components/WorkspaceSelectorComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["workspaceselectorcomponent:111",{"_index":3480,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:119",{"_index":3482,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:12",{"_index":3486,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:126",{"_index":3483,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:133",{"_index":3481,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:14",{"_index":3477,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:141",{"_index":3479,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:38",{"_index":3469,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:42",{"_index":3471,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:46",{"_index":3470,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:50",{"_index":3472,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:54",{"_index":3474,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:56",{"_index":3473,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:60",{"_index":3488,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:64",{"_index":3487,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:69",{"_index":3490,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:74",{"_index":3489,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorcomponent:81",{"_index":3478,"title":{},"body":{"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorfield",{"_index":3396,"title":{},"body":{"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["workspaceselectorfieldcompon",{"_index":316,"title":{"components/WorkspaceSelectorFieldComponent.html":{}},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"modules/SharedModule.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{},"overview.html":{}}}],["workspacetypeservic",{"_index":2942,"title":{"injectables/WorkspaceTypeService.html":{}},"body":{"modules/SharedModule.html":{},"components/WorkspaceFieldComponent.html":{},"injectables/WorkspaceTypeService.html":{},"overview.html":{}}}],["worldwid",{"_index":3991,"title":{},"body":{"license.html":{}}}],["worri",{"_index":1761,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["wrap",{"_index":538,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"classes/LoadableComponent.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{}}}],["write",{"_index":1117,"title":{},"body":{"modules/DmpModule.html":{},"modules/ExportModule.html":{},"license.html":{}}}],["written",{"_index":3857,"title":{},"body":{"license.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{}}}],["ws",{"_index":311,"title":{},"body":{"components/ActionButtonComponent.html":{},"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DmpFieldComponent.html":{},"components/DropdownFieldComponent.html":{},"components/ExportFormComponent.html":{},"components/GenericGroupComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"components/LocalAuthComponent.html":{},"components/MapComponent.html":{},"components/MarkdownTextAreaComponent.html":{},"components/PDFListComponent.html":{},"components/ParameterRetrieverComponent.html":{},"components/PublishDataLocationSelectorComponent.html":{},"components/RecordMetadataRetrieverComponent.html":{},"components/RecordSearchRefinerComponent.html":{},"components/RelatedObjectDataComponent.html":{},"components/RelatedObjectSelectorComponent.html":{},"components/RepeatableContributorComponent.html":{},"components/RepeatableGroupComponent.html":{},"components/RepeatableTextfieldComponent.html":{},"components/RepeatableVocabComponent.html":{},"components/SelectionFieldComponent.html":{},"components/SortComponent.html":{},"components/SpacerComponent.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextAreaComponent.html":{},"components/TextBlockComponent.html":{},"components/TextFieldComponent.html":{},"components/ToggleComponent.html":{},"components/TreeNodeCheckboxComponent.html":{},"components/WorkflowStepButtonComponent.html":{},"components/WorkspaceFieldComponent.html":{},"components/WorkspaceSelectorComponent.html":{},"components/WorkspaceSelectorFieldComponent.html":{}}}],["xs",{"_index":1747,"title":{},"body":{"classes/ExternalLookupDataService.html":{},"classes/MintLookupDataService.html":{},"injectables/VocabFieldLookupService.html":{}}}],["xxxxxx",{"_index":4291,"title":{},"body":{"additional-documentation/configuration-guide/configuring-authentication.html":{}}}],["yarn",{"_index":4108,"title":{},"body":{"additional-documentation/installation-guide.html":{}}}],["ye",{"_index":460,"title":{},"body":{"components/AnchorOrButtonComponent.html":{},"components/ButtonBarContainerComponent.html":{},"components/CancelButtonComponent.html":{},"components/DateTimeComponent.html":{},"components/DropdownFieldComponent.html":{},"components/HiddenValueComponent.html":{},"components/HtmlRawComponent.html":{},"components/LinkValueComponent.html":{},"pipes/MultivalueFieldPipe.html":{},"components/ParameterRetrieverComponent.html":{},"classes/SelectionComponent.html":{},"components/SelectionFieldComponent.html":{},"classes/SimpleComponent.html":{},"components/SpacerComponent.html":{},"pipes/StringTemplatePipe.html":{},"components/TabOrAccordionContainerComponent.html":{},"components/TextBlockComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/configuration-guide/configuring-web-forms.html":{},"additional-documentation/configuration-guide/configuring-email-notifications.html":{},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{}}}],["year",{"_index":3859,"title":{},"body":{"license.html":{}}}],["you'v",{"_index":4187,"title":{},"body":{"additional-documentation/configuration-guide/configuring-web-forms.html":{}}}],["yourself",{"_index":4002,"title":{},"body":{"license.html":{}}}],["z0",{"_index":3164,"title":{},"body":{"interfaces/UserForm.html":{},"interfaces/UserForm-1.html":{}}}],["zone.j",{"_index":3590,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":866,"title":{},"body":{"modules/DashboardModule.html":{},"modules/DmpModule.html":{},"modules/ExportModule.html":{},"modules/LocalAuthModule.html":{},"modules/ManageRolesModule.html":{},"modules/ManageUsersModule.html":{},"components/MapComponent.html":{},"modules/RecordSearchModule.html":{},"modules/ReportModule.html":{},"modules/SharedModule.html":{},"modules/TransferOwnerModule.html":{},"modules/UserProfileModule.html":{},"modules/WorkspaceListModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/ANDSService.html":{"url":"injectables/ANDSService.html","title":"injectable - ANDSService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ANDSService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/ands-service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getResourceDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/ands-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getResourceDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetResourceDetails(uri: string, vocab: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/ands-service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uri\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        vocab\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ANDSService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getResourceDetails(uri:string, vocab:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/ands/vocab/resourceDetails?uri=${uri}&vocab=${vocab}`, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ActionButtonComponent.html":{"url":"components/ActionButtonComponent.html","title":"component - ActionButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ActionButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/action-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                action-button\n            \n\n\n\n            \n                template\n                \n  Record published to CKAN at {{ field.value }}\n  {{field.label}}Submitting to CKAN\n  \n  \n  \n  \n\n\n  Record published to CKAN at {{ field.value }}\n  Record not yet published\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                executeAction\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            executeAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecuteAction(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/action-button.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \nisDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/action-button.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     ActionButton\n\n                    \n                \n                    \n                        \n                            Type :     ActionButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/action-button.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { AnchorOrButton } from './field-simple';\nimport { RecordsService } from './records.service';\n\nexport class ActionButton extends FieldBase  {\n  targetAction: string;\n  recordService: RecordsService;\n  submitting: boolean = false;\n\n  constructor(options: any, injector:any) {\n    super(options, injector);\n    this.targetAction = options['targetAction'] || null;\n    this.recordService = this.getFromInjector(RecordsService);\n    this.value = options['value'] || null;\n  }\n\n  setValue(value:any) {\n    this.value = value;\n    this.formModel.patchValue(value, {emitEvent: true, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n  }\n}\n\n// For action buttons\n@Component({\n  selector: 'action-button',\n  template: `\n  \n    Record published to CKAN at {{ field.value }}\n    {{field.label}}Submitting to CKAN\n    \n    \n    \n    \n  \n  \n    Record published to CKAN at {{ field.value }}\n    Record not yet published\n  \n  `,\n})\nexport class ActionButtonComponent extends SimpleComponent {\n  field: ActionButton;\n\n  executeAction(event:any) {\n    this.field.submitting = true;\n    let that = this;\n    this.field.recordService.executeAction(this.field.targetAction,{oid: this.field.fieldMap._rootComp.oid})\n    .then(function (response) {\n      that.field.submitting = false;\n      that.field.setValue(\"http://203.101.227.135:5000/dataset/\"+that.field.fieldMap._rootComp.oid);\n      that.fieldMap._rootComp.onSubmit().subscribe();\n    });\n\n  }\n\n  isDisabled() {\n    return false;\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Record published to CKAN at {{ field.value }}  {{field.label}}Submitting to CKAN          Record published to CKAN at {{ field.value }}  Record not yet published'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ActionButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnchorOrButtonComponent.html":{"url":"components/AnchorOrButtonComponent.html","title":"component - AnchorOrButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AnchorOrButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                anchor-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n&nbsp;{{field.label}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:527\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onClick(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:523\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     AnchorOrButton\n\n                    \n                \n                    \n                        \n                            Type :     AnchorOrButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:521\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}} {{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnchorOrButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AngularPage.html":{"url":"classes/AngularPage.html","title":"class - AngularPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AngularPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/e2e/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getParagraphText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getParagraphText\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetParagraphText()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/e2e/app.po.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navigateTo\n                            \n                            \n                        \n                    \n                \n                \n                    \nnavigateTo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/e2e/app.po.ts:4\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AngularPage {\n  navigateTo() {\n    return browser.get('/');\n  }\n\n  getParagraphText() {\n    return element(by.css('app-root h1')).getText();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AsynchField.html":{"url":"classes/AsynchField.html","title":"class - AsynchField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AsynchField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-asynch.component.ts\n        \n\n            \n                Description\n            \n            \n                Async / background tasks field\n\n            \n\n            \n                Extends\n            \n            \n                    NotInFormField\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                completionLabel\n                            \n                            \n                                    Public\n                                completionRateType\n                            \n                            \n                                    Public\n                                criteria\n                            \n                            \n                                    Public\n                                dateCompletedLabel\n                            \n                            \n                                    Public\n                                dateFormat\n                            \n                            \n                                    Public\n                                dateStartedLabel\n                            \n                            \n                                    Public\n                                lastUpdateLabel\n                            \n                            \n                                    Public\n                                listenType\n                            \n                            \n                                    Public\n                                messageLabel\n                            \n                            \n                                    Public\n                                nameLabel\n                            \n                            \n                                    Public\n                                progressArr\n                            \n                            \n                                    Public\n                                RecordsService\n                            \n                            \n                                    Public\n                                relatedRecordId\n                            \n                            \n                                    Public\n                                startedByLabel\n                            \n                            \n                                    Public\n                                statusLabel\n                            \n                            \n                                    Public\n                                taskType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getStatusLabel\n                            \n                            \n                                    Public\n                                createFormModel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                    Public\n                                reactEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: any, injector: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-asynch.component.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            completionLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completionLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            completionRateType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        completionRateType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            criteria\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        criteria:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateCompletedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCompletedLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateFormat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateFormat:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateStartedLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateStartedLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lastUpdateLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastUpdateLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listenType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listenType:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            messageLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messageLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            nameLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nameLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            progressArr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        progressArr:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            RecordsService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        RecordsService:     RecordsService\n\n                    \n                \n                    \n                        \n                            Type :     RecordsService\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relatedRecordId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relatedRecordId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            startedByLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        startedByLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            statusLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        statusLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            taskType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        taskType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:57\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getStatusLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatusLabel(status)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-asynch.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            createFormModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createFormModel(valueElem: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     NotInFormField\n\n                                \n                            \n                        \n                            \n                                    Defined in NotInFormField:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        valueElem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(group: any, fieldMap: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     NotInFormField\n\n                                \n                            \n                        \n                            \n                                    Defined in NotInFormField:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldMap\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reactEvent(eventName: string, eventData: any, origData: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     NotInFormField\n\n                                \n                            \n                        \n                            \n                                    Defined in NotInFormField:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eventData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, ChangeDetectorRef } from '@angular/core';\nimport { PercentPipe } from '@angular/common';\nimport { SimpleComponent } from './field-simple.component';\nimport { NotInFormField } from './field-simple';\nimport { RecordsService } from './records.service';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/bufferTime';\nimport 'rxjs/add/operator/filter';\nimport moment from 'moment-es6';\n\ndeclare var jQuery: any;\ndeclare var io: any;\n\n/**\n * Async / background tasks field\n *\n * @author Shilo Banihit\n *\n */\nexport class AsynchField extends NotInFormField {\n  public listenType: any;\n  public relatedRecordId: string;\n  public criteria: any;\n  public nameLabel: string;\n  public statusLabel: string;\n  public dateStartedLabel: string;\n  public dateCompletedLabel: string;\n  public startedByLabel: string;\n  public messageLabel: string;\n  public lastUpdateLabel: string;\n  public completionLabel: string;\n  public completionRateType: string;\n  public progressArr: any[];\n  public RecordsService: RecordsService;\n  public dateFormat:string;\n  public taskType: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedRecordId = options['relatedRecordId'] || undefined;\n    this.completionRateType = options['completionRateType'] || 'percentage';\n    this.nameLabel = options['nameLabel'] ? this.getTranslated(options['nameLabel'], options['nameLabel']) : 'Name';\n    this.statusLabel = options['statusLabel'] ? this.getTranslated(options['statusLabel'], options['statusLabel']) : 'Status';\n    this.dateStartedLabel = options['dateStartedLabel'] ? this.getTranslated(options['dateStartedLabel'], options['dateStartedLabel']) : 'Date Started';\n    this.dateCompletedLabel = options['dateCompletedLabel'] ? this.getTranslated(options['dateCompletedLabel'], options['dateCompletedLabel']) : 'Date Completed';\n    this.startedByLabel = options['startedByLabel'] ? this.getTranslated(options['startedByLabel'], options['startedByLabel']) : 'Started By';\n    this.messageLabel = options['messageLabel'] ? this.getTranslated(options['messageLabel'], options['messageLabel']) : 'Message';\n    this.completionLabel = options['completionLabel'] ? this.getTranslated(options['completionLabel'], options['completionLabel']) : 'Completion';\n    this.lastUpdateLabel = options['lastUpdateLabel'] ? this.getTranslated(options['lastUpdateLabel'], options['lastUpdateLabel']) : 'Last Updated';\n    this.dateFormat = options['dateFormat'] || 'L LT';\n    this.listenType = options['listenType'] || \"record\"; // listens to record wide\n    this.taskType = options['taskType'] || '';\n    this.criteria = options['criteria'] || {where: {relatedRecordId: '@oid'}}; // defaults to all happenings for this oid\n\n    this.RecordsService = this.getFromInjector(RecordsService);\n  }\n\n  public getStatusLabel(status) {\n    return this.getTranslated(`${this.options.statusLabel}-${status}`, status);\n  }\n\n}\n/**\n*\n* Component to display asynchronous processes\n*\n*\n*/\n@Component({\n  selector: 'asynch-component',\n  templateUrl: './field-asynch.component.html'\n})\nexport class AsynchComponent extends SimpleComponent {\n  field: AsynchField;\n  public isListening:boolean;\n  public locale;\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n    this.locale = window.navigator.language;\n  }\n\n  public ngOnInit() {\n    let oid = this.field.relatedRecordId || this.field.fieldMap._rootComp.oid;\n    const that = this;\n    if (_.isNull(oid) || _.isUndefined(oid) || _.isEmpty(oid)) {\n      // wait for the OID to be set when record is created\n      if (!this.field.fieldMap._rootComp.getSubscription('recordCreated')) {\n        console.log(`Subscribing to record creation..... ${this.field.name}`);\n        this.field.fieldMap._rootComp.subscribe('recordCreated', this.field.name, (createdInfo) => {\n          that.field.relatedRecordId = createdInfo.oid;\n          that.startListen();\n        });\n      }\n    }\n    if (oid) {\n      this.field.relatedRecordId = this.field.fieldMap._rootComp.oid;\n      this.startListen();\n    }\n  }\n\n  protected startListen() {\n    if (!this.isListening && (!_.isUndefined(this.field.relatedRecordId) && !_.isEmpty(this.field.relatedRecordId))) {\n      const fq = JSON.stringify(this.field.criteria).replace(/@oid/g, this.field.relatedRecordId);\n\n      this.field.RecordsService.getAsyncProgress(fq).then(progressArr => {\n        _.each(progressArr, (progress) => {\n          progress.completionRate = progress.currentIdx / progress.targetIdx;\n          if (this.field.listenType == \"progress\") {\n            this.field.RecordsService.subscribeToAsyncProgress(progress.id, (data, socketRes) => {\n              console.log(`Subscribed to async tasks: ${progress.id}`);\n              console.log(data);\n              console.log(socketRes);\n            });\n          }\n        });\n        if (this.field.listenType == \"record\") {\n          this.field.RecordsService.subscribeToAsyncProgress(this.field.relatedRecordId, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record: ${this.field.relatedRecordId}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        } else if (this.field.listenType == \"taskType\") {\n          this.field.RecordsService.subscribeToAsyncProgress(`${this.field.relatedRecordId}-${this.field.taskType}`, (data, socketRes) => {\n            console.log(`Subscribed to async tasks for record with taskType: ${this.field.relatedRecordId}-${this.field.taskType}`);\n            console.log(data);\n            console.log(socketRes);\n          });\n        }\n        io.socket.on('start', this.onStart.bind(this));\n        io.socket.on('stop', this.onStop.bind(this));\n        io.socket.on('update', this.onUpdate.bind(this));\n        this.field.progressArr = progressArr;\n        this.isListening = true;\n      });\n    }\n  }\n\n  public onStart(progress) {\n    console.log(`Got start event:`);\n    console.log(progress);\n    this.field.progressArr ? this.field.progressArr.push(progress) : this.field.progressArr = [progress];\n    this.changeRef.detectChanges();\n  }\n\n  public onStop(progress) {\n    console.log(`Got stop event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  public onUpdate(progress) {\n    console.log(`Got update event:`);\n    console.log(progress);\n    this.updateProgress(progress);\n  }\n\n  protected updateProgress(progress) {\n\n    const targetProgress = _.find(this.field.progressArr, (prog) => { return prog.id == progress.id; });\n    _.assign(targetProgress, progress);\n    this.changeRef.detectChanges();\n  }\n\n  public formatDateForDisplay(value: string) {\n    return value ? moment(value).locale(this.locale).format(this.field.dateFormat) : '';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseService.html":{"url":"classes/BaseService.html","title":"class - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/base-service.ts\n        \n\n            \n                Description\n            \n            \n                Base class for all client-side services...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Static\n                                __config\n                            \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                brandingAndPortalUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                configService\n                            \n                            \n                                    Protected\n                                http\n                            \n                            \n                                    Protected\n                                initSubject\n                            \n                            \n                                    Protected\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                emitInit\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                    Public\n                                getInitSubject\n                            \n                            \n                                    Protected\n                                getOptions\n                            \n                            \n                                    Protected\n                                getOptionsClient\n                            \n                            \n                                    Public\n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getBrandingAndPortalUrl\n                                \n                                \n                                    getBaseUrl\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any, configService: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Static\n                            __config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        __config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            brandingAndPortalUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        brandingAndPortalUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            configService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        configService:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            http\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        http:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            initSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initSubject:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            options\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        options:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/base-service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        emitInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            extractData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractData(res: Response, parentField: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parentField\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getInitSubject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getInitSubject()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOptions(headersObj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        headersObj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getOptionsClient\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getOptionsClient(headersObj: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        headersObj\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            waitForInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        waitForInit(handler: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/base-service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        getBrandingAndPortalUrl\n                    \n                \n\n                \n                    \n                        getgetBrandingAndPortalUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:56\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        getBaseUrl\n                    \n                \n\n                \n                    \n                        getgetBaseUrl()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/base-service.ts:60\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\nimport { Subject } from 'rxjs/Subject';\n/**\n * Base class for all client-side services...\n *\n * Author: Shilo Banihit\n *\n */\nexport class BaseService {\n  protected http: any;\n  protected config: any;\n  protected configService: any;\n  protected baseUrl:string;\n  protected brandingAndPortalUrl:string;\n  protected options: any;\n  protected static __config: any;\n  protected initSubject: any;\n\n  constructor (http: any , configService: any) {\n    this.http = http;\n    this.configService = configService;\n    this.initSubject = new Subject();\n    this.configService.getConfig((config:any) => {\n      this.config = config;\n      this.baseUrl = this.config.baseUrl;\n      this.brandingAndPortalUrl = `${this.baseUrl}/${this.config.branding}/${this.config.portal}`;\n      this.options = this.getOptionsClient();\n      this.emitInit();\n    });\n  }\n\n  public get getBrandingAndPortalUrl() {\n    return this.brandingAndPortalUrl;\n  }\n\n  public get getBaseUrl() {\n    return this.baseUrl;\n  }\n\n  public waitForInit(handler: any) {\n    const subs = this.initSubject.subscribe(handler);\n    this.emitInit();\n    return subs;\n  }\n\n  public getInitSubject() {\n    return this.initSubject;\n  }\n\n  public emitInit() {\n    if (this.config) {\n      this.initSubject.next(this);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n\n  protected getOptions(headersObj: any) {\n    let headers = new Headers(headersObj);\n    return new RequestOptions({ headers: headers });\n  }\n\n  protected getOptionsClient(headersObj: any = {}) {\n    headersObj['X-Source'] = 'jsclient';\n    headersObj['Content-Type'] = 'application/json;charset=utf-8';\n    headersObj['X-CSRF-Token'] = this.config.csrfToken;\n\n    return this.getOptions(headersObj);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ButtonBarContainerComponent.html":{"url":"components/ButtonBarContainerComponent.html","title":"component - ButtonBarContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ButtonBarContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                buttonbarcontainer\n            \n\n\n\n            \n                template\n                \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ButtonBarContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CancelButtonComponent.html":{"url":"components/CancelButtonComponent.html","title":"component - CancelButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CancelButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Cancel Button Component\nButton designed to\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                cancel-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     CancelButton\n\n                    \n                \n                    \n                        \n                            Type :     CancelButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:507\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CancelButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/config-service.ts\n        \n\n            \n                Description\n            \n            \n                Handles client-side global configuration\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                csrfToken\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emitConfig\n                            \n                            \n                                    Protected\n                                extractData\n                            \n                            \n                                getConfig\n                            \n                            \n                                initConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emitConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nemitConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/config-service.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            extractData\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        extractData(res: Response, parentField: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/config-service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        res\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parentField\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetConfig(handler: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/config-service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitConfig()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/config-service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            csrfToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        csrfToken:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/config-service.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport * as _ from \"lodash\";\n/**\n * Handles client-side global configuration\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class ConfigService {\n  protected config: any;\n  protected subjects: any;\n  public csrfToken: any;\n\n  constructor (@Inject(Http) protected http: any) {\n    this.subjects = {};\n    this.subjects['get'] = new Subject();\n    this.initConfig();\n  }\n\n  getConfig(handler: any): any {\n    const subs = this.subjects['get'].subscribe(handler);\n    this.emitConfig();\n    return subs;\n  }\n\n  emitConfig() {\n    if (this.config) {\n      this.subjects['get'].next(this.config);\n    }\n  }\n\n  initConfig() {\n    this.http.get(`/csrfToken`).mergeMap((csrfRes:any) => {\n      this.csrfToken = csrfRes.json()['_csrf'];\n      return this.http.get(`/dynamic/apiClientConfig?v=${new Date().getTime()}`);\n    })\n    .subscribe((res:any) => {\n      this.config = this.extractData(res);\n      this.config['csrfToken'] = this.csrfToken;\n      console.log(`ConfigService, initialized. `);\n      this.emitConfig();\n    });\n  }\n\n  protected extractData(res: Response, parentField: any = null) {\n    let body = res.json();\n    if (parentField) {\n        return body[parentField] || {};\n    } else {\n        return body || {};\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DashboardModule.html":{"url":"modules/DashboardModule.html","title":"module - DashboardModule","body":"\n                   \n\n\n\n\n  Modules\n  DashboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dashboard/app/dashboard.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Dashboard Module\nAuthor: Shilo Banihit\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DashboardComponent\n                            \n                            \n                                SortComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DashboardComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DashboardComponent }  from './dashboard.component';\nimport { SortComponent } from './sort.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Dashboard Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ DashboardComponent, SortComponent ],\n  providers:    [  ],\n  bootstrap:    [ DashboardComponent ]\n})\nexport class DashboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DashboardService.html":{"url":"injectables/DashboardService.html","title":"injectable - DashboardService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DashboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getActivePlans\n                            \n                            \n                                getAllDraftPlansCanEdit\n                            \n                            \n                                getAllRecordsCanEdit\n                            \n                            \n                                getDraftPlans\n                            \n                            \n                                getRecords\n                            \n                            \n                                    Public\n                                searchRecords\n                            \n                            \n                                    Public\n                                setDashboardTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/dashboard-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDates\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDates(response: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getActivePlans\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetActivePlans(pageNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllDraftPlansCanEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllDraftPlansCanEdit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllRecordsCanEdit\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllRecordsCanEdit(recordType: string, state: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recordType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getDraftPlans\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetDraftPlans(pageNumber: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pageNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRecords\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRecords(recordType: string, state: string, pageNumber: number, packageType: string, sort: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        recordType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        state\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pageNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        packageType\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                undefined\n                                                        \n\n                                                \n                                                \n                                                        sort\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                undefined\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            searchRecords\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        searchRecords(pageNumber: number, basicSearch: string, facets: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        pageNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        basicSearch\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        facets\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            setDashboardTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setDashboardTitle(planTable: PlanTable, plans: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/dashboard-service.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        planTable\n                                                        \n                                                                    PlanTable\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        plans\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { PlanTable, Plan } from './dashboard-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class DashboardService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getAllDraftPlansCanEdit(): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getAllRecordsCanEdit(recordType:string, state:string): Promise {\n    const rows = this.config.maxTransferRowsPerPage;\n    const start = 0;\n\n    let url = `${this.brandingAndPortalUrl}/listRecords?recordType=${recordType}&editOnly=true&start=${start}&rows=${rows}&ts=${moment().unix()}`;\n    if(state != '') {\n      url += `&state=${state}`;\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getActivePlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?state=active&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n  getDraftPlans(pageNumber:number): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?recordType=rdmp&state=draft&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  getRecords(recordType:string,state:string,pageNumber:number,packageType:string=undefined, sort:string=undefined): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    recordType = (!_.isEmpty(recordType) && !_.isUndefined(recordType)) ? `recordType=${recordType}` : '';\n    packageType = (!_.isEmpty(packageType) && !_.isUndefined(packageType)) ? `packageType=${packageType}` : '';\n    sort = (!_.isEmpty(sort) && !_.isUndefined(sort)) ? `&sort=${sort}` : '';\n    state = (!_.isEmpty(state) && !_.isUndefined(state)) ? `&state=${state}` : '';\n    return this.http.get(`${this.brandingAndPortalUrl}/listRecords?${recordType}${packageType}${state}${sort}&start=${start}&rows=${rows}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res: any) => this.formatDates(this.extractData(res)) as PlanTable);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i {\n      plan.dashboardTitle = (_.isUndefined(plan.title) || _.isEmpty(plan.title) || _.isEmpty(plan.title[0])) ? this.translator.t('plan-with-no-title'): plan.title;\n    });\n  }\n\n  public searchRecords(pageNumber:number, basicSearch: string, facets: any = null) {\n    const rows = this.config.maxSearchRowsPerPage;\n    const start = (pageNumber-1) * rows;\n    return this.http.get(`${this.brandingAndPortalUrl}/searchPlans?start=${start}&rows=${rows}&query=${basicSearch}&facets=${facets}&ts=${moment().unix()}`, this.options)\n      .toPromise()\n      .then((res:any) => this.formatDates(this.extractData(res))as PlanTable);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DateTimeComponent.html":{"url":"components/DateTimeComponent.html","title":"component - DateTimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DateTimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                date-time\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.formatValueForDisplay()}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatValue\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:684\n                            \n                        \n\n\n                \n                    \n                            Component method that formats the value, delegates to field.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:676\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dateTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateTime:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('dateTime')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:674\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     DateTime\n\n                    \n                \n                    \n                        \n                            Type :     DateTime\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:672\n                            \n                        \n\n                \n                    \n                        The field model\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.formatValueForDisplay()}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DateTimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DmpFieldComponent.html":{"url":"components/DmpFieldComponent.html","title":"component - DmpFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DmpFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/dmp-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a DMP field.\nAuthor: Shilo Banihit\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dmp-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabled\n                            \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The model for this field.\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        Field map\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        Form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:70\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:68\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                    \n                        The parentId of this field\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:64\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The value of this field.\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:51\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:101\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:154\n                            \n                        \n\n\n                \n                    \n                            Change handler, instantiates the field component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            disabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabledElements:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:80\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabledExpression:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:72\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldAnchor:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldElement:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/dmp-field.component.ts:74\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/dmp-field.component.ts:91\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FieldBase } from './field-base';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var $: any;\n/**\n * Base component for a DMP field.\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  selector: 'dmp-field',\n  template: ''\n})\nexport class DmpFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  @Input() isEmbedded: boolean = false;\n\n  @Input() public name: any;\n\n  @Input() public index: number;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n  public disabled:boolean = false;\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {imports: {}};\n      _.forOwn(this.fieldMap._rootComp, (val, key) => {\n        variables.imports[key] = val;\n      });\n      variables.imports['moment'] = moment;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        if (!this.disabled) {\n          //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n          this.disabledElements = parentElement.find('*:disabled');\n          parentElement.find('input').prop( \"disabled\", true );\n          parentElement.find('button').filter((index, buttonElem) => {\n            const isHelp = jQuery(buttonElem).find(\"span[class='glyphicon glyphicon-question-sign']\");\n            return isHelp.length  {\n            if (_.isFunction(disabledElement.prop)) {\n              disabledElement.prop(\"disabled\",true)\n            }\n          });\n          this.disabledElements = [];\n          this.disabled = false;\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    fieldCompRef.instance.isEmbedded = this.isEmbedded;\n    fieldCompRef.instance.name = this.name;\n    fieldCompRef.instance.index = this.index;\n    // flip thi: make the fields responsible for setting the right fieldMap member\n    this.field.setFieldMapEntry(this.fieldMap, fieldCompRef);\n    //this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DmpFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DmpModule.html":{"url":"modules/DmpModule.html","title":"module - DmpModule","body":"\n                   \n\n\n\n\n  Modules\n  DmpModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_imports\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/dmp/app/dmp.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DmpFormComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                DmpFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { DmpFormComponent } from './dmp-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ DmpFormComponent ],\n  providers:    [ ],\n  bootstrap:    [ DmpFormComponent ],\n  entryComponents: [ ]\n})\nexport class DmpModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownFieldComponent.html":{"url":"components/DropdownFieldComponent.html","title":"component - DropdownFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DropdownFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                dropdownfield\n            \n\n\n\n            \n                template\n                \n   \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n   \n   \n      {{opt.label}}\n   \n   {{field.label}} is required\n   {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  {{getLabel(field.value)}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel(val: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SelectionComponent:149\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'DropdownFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:186\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     SelectionField\n\n                    \n                \n                    \n                        \n                            Type :     SelectionField\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SelectionComponent:147\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{field.label}} {{ getRequiredLabelStr()}}                   {{opt.label}}      {{field.label}} is required   {{field.validationMessages.required}}  {{field.label}}  {{getLabel(field.value)}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailNotificationService.html":{"url":"injectables/EmailNotificationService.html","title":"injectable - EmailNotificationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EmailNotificationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/email-service.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sendNotification\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \nsendNotification(to: string, template: string, data: any, subject: string, from: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/email-service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        to\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        template\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        subject\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        from\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/email-service.ts:36\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * @author Thom Cuddihy\n *\n */\n@Injectable()\nexport class EmailNotificationService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  sendNotification(to: string, template: string, data: any = {}, subject: string = null, from: string = null): Promise {\n    var payload = {to: to, template: template, data: data};\n    if (subject) {\n      payload['subject'] = subject;\n    }\n    if (from) {\n      payload['from'] = from;\n    }\n    return this.http.post(`${this.brandingAndPortalUrl}/api/sendNotification`, payload, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmbeddableComponent.html":{"url":"classes/EmbeddableComponent.html","title":"class - EmbeddableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmbeddableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRemove(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:223\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:226\n                            \n                        \n            \n        \n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ExportFormComponent.html":{"url":"components/ExportFormComponent.html","title":"component - ExportFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ExportFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/export/app/export-form.component.ts\n\n\n    \n        Description\n    \n    \n        Main Export component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n            LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n            \n                providers\n                \n                            Location\n                            { provide: LocationStrategy, useClass: PathLocationStrategy }\n                \n            \n\n\n            \n                selector\n                export-form\n            \n\n\n\n\n            \n                templateUrl\n                ./export-form.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                criticalError\n                            \n                            \n                                datePickerOpts\n                            \n                            \n                                hasClearButton\n                            \n                            \n                                initSubs\n                            \n                            \n                                modAfter\n                            \n                            \n                                modBefore\n                            \n                            \n                                record_type\n                            \n                            \n                                recTypeNames\n                            \n                            \n                                timePickerOpts\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                download\n                            \n                            \n                                getRecordTypeNames\n                            \n                            \n                                setRecordType\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elm: ElementRef, LocationService: Location, translationService: TranslationService, recordsService: RecordsService)\n                    \n                \n                        \n                            \n                                Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        LocationService\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        recordsService\n                                                  \n                                                        \n                                                                    RecordsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            download\n                            \n                            \n                        \n                    \n                \n                \n                    \ndownload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRecordTypeNames\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRecordTypeNames()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setRecordType\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetRecordType(recType, e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:87\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recType\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkIfHasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkIfHasLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTranslated\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTranslated(key, defValue)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        defValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTranslator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTranslator(translationService: TranslationService)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                        \n                                                                    TranslationService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLoading(loading: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            synchLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsynchLoading()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslatorLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waitForInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nwaitForInit(serviceArr: any[], handler: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceArr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            criticalError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        criticalError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            datePickerOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datePickerOpts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasClearButton\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasClearButton:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initSubs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        initSubs:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modAfter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modAfter:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modBefore\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modBefore:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            record_type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        record_type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recTypeNames\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        recTypeNames:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timePickerOpts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timePickerOpts:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/export/app/export-form.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        spinnerElem:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationService:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translatorReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, ElementRef } from '@angular/core';\nimport { Location, LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { LoadableComponent } from './shared/loadable.component';\nimport moment from 'moment-es6';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n/**\n * Main Export component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'export-form',\n  templateUrl: './export-form.html',\n  providers: [Location, {provide: LocationStrategy, useClass: PathLocationStrategy}]\n})\n\nexport class ExportFormComponent extends LoadableComponent {\n  criticalError: any;\n  modBefore: any;\n  modAfter: any;\n  initSubs: any;\n  datePickerOpts: any;\n  timePickerOpts: any;\n  hasClearButton: boolean;\n  recTypeNames: string[];\n  record_type: string;\n\n  constructor(\n    elm: ElementRef,\n    @Inject(Location) protected LocationService: Location,\n    translationService:TranslationService,\n    protected recordsService: RecordsService\n  ) {\n    super();\n    this.timePickerOpts = false;\n    this.hasClearButton = false;\n    this.datePickerOpts = {placeholder: 'dd/mm/yyyy', format: 'dd/mm/yyyy', icon: 'fa fa-calendar'};\n    this.initTranslator(translationService);\n    translationService.isReady(tService => {\n      this.recordsService.getAllTypes().then((typeConfs: any) => {\n        this.recTypeNames = [];\n        _.each(typeConfs, typeConf => {\n          this.recTypeNames.push(typeConf.name);\n        });\n        this.record_type = this.recTypeNames[0];\n        this.checkIfHasLoaded();\n      });\n\n    });\n  }\n\n  download() {\n    const before = this.modBefore ? moment(this.modBefore).format('YYYY-MM-DD') : '';\n    const after = this.modAfter ? moment(this.modAfter).format('YYYY-MM-DD') : '';\n    const url = this.LocationService.prepareExternalUrl(`export/record/download/csv?before=${before}&after=${after}&recType=${this.record_type}`);\n    window.open(url, '_blank');\n  }\n\n  getRecordTypeNames() {\n    return this.recTypeNames;\n  }\n\n  setRecordType(recType, e) {\n    if (e) {\n      e.preventDefault();\n    }\n    this.record_type = recType;\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n  \n    \n      \n        {{ 'export-modified-after' | translate }} \n        \n          \n        \n      \n      \n        {{ 'export-modified-before' | translate }} \n        \n          \n        \n      \n      \n        \n        \n          \n            \n              {{ 'export-csv-' + record_type  | translate }}\n            \n            \n              \n            \n            \n              \n                \n                  {{ 'export-csv-' + recTypeName  | translate }}\n                \n              \n            \n          \n        \n      \n    \n  \n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ \\'export-modified-after\\' | translate }}                                               {{ \\'export-modified-before\\' | translate }}                                                                                           {{ \\'export-csv-\\' + record_type  | translate }}                                                                                                              {{ \\'export-csv-\\' + recTypeName  | translate }}                                                                            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ExportFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExportModule.html":{"url":"modules/ExportModule.html","title":"module - ExportModule","body":"\n                   \n\n\n\n\n  Modules\n  ExportModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_ExportFormComponent_providers\n\n\n\ncluster_ExportModule_imports\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/export/app/export.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ExportFormComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                ExportFormComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // Copyright (c) 2017 Queensland Cyber Infrastructure Foundation (http://www.qcif.edu.au/)\n//\n// GNU GENERAL PUBLIC LICENSE\n//    Version 2, June 1991\n//\n// This program is free software; you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation; either version 2 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License along\n// with this program; if not, write to the Free Software Foundation, Inc.,\n// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nimport { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ExportFormComponent } from './export-form.component';\nimport { SharedModule } from './shared/shared.module';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, NKDatetimeModule ],\n  declarations: [ ExportFormComponent ],\n  providers:    [  ],\n  bootstrap:    [ ExportFormComponent ],\n  entryComponents: [  ]\n})\nexport class ExportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ExternalLookupDataService.html":{"url":"classes/ExternalLookupDataService.html","title":"class - ExternalLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ExternalLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, arrayProperty: string, compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:267\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        arrayProperty\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:293\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertToItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToItem(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:297\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompleterItem | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitle(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:307\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        search(term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:278\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlMetaService.html":{"url":"injectables/FieldControlMetaService.html","title":"injectable - FieldControlMetaService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlMetaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control-meta.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                flattenFields\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getInjectedService\n                            \n                            \n                                getLookupData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, vocabFieldLookupService: VocabFieldLookupService, completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        vocabFieldLookupService\n                                                  \n                                                        \n                                                                    VocabFieldLookupService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                    UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            flattenFields\n                            \n                            \n                        \n                    \n                \n                \n                    \nflattenFields(fields: any[], fieldArr: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldArr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldsMeta\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldsMeta(fieldsArr: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldsArr\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInjectedService\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInjectedService(serviceName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLookupData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLookupData(fields: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        classes:     \n\n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control-meta.service.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }   from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport  { fieldClasses }from '../fieldClasses';\n\nimport { ConfigService } from '../config-service';\nimport { VocabFieldLookupService } from './field-vocab.component';\nimport { CompleterService } from 'ng2-completer';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\n\n@Injectable()\nexport class FieldControlMetaService extends BaseService {\n  protected classes =  fieldClasses;\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(VocabFieldLookupService) private vocabFieldLookupService: VocabFieldLookupService,\n    @Inject(CompleterService) private completerService: CompleterService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translationService: TranslationService,\n    @Inject(UtilityService) protected utilityService: UtilityService,\n    protected app: ApplicationRef\n  ) {\n      super(http, configService);\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = _.map(fieldsArr, (f:any) => {\n        // console.log(f.class);\n        // if(typeof this.classes[f.class] != 'undefined'){\n        //   console.log(f.class + ' is null');\n        // }\n      const inst = new this.classes[f.class].meta(f.definition, this.app['_injector']);\n      inst.utilityService = this.getInjectedService('utilityService');\n      inst.appConfig = this.getInjectedService('configService').config;\n      // set the component class\n      if (_.isArray(this.classes[f.class].comp)) {\n        inst.compClass = _.find(this.classes[f.class].comp, (c:any)=> {\n          // console.log(`Checking if ${c.clName} == ${f.compClass}`);\n          return c.clName == f.compClass\n        });\n        // defaults to the first entry when compClass is undefined\n        if (_.isUndefined(inst.compClass)) {\n          inst.compClass = this.classes[f.class].comp[0];\n        }\n      } else {\n        inst.compClass = this.classes[f.class].comp;\n      }\n      if (f.definition && f.definition.fields) {\n        inst.fields = this.getFieldsMeta(f.definition.fields);\n      }\n      return inst;\n    });\n    return fields;\n  }\n\n  flattenFields(fields: any[], fieldArr: any[]) {\n    _.map(fields, (f:any)=> {\n      fieldArr.push(f);\n      if (f.fields) {\n        this.flattenFields(f.fields, fieldArr);\n      }\n    });\n  }\n\n  getLookupData(fields: any[]) {\n    let fieldArray: any[] = [];\n    this.flattenFields(fields, fieldArray);\n    return Observable.from(fieldArray).flatMap((f:any) => {\n      if (f.hasLookup) {\n        const lookupServiceName = this.classes[f.clName].lookupService;\n        const serviceInst = this.getInjectedService(lookupServiceName);\n        f.setLookupServices(this.getInjectedService('completerService'), serviceInst);\n        // f.completerService = this.completerService;\n        // f.lookupService = this[lookupServiceName];\n        return serviceInst.getLookupData(f);\n      } else {\n        return Observable.of(null);\n      }\n    })\n    .flatMap((field:any) => {\n      return Observable.of(field);\n    })\n    .last()\n    .flatMap((whatever:any) => {\n      return Observable.of(fields);\n    });\n  }\n\n  getInjectedService(serviceName: string) {\n    let serviceInst = null;\n    switch (serviceName) {\n      case 'vocabFieldLookupService':\n        serviceInst = this.vocabFieldLookupService;\n        break;\n      case 'completerService':\n        serviceInst = this.completerService;\n        break;\n      case 'configService':\n        serviceInst = this.configService;\n        break;\n      case 'translationService':\n        serviceInst = this.translationService;\n        break;\n      case 'utilityService':\n        serviceInst = this.utilityService;\n        break;\n    }\n    return serviceInst;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FieldControlService.html":{"url":"injectables/FieldControlService.html","title":"injectable - FieldControlService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FieldControlService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-control.service.ts\n        \n\n            \n                Description\n            \n            \n                Field / Model Factory Service...\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                classes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addComponentClasses\n                            \n                            \n                                getEmptyFormGroup\n                            \n                            \n                                getFieldsMeta\n                            \n                            \n                                getLookupData\n                            \n                            \n                                populateFormGroup\n                            \n                            \n                                setupEventHandlers\n                            \n                            \n                                toFormGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(completerService: CompleterService, configService: ConfigService, translationService: TranslationService, utilityService: UtilityService, fcmetaService: FieldControlMetaService, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        completerService\n                                                  \n                                                        \n                                                                    CompleterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        utilityService\n                                                  \n                                                        \n                                                                    UtilityService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fcmetaService\n                                                  \n                                                        \n                                                                    FieldControlMetaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addComponentClasses\n                            \n                            \n                        \n                    \n                \n                \n                    \naddComponentClasses(componentClasses: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentClasses\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getEmptyFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetEmptyFormGroup()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldsMeta\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldsMeta(fieldsArr: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:88\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldsArr\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLookupData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLookupData(fields: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            populateFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \npopulateFormGroup(fields: any[], group: any, fieldMap: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fieldMap\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setupEventHandlers\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetupEventHandlers(fieldMap: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldMap\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toFormGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoFormGroup(fields: FieldBase[], fieldMap: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    FieldBase[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        fieldMap\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            classes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        classes:     \n\n                    \n                \n                    \n                        \n                            Default value : fieldClasses\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-control.service.ts:42\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef, Output, EventEmitter }   from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/mergeMap';\nimport 'rxjs/add/operator/last';\nimport 'rxjs/add/observable/from';\nimport { CompleterService } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport { TranslationService } from '../translation-service';\nimport { UtilityService } from '../util-service';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { FieldBase } from './field-base';\nimport  { fieldClasses } from '../fieldClasses';\n/**\n * Field / Model Factory Service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class FieldControlService {\n  protected classes =  fieldClasses;\n  constructor(\n  @Inject(CompleterService) private completerService: CompleterService,\n  @Inject(ConfigService) protected configService: ConfigService,\n  @Inject(TranslationService) protected translationService: TranslationService,\n  @Inject(UtilityService) protected utilityService: UtilityService,\n  @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n  protected app: ApplicationRef\n  ) {\n\n  }\n\n  addComponentClasses(componentClasses: object) {\n    this.classes = _.merge(this.classes,componentClasses);\n  }\n\n  getEmptyFormGroup() {\n    return new FormGroup({});\n  }\n\n  toFormGroup(fields: FieldBase[], fieldMap: any = null ) {\n    let group: any = {};\n    this.populateFormGroup(fields, group, fieldMap);\n    this.setupEventHandlers(fieldMap);\n    return new FormGroup(group);\n  }\n\n  setupEventHandlers(fieldMap: any) {\n    _.forOwn(fieldMap, (fMap:any) => {\n      if (fMap.field) {\n        fMap.field.setupEventHandlers();\n      }\n    });\n  }\n\n  populateFormGroup(fields: any[], group: any, fieldMap: any) {\n    fields.forEach((field:any) => {\n      if (field.fields && !field.hasGroup) {\n        this.populateFormGroup(field.fields, group, fieldMap);\n      } else {\n        field.getGroup(group, fieldMap);\n      }\n    });\n    return group;\n  }\n\n  getFieldsMeta(fieldsArr: any) {\n    const fields = this.fcmetaService.getFieldsMeta(fieldsArr);\n    return fields;\n  }\n\n  getLookupData(fields: any[]) {\n    return this.fcmetaService.getLookupData(fields);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GenericGroupComponent.html":{"url":"components/GenericGroupComponent.html","title":"component - GenericGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GenericGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Generic Group Component\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n    \n\n    \n        Extends\n    \n    \n            EmbeddableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                generic-group-field\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n        \n          \n        \n        \n          {{removeBtnText}}\n          \n        \n      \n    \n  \n  \n    \n      \n    \n  \n\n\n  \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:223\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:226\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRemove(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GenericGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:118\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                                                          {{removeBtnText}}                                                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GenericGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HiddenValueComponent.html":{"url":"components/HiddenValueComponent.html","title":"component - HiddenValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HiddenValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                hidden-field\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleChange\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleChange(value: any, source: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:621\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        source\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HiddenValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HtmlRawComponent.html":{"url":"components/HtmlRawComponent.html","title":"component - HtmlRawComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HtmlRawComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                htmlraw\n            \n\n\n\n            \n                template\n                \n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     HtmlRaw\n\n                    \n                \n                    \n                        \n                            Type :     HtmlRaw\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:381\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HtmlRawComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LinkValueComponent.html":{"url":"components/LinkValueComponent.html","title":"component - LinkValueComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LinkValueComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                link-value\n            \n\n\n\n            \n                template\n                \n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:606\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LinkValueComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoadableComponent.html":{"url":"classes/LoadableComponent.html","title":"class - LoadableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoadableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/loadable.component.ts\n        \n\n            \n                Description\n            \n            \n                Convenience class to wrap JQuery calls ...\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        spinnerElem:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationService:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translatorReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkIfHasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkIfHasLoaded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTranslated\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTranslated(key, defValue)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        defValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasLoaded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTranslator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTranslator(translationService: TranslationService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                        \n                                                                    TranslationService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLoading(loading: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            synchLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsynchLoading()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslatorLoaded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waitForInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nwaitForInit(serviceArr: any[], handler: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/loadable.component.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceArr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { TranslationService } from './translation-service';\n\nimport * as _ from \"lodash\";\ndeclare var jQuery: any;\n/**\n * Convenience class to wrap JQuery calls ...\n *\n * Author: Shilo Banihit\n *\n */\nexport class LoadableComponent  {\n  isLoading: boolean;\n  translatorReady: boolean;\n  translationService: any;\n  spinnerElem: string = ``;\n\n  constructor() {\n    this.isLoading = true;\n    this.synchLoading();\n\n  }\n\n  initTranslator(translationService: TranslationService) {\n    this.translationService = translationService;\n    translationService.isReady((tService:any) => {\n      this.translatorReady = true;\n    });\n  }\n\n  translatorLoaded() {\n    this.translatorReady = true;\n    this.checkIfHasLoaded();\n  }\n\n  public checkIfHasLoaded() {\n    if (this.hasLoaded()) {\n      this.setLoading(false);\n    }\n  }\n\n  hasLoaded() {\n    return this.isLoading && (this.translationService ? this.translatorReady : true);\n  }\n\n  setLoading(loading: boolean=true) {\n    this.isLoading = loading;\n    this.synchLoading();\n  }\n\n  synchLoading() {\n    if (this.isLoading) {\n      jQuery(\"#loading\").removeClass(\"hidden\");\n    } else {\n      jQuery(\"#loading\").addClass(\"hidden\");\n    }\n  }\n\n  getTranslated(key, defValue) {\n    if (!_.isEmpty(key) && !_.isUndefined(key)) {\n      // Keys can now be any string, previously, these were required to start with the '@' character\n      if (this.translationService) {\n        return this.translationService.t(key);\n      } else {\n        return key;\n      }\n    } else {\n      return defValue;\n    }\n  }\n\n  waitForInit(serviceArr: any[], handler:any) {\n    const subs = _.map(serviceArr, (service)=> { return service.getInitSubject() });\n    const subTracker = {loaded: {}, subs: {}};\n    const subTrackerFn = (serviceIdx:any) => {\n      return (serviceInst:any) => {\n        subTracker.loaded[`${serviceIdx}`] = serviceInst;\n        if (_.keys(subTracker.loaded).length >= subs.length) {\n          subTracker.subs[`${serviceIdx}`].unsubscribe();\n          handler();\n        }\n      };\n    };\n    _.forOwn(serviceArr, (service:any, serviceIdx:any) => {\n      subTracker.subs[`${serviceIdx}`] = service.getInitSubject().subscribe(subTrackerFn(serviceIdx));\n      service.emitInit();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocalAuthComponent.html":{"url":"components/LocalAuthComponent.html","title":"component - LocalAuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocalAuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/localAuth/app/local_auth.component.ts\n\n\n    \n        Description\n    \n    \n        Local Authentication  Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n            LoadableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n            \n                moduleId\n                module.id\n            \n\n\n\n\n            \n                selector\n                local-auth\n            \n\n\n\n\n            \n                templateUrl\n                ./localAuth.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                isLoginDisabled\n                            \n                            \n                                loginMessage\n                            \n                            \n                                isLoading\n                            \n                            \n                                spinnerElem\n                            \n                            \n                                translationService\n                            \n                            \n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getErrors\n                            \n                            \n                                onLogin\n                            \n                            \n                                    Public\n                                checkIfHasLoaded\n                            \n                            \n                                getTranslated\n                            \n                            \n                                hasLoaded\n                            \n                            \n                                initTranslator\n                            \n                            \n                                setLoading\n                            \n                            \n                                synchLoading\n                            \n                            \n                                translatorLoaded\n                            \n                            \n                                waitForInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserSimpleService, fb: FormBuilder, document: any, translationService: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserSimpleService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        document\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translationService\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:85\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLogin(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            checkIfHasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        checkIfHasLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTranslated\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTranslated(key, defValue)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:76\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        defValue\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTranslator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTranslator(translationService: TranslationService)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translationService\n                                                        \n                                                                    TranslationService\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetLoading(loading: boolean)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        loading\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            synchLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \nsynchLoading()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslatorLoaded()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            waitForInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nwaitForInit(serviceArr: any[], handler: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceArr\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoginDisabled:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/localAuth/app/local_auth.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            spinnerElem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        spinnerElem:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ``\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translationService:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translatorReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoadableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoadableComponent:31\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Injectable, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { LoginResult } from './shared/user-models'\nimport { LoadableComponent } from './shared/loadable.component';\nimport { TranslationService } from './shared/translation-service';\n\n/**\n * Local Authentication  Component\n *\n * Author: Shilo Banihit\n *\n */\n@Component({\n  moduleId: module.id,\n  selector: 'local-auth',\n  templateUrl: './localAuth.html'\n})\n\n@Injectable()\nexport class LocalAuthComponent extends LoadableComponent {\n  form: FormGroup;\n  loginMessage: string;\n  isLoginDisabled: boolean;\n  constructor (@Inject(UserSimpleService) protected userService: UserSimpleService, @Inject(FormBuilder) protected fb: FormBuilder, @Inject(DOCUMENT) protected document:any, translationService: TranslationService) {\n    super();\n    this.initTranslator(translationService);\n    translationService.isReady(tService => {\n      userService.waitForInit((whatever:any)=> {\n        this.form = this.fb.group({\n            \"username\": [\"\", Validators.required],\n            \"password\":[\"\", Validators.required]\n        });\n        this.form.valueChanges.subscribe(data => {\n          this.isLoginDisabled = this.form.status == 'INVALID';\n          if (this.isLoginDisabled) {\n            this.getErrors();\n          }\n        });\n        this.checkIfHasLoaded();\n      });\n    });\n  }\n\n  onLogin(event:any) {\n    if (this.isLoginDisabled || this.form.status == 'INVALID') {\n      this.getErrors();\n      return;\n    }\n    event.preventDefault();\n    this.isLoginDisabled = true;\n    this.userService.loginLocal(this.form.value.username, this.form.value.password)\n    .then((res:LoginResult) => {\n      console.log(res);\n      if (res.user) {\n        console.log(\"Login success, redirecting...\");\n        this.document.location.href = res.url;\n      } else {\n        this.loginMessage = res.message;\n        this.isLoginDisabled = false;\n      }\n    });\n  }\n\n  getErrors() {\n    if (this.form.controls['username'].hasError('required')) {\n      this.loginMessage = \"Please provide a username.\";\n    } else {\n      this.loginMessage = \"Please provide a password.\";\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      {{ 'local-creds-header' | translate }}\n    \n    \n      \n      \n        \n        \n        \n        \n        \n          \n              Login \n          \n        \n        \n        \n          {{loginMessage}}\n        \n      \n    \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'local-creds-header\\' | translate }}                                                                                    Login                                             {{loginMessage}}                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LocalAuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocalAuthModule.html":{"url":"modules/LocalAuthModule.html","title":"module - LocalAuthModule","body":"\n                   \n\n\n\n\n  Modules\n  LocalAuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_imports\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/localAuth/app/local_auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocalAuthComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                LocalAuthComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { LocalAuthComponent }  from './local_auth.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, SharedModule ],\n  declarations: [ LocalAuthComponent ],\n  providers:    [ ],\n  bootstrap:    [ LocalAuthComponent ]\n})\nexport class LocalAuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResult.html":{"url":"classes/LoginResult.html","title":"class - LoginResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                message\n                            \n                            \n                                url\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     User\n\n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageRolesModule.html":{"url":"modules/ManageRolesModule.html","title":"module - ManageRolesModule","body":"\n                   \n\n\n\n\n  Modules\n  ManageRolesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_imports\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageRoles/app/manage_roles.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ManageRolesComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                ManageRolesComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ManageRolesComponent }  from './manage_roles.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ ManageRolesComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageRolesComponent ]\n})\nexport class ManageRolesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ManageUsersModule.html":{"url":"modules/ManageUsersModule.html","title":"module - ManageUsersModule","body":"\n                   \n\n\n\n\n  Modules\n  ManageUsersModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_imports\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/manageUsers/app/manage_users.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ManageUsersComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                ManageUsersComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { ManageUsersComponent }  from './manage_users.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ ManageUsersComponent ],\n  providers:    [ ],\n  bootstrap:    [ ManageUsersComponent ]\n})\nexport class ManageUsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MapComponent.html":{"url":"components/MapComponent.html","title":"component - MapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-map.component.ts\n\n\n    \n        Description\n    \n    \n        Map Component.\nUses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\nUsage\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n*\n\n\nProperty Name\nDescription\nRequired\nDefault\n\n\n\n\nlabel\nThe label to show above the component\nNo       *\n\n\n\nhelp\nHelp text\nNo       *\n\n\n\ntabId\nThe name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.\nNo       *\n\n\n\nleafletOptions\nThe leaflet options object. See the Leaflet's documentation for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map)\nNo\n{zoom: 4, center:\" latLng([-24.673148, 134.074574]) }\n\n\ndrawOptions\nThe leaflet draw options object. See the Leaflet Draw's documentation for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.\nNo\n{position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}}\n\n\n\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-mapdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-map.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:364\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     MapField\n\n                    \n                \n                    \n                        \n                            Type :     MapField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-map.component.ts:362\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport {  Map,  GeoJSON,   } from 'leaflet';\ndeclare var omnivore: any;\ndeclare var L: any;\ndeclare var jQuery: any;\n\n\n/**\n * Map Model\n *\n *\n * @author Andrew Brazzatti\n *\n */\nexport class MapField extends FieldBase {\n\n\n  initialised: boolean = false;\n  tabId: string;\n  importDataString: string = \"\";\n\n  layerGeoJSON: any = {};\n  map: Map;\n  importFailed:boolean = false;\n  layers = [];\n  drawnItems: any = new L.FeatureGroup();\n  googleMaps = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n  googleHybrid = L.tileLayer('http://{s}.google.com/vt/lyrs=s,h&x={x}&y={y}&z={z}', {\n    maxZoom: 20,\n    subdomains: ['mt0', 'mt1', 'mt2', 'mt3'],\n    detectRetina: true\n  });\n\n\n  /*\n  *\n  * Draw options\n  */\n  /* Draw options that we do not want to be overridden by form config as it'll break functionality */\n  masterDrawOptions: any = {\n    edit: {\n      featureGroup: this.drawnItems\n    },\n  };\n\n\n  defaultDrawOptions: any = {\n    position: 'topright',\n    edit: {\n      featureGroup: this.drawnItems\n    },\n    draw: {\n      marker: {\n        icon: L.icon({\n          iconSize: [25, 41],\n          iconAnchor: [13, 41],\n          iconUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png',\n          shadowUrl: 'http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png'\n        })\n      },\n      circlemarker: false,\n      circle: false\n    }\n  };\n\n  drawOptions: any = this.defaultDrawOptions;\n\n  /*\n  *\n  * Leaf options\n  */\n  masterLeafletOptions = {\n    layers: [this.googleMaps, this.drawnItems],\n  };\n\n  defaultLeafletOptions = {\n    zoom: 4,\n    center: L.latLng([-24.673148, 134.074574])\n  };\n\n  leafletOptions: any = this.defaultLeafletOptions;\n\n  layersControl = {\n    baseLayers: {\n      'Google Maps': this.googleMaps,\n      'Google Hybrid': this.googleHybrid\n    }\n  };\n\n  mainTabId: any;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'MapField';\n\n    this.leafletOptions = options['leafletOptions'] || this.defaultLeafletOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.leafletOptions = _.merge(this.leafletOptions, this.masterLeafletOptions);\n\n    this.drawOptions = options['drawOptions'] || this.drawOptions;\n    // merge in master options to ensure we have the right layers configured\n    this.drawOptions = _.merge(this.drawOptions, this.masterDrawOptions);\n\n    this.tabId = options['tabId'] || null;\n\n    this.layerGeoJSON = options.value;\n    this.mainTabId = options['mainTabId'] || null;\n  }\n\n  onMapReady(map: Map) {\n\n    this.map = map;\n\n    let that = this;\n\n    this.registerMapEventHandlers(map);\n    this.setValue(this.layerGeoJSON);\n\n\n    if (this.tabId === null) {\n      map.invalidateSize();\n      map.fitBounds(this.drawnItems.getBounds());\n    } else {\n      if (this.editMode) {\n        // Note: this assumes the tabId is unqiue in the page, which may not be when there are multiple tab layouts.\n        jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n          const curTabId = e.target.href.split('#')[1];\n          if (curTabId == that.tabId) {\n            that.initMap(map, that);\n          }\n        });\n      } else {\n        const field = this.fieldMap._rootComp.getFieldWithId(this.mainTabId, this.fieldMap._rootComp.fields);\n        field.onAccordionCollapseExpand.subscribe((event) => {\n          if (event.shown == true && event.tabId == that.tabId && !that.initialised) {\n            that.initMap(map, that);\n            that.initialised = true;\n          }\n        });\n      }\n    }\n  }\n\n  public initMap(map, that) {\n    map.invalidateSize();\n\n      try {\n        // if there are no layers present this will throw an error\n        map.fitBounds(this.drawnItems.getBounds());\n      } catch (e) {\n\n      }\n\n  }\n\n\n\n  registerMapEventHandlers(map: Map) {\n    let that = this;\n    map.on(L.Draw.Event.CREATED, function(e: any) {\n      var type = e.layerType,\n        layer = e.layer;\n      that.layers.push(layer);\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n      return false;\n    });\n\n    map.on('draw:edited', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        let layerIndex = _.findIndex(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n        if(layerIndex == -1) {\n          that2.layers.push(layer);\n        } else {\n          that2.layers[layerIndex] = layer;\n        }\n\n      });\n    });\n\n    map.on('draw:editstop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deletestop', function(e: any) {\n      that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n      that.setValue(that.layerGeoJSON);\n    });\n\n    map.on('draw:deleted', function(e: any) {\n      let layers = e.layers;\n      let that2 = that;\n      layers.eachLayer(function(layer) {\n        _.remove(that2.layers, function(o) { return o._leaflet_id == layer._leaflet_id; });\n      });\n    });\n  }\n\n\n  drawLayers() {\n    this.drawnItems.clearLayers();\n    let geoJSONLayer: GeoJSON = L.geoJSON(this.layerGeoJSON);\n    this.layers = [];\n    let that = this;\n    geoJSONLayer.eachLayer(layer => {\n      layer.addTo(that.drawnItems);\n      that.layers.push(layer);\n    });\n  }\n\n\n  postInit(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.layerGeoJSON = valueElem;\n    }\n\n    this.formModel = new FormControl(this.layerGeoJSON || {});\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    if (!_.isEmpty(value)) {\n      this.layerGeoJSON = value;\n      this.drawLayers();\n      this.formModel.patchValue(this.layerGeoJSON, { emitEvent: false });\n      this.formModel.markAsTouched();\n    }\n  }\n\n  setEmptyValue() {\n    this.layerGeoJSON = {};\n    return this.layerGeoJSON;\n  }\n\n  importData() {\n    if(this.importDataString.length > 0) {\n      try {\n      if(this.importDataString.indexOf(\" {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      } else {\n        let parsedLayers = L.geoJSON(JSON.parse(this.importDataString));\n        let that = this;\n        parsedLayers.eachLayer(layer => {\n          layer.addTo(that.drawnItems);\n          that.layers.push(layer);\n          that.layerGeoJSON = L.featureGroup(that.layers).toGeoJSON();\n          this.drawLayers();\n          that.map.fitBounds(that.drawnItems.getBounds());\n        });\n        this.importDataString = \"\";\n        this.importFailed = false;\n      }\n      this.layerGeoJSON = L.featureGroup(this.layers).toGeoJSON();\n      this.setValue(this.layerGeoJSON);\n    } catch (e) {\n      this.importFailed = true;\n    }\n\n    }\n\n    return false;\n  }\n\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbMapDataTemplate = './field-map.html';\nif (typeof aotMode == 'undefined') {\n  rbMapDataTemplate = '../angular/shared/form/field-map.html';\n}\n\n/**\n* #### Map Component.\n*\n* Uses Leaflet.js to render a widget and the Leaflet.draw plugin to be able to select regions\n*\n* #### Usage\n* ```\n*  {\n*   class: 'MapField',\n*   compClass: 'MapComponent',\n*   definition: {\n*     name: 'geocoords',\n*     label: '@dataRecord-coverage',\n*     help: '@dataRecord-coverage',\n*     tabId: 'coverage',\n*     leafletOptions: {\n*                      zoom: 3,\n*                      center: latLng([108.94248962402342, 34.26516142452615)\n*                     }\n*     }\n*   }\n* ```\n*\n*| Property Name  | Description                                                                                                                                                                                                                                                                                                                       | Required | Default                                                                                                                                                                                                                                                                                  |\n*|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n*| label          | The label to show above the component                                                                                                                                                                                                                                                                                             | No       *|                                                                                                                                                                                                                                                                                          |\n*| help           | Help text                                                                                                                                                                                                                                                                                                                         | No       *|                                                                                                                                                                                                                                                                                          |\n*| tabId          | The name of the tab the widget is placed, this is needed as Leaflet needs the map to be visible before the tiles can be loaded correctly. Leave empty if widget isn't placed in a tab.                                                                                                                                            | No       *|                                                                                                                                                                                                                                                                                          |\n*| leafletOptions | The leaflet options object. See the [Leaflet's documentation](http://leafletjs.com/reference-1.3.0.html#map-option) for more information. Note: layers cannot be changed as other functionality depends on it being set as it is and will be overridden. Defaults to a map centred on Australia (if no elements are drawn on map) | No       | ```{zoom: 4, center:\" latLng([-24.673148, 134.074574]) }```                                                                                                                                                                                                                              |\n*| drawOptions    | The leaflet draw options object. See the [Leaflet Draw's documentation](https://leaflet.github.io/Leaflet.draw/docs/leaflet-draw-latest.html#options) for more information. Note: the edit featureGroup cannot be changed as other functionality depends on it being set as it is and will be overridden.                         | No       | ```{position:\"topright\",draw:{marker:{icon:icon({iconSize:[25,41],iconAnchor:[13,41],iconUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-icon.png\",shadowUrl:\"http://localhost:1500/default/rdmp/images/leaflet/marker-shadow.png\"})},circlemarker:false,circle:false}}``` |\n*/\n@Component({\n  selector: 'rb-mapdata',\n  templateUrl: './field-map.html'\n})\nexport class MapComponent extends SimpleComponent {\n  field: MapField;\n\n  ngAfterViewInit() {\n    if (!this.field.editMode) {\n      this.field.initMap(this.field.map, this.field);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n\n  \n  \n  \n  Enter KML or GeoJSON\n  Import Entered text is not a valid KML or GeoJSON\n\n\n\n\n  \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{field.label}} {{ getRequiredLabelStr()}}                Enter KML or GeoJSON  Import Entered text is not a valid KML or GeoJSON    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MarkdownTextAreaComponent.html":{"url":"components/MarkdownTextAreaComponent.html","title":"component - MarkdownTextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MarkdownTextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n            EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                markdown-text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  Preview\n  \n  {{field.label}} is required\n  {{field.validationMessages.required}}\n\n\n  {{field.label}}\n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:223\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:226\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:258\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRemove(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     MarkdownTextArea\n\n                    \n                \n                    \n                        \n                            Type :     MarkdownTextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:256\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n        \n      \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}            Preview    {{field.label}} is required  {{field.validationMessages.required}}  {{field.label}}    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MarkdownTextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MintLookupDataService.html":{"url":"classes/MintLookupDataService.html","title":"class - MintLookupDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MintLookupDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Subject\n            \n\n            \n                Implements\n            \n            \n                        CompleterData\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cancel\n                            \n                            \n                                    Public\n                                convertToItem\n                            \n                            \n                                getTitle\n                            \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(url: string, http: Http, fields: string[], compositeTitleName: string, titleFieldArr: string[], titleFieldDelim: any[], searchFieldStr: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:334\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fields\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        compositeTitleName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldArr\n                                                  \n                                                        \n                                                                    string[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleFieldDelim\n                                                  \n                                                        \n                                                                    any[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        searchFieldStr\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchFields:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:334\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cancel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        cancel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:365\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            convertToItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        convertToItem(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:369\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CompleterItem | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetTitle(data: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:395\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        search(term: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:347\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        term\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MultivalueFieldPipe.html":{"url":"pipes/MultivalueFieldPipe.html","title":"pipe - MultivalueFieldPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MultivalueFieldPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/MultivalueFieldPipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        multivalue\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(values: string, args?: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/report/app/MultivalueFieldPipe.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        values\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'multivalue'\n})\nexport class MultivalueFieldPipe implements PipeTransform {\n\n\n    public transform(values:string, args?:any[]):string {\n      var output = \"\";\n      for(var i=0; i \" + values[i] +\"\";\n      }\n      output = output + \"\";\n      return output;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PDFListComponent.html":{"url":"components/PDFListComponent.html","title":"component - PDFListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PDFListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-pdflist.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display PDFs related to this record\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-pdf-list\n            \n\n\n\n\n            \n                templateUrl\n                ./field-pdflist.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDownloadUrl\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDownloadUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDownloadUrl(attachment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-pdflist.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attachment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-pdflist.component.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     PDFListField\n\n                    \n                \n                    \n                        \n                            Type :     PDFListField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-pdflist.component.ts:100\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport moment from 'moment-es6';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PDFListField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n  pdfAttachments: object[];\n  latestPdf: object;\n  startsWith:string;\n  showHistoryTable:boolean = false;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n    this.startsWith = options['startsWith'] || 'rdmp-pdf';\n    var relatedObjects = this.relatedObjects;\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.pdfAttachments = [];\n  }\n\n\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\n/**\n* Component to display PDFs related to this record\n*\n*/\n@Component({\n  selector: 'rb-pdf-list',\n  templateUrl: './field-pdflist.html'\n})\nexport class PDFListComponent extends SimpleComponent implements OnInit {\n  field: PDFListField;\n\n  public ngOnInit() {\n    const oid = this.fieldMap._rootComp.oid;\n    if(oid) {\n      let allAttachmentsPromise = this.field.recordsService.getAttachments(oid);\n      let matchingExpression = new RegExp(`${this.field.startsWith}-[0-9a-fA-F]{32}-[0-9]+\\.pdf`);\n      var that = this;\n      allAttachmentsPromise.then(allAttachments => {\n        this.field.latestPdf = null;\n        _.forEach(allAttachments, (attachment:any) => {\n          if(matchingExpression.test(attachment.label)) {\n\n            attachment.dateUpdated = moment(attachment.dateUpdated).format('LLL');\n            this.field.pdfAttachments.push(attachment);\n            if(this.field.latestPdf == null || moment(this.field.latestPdf['dateUpdated']).isBefore(moment(attachment.dateUpdated))) {\n              this.field.latestPdf = attachment;\n            }\n          }\n        });\n\n        this.field.pdfAttachments.sort(function compare(a, b) {\n          let before = moment(a['dateUpdated']).isBefore(moment(b['dateUpdated']));\n          //We want descending order so let's reverse it\n          return before ? -1 : 1;\n        });\n\n      });\n\n    }\n  }\n\n  public getDownloadUrl(attachment) {\n    const oid = this.fieldMap._rootComp.oid;\n    return  `${this.field.recordsService.getBrandingAndPortalUrl}/record/${oid}/datastream?datastreamId=${attachment.label}`\n  }\n}\n\n    \n\n    \n        \n\n 0\">\n  &nbsp; Download a PDF of this plan\n   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->\n\n\n\n  &nbsp; Download a PDF of this plan\n  \n    \n    Toggle Dropdown\n  \n  \n    Download a previous version\n  \n\n\n\n\n\n  \n    \n      \n        \n          \n              \n                  Date createdDownload\n              \n          \n          \n            \n              {{ item.dateUpdated }}\n               Download\n            \n          \n        \n      \n      \n        Close\n      \n    \n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">    Download a PDF of this plan   1\" data-toggle=\"modal\" data-target=\"#pdfHistoryModal\" [ngClass]=\"field.cssClasses\">Download a previous version -->    Download a PDF of this plan          Toggle Dropdown        Download a previous version                                                                Date createdDownload                                                            {{ item.dateUpdated }}               Download                                                  Close            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PDFListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ParameterRetrieverComponent.html":{"url":"components/ParameterRetrieverComponent.html","title":"component - ParameterRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ParameterRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                parameter-retriever\n            \n\n\n\n            \n                template\n                \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUrlParameter\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUrlParameter\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUrlParameter(param: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:708\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        param\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:701\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     ParameterRetrieverField\n\n                    \n                \n                    \n                        \n                            Type :     ParameterRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:699\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ParameterRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Plan.html":{"url":"classes/Plan.html","title":"class - Plan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Plan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dashboardTitle\n                            \n                            \n                                dateCreated\n                            \n                            \n                                dateModified\n                            \n                            \n                                oid\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dashboardTitle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dashboardTitle:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateCreated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateCreated:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dateModified\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dateModified:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oid:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanTable.html":{"url":"classes/PlanTable.html","title":"class - PlanTable","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanTable\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/dashboard-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Plan[]\n\n                    \n                \n                    \n                        \n                            Type :     Plan[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/dashboard-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanTable {\n\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: Plan[]\n}\nexport class Plan {\n  oid: string\n  title: string\n  dateCreated: string\n  dateModified: string\n\n  dashboardTitle: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PublishDataLocationSelectorComponent.html":{"url":"components/PublishDataLocationSelectorComponent.html","title":"component - PublishDataLocationSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PublishDataLocationSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-publishdatalocationselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                publish-data-location-selector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-publishdatalocationselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editingNotes\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                editNotes\n                            \n                            \n                                    Public\n                                getAbsUrl\n                            \n                            \n                                    Public\n                                getDatalocations\n                            \n                            \n                                    Public\n                                hideEditNotes\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                saveNotes\n                            \n                            \n                                    Public\n                                selectAllLocations\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editNotes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editNotes(dataLocation, i)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:176\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dataLocation\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getAbsUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAbsUrl(location: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:172\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getDatalocations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getDatalocations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:168\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hideEditNotes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hideEditNotes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:181\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        ngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            saveNotes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        saveNotes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:185\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectAllLocations\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectAllLocations(checked)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:162\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        checked\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editingNotes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editingNotes:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                    \n                        \n                            Default value : {notes: '', index:-1}\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:156\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     PublishDataLocationSelectorField\n\n                    \n                \n                    \n                        \n                            Type :     PublishDataLocationSelectorField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-publishdatalocationselector.component.ts:155\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport * as Uppy from 'uppy';\n\ndeclare var jQuery: any;\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class PublishDataLocationSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  value: any[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  recordsService: RecordsService;\n  columns: object[];\n  newLocation:any = {type:\"url\", location:\"\",notes:\"\"};\n  dataTypes:object[] = [{\n    'label': 'URL',\n    'value': 'url',\n  },\n  {\n    'label': 'Physical location',\n    'value': 'physical',\n  },\n  {\n    'label': 'File path',\n    'value': 'file',\n  },\n  {\n    'label': 'Attachment',\n    'value': 'attachment'\n  }\n];\n\n  dataTypeLookup:any = {\n    'url':\"URL\",\n    'physical':\"Physical location\",\n    'attachment':\"Attachment\",\n    'file':\"File path\"\n  }\n\n  editNotesButtonText: string;\n  editNotesTitle: string;\n  cancelEditNotesButtonText: string;\n  applyEditNotesButtonText: string;\n  editNotesCssClasses: any;\n  typeHeader: string;\n  locationHeader: string;\n  notesHeader: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.accessDeniedObjects = [];\n\n    this.columns = options['columns'] || [];\n\n    this.editNotesButtonText = this.getTranslated(options['editNotesButtonText'], 'Edit');\n    this.editNotesTitle = this.getTranslated(options['editNotesTitle'], 'Edit Notes');\n    this.cancelEditNotesButtonText = this.getTranslated(options['cancelEditNotesButtonText'], 'Cancel');\n    this.applyEditNotesButtonText = this.getTranslated(options['applyEditNotesButtonText'], 'Apply');\n    this.editNotesCssClasses = options['editNotesCssClasses'] || 'form-control';\n    this.typeHeader =  this.getTranslated(options['typeHeader'], 'Type');\n    this.locationHeader =  this.getTranslated(options['locationHeader'], 'Location');\n    this.notesHeader =  this.getTranslated(options['notesHeader'], 'Notes');\n\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n  }\n\n  setValue(value:any, emitEvent:boolean = true) {\n    this.formModel.setValue(value, {emitEvent: emitEvent, emitModelToViewChange:true });\n    this.formModel.markAsTouched();\n    this.formModel.markAsDirty();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n\n  addLocation() {\n    this.value.push(this.newLocation);\n    this.setValue(this.value);\n    this.newLocation = {type:\"url\", location:\"\",notes:\"\"};\n  }\n\n  appendLocation(newLoc:any) {\n    this.value.push(newLoc);\n    this.setValue(this.value, true);\n  }\n\n  clearPendingAtt(value) {\n    _.each(value, (val:any) => {\n      if (val.type == 'attachment') {\n       _.unset(val, 'pending');\n      }\n    });\n  }\n\n  public populateDataLocation(oid, config: any) {\n      console.log(oid);\n      this.recordsService.getRecordMeta(oid).then(record => {\n        this.value = record.dataLocations;\n      });\n }\n\n  removeLocation(loc: any) {\n    _.remove(this.value, (val:any) => {\n      return val.type == loc.type && val.name == loc.name && val.location == loc.location;\n    });\n    this.setValue(this.value);\n  }\n}\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'publish-data-location-selector',\n  templateUrl: './field-publishdatalocationselector.html'\n})\nexport class PublishDataLocationSelectorComponent extends SimpleComponent {\n  field: PublishDataLocationSelectorField;\n  editingNotes: any = {notes: '', index:-1};\n\n  public ngOnInit() {\n\n  }\n\n  public selectAllLocations(checked){\n    _.each(this.field.value, (dataLocation:any) => {\n      dataLocation.selected = checked;\n    });\n  }\n\n  public getDatalocations() {\n    return this.field.value;\n  }\n\n  public getAbsUrl(location:string) {\n    return `${this.field.recordsService.getBrandingAndPortalUrl}/record/${location}`\n  }\n\n  public editNotes(dataLocation, i) {\n    this.editingNotes = {notes: dataLocation.notes, index:i};\n    jQuery(`#${this.field.name}_editnotes`).modal('show');\n  }\n\n  public hideEditNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n  }\n\n  public saveNotes() {\n    jQuery(`#${this.field.name}_editnotes`).modal('hide');\n    this.field.value[this.editingNotes.index].notes = this.editingNotes.notes;\n  }\n}\n\n    \n\n    \n        \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n    \n    \n      \n        \n          Select\n          {{ field.typeHeader }}\n          {{ field.locationHeader }}\n          {{ field.notesHeader }}\n        \n      \n      \n        \n          \n          {{ field.dataTypeLookup[dataLocation.type] }}\n          \n            \n            {{ dataLocation.location }}\n            \n            \n              \n                {{ dataLocation.name }}\n              \n              \n                {{ dataLocation.name }}\n              \n            \n          \n          \n            {{ dataLocation.notes }}\n            {{ field.editNotesButtonText }}\n          \n\n        \n      \n    \n  \n  Export -->\n\n\n\n\n  \n    \n      \n        &times;\n        \n      \n      \n        \n      \n      \n        \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                        Select          {{ field.typeHeader }}          {{ field.locationHeader }}          {{ field.notesHeader }}                                                {{ field.dataTypeLookup[dataLocation.type] }}                                  {{ dataLocation.location }}                                                      {{ dataLocation.name }}                                            {{ dataLocation.name }}                                                          {{ dataLocation.notes }}            {{ field.editNotesButtonText }}                                Export -->                    ×                                                                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PublishDataLocationSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RbValidator.html":{"url":"classes/RbValidator.html","title":"class - RbValidator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RbValidator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/validators.ts\n        \n\n            \n                Description\n            \n            \n                Custom RB-Specific Validators - static methods only\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                isEmpty\n                            \n                            \n                                    Static\n                                noEmptyInGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isEmpty(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/validators.ts:34\n                            \n                        \n\n\n                \n                    \n                            Forces validation on empty / null values\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            noEmptyInGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        noEmptyInGroup(field: any, dependentFieldNames: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/validators.ts:43\n                            \n                        \n\n\n                \n                    \n                            Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        dependentFieldNames\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ValidatorFn, Validators, AbstractControl, FormGroup } from '@angular/forms';\nimport * as _ from \"lodash\";\n\n/**\n * Custom RB-Specific Validators - static methods only\n *\n * Author: Shilo Banihit\n *\n */\nexport class RbValidator {\n\n  /**\n  * Forces validation on empty / null values\n  */\n  static isEmpty(control: AbstractControl ): boolean {\n    return (control && (_.isEmpty(control.value) || control.value.length == 0));\n  }\n\n  /**\n  *\n  * Makes sure all fields have values otherwise this will return an error object containing the emptyFields\n  *\n  */\n  static noEmptyInGroup(field: any, dependentFieldNames: string[]): ValidatorFn {\n    return (control: AbstractControl ): {[key: string]: any} => {\n      const group = field.formModel;\n      if (group) {\n        const status: {empty: boolean, emptyFields: any[]} = {empty: false, emptyFields: []};\n        _.forEach(dependentFieldNames, (f:any)=> {\n          const isEmpty = RbValidator.isEmpty(group.controls[f]);\n          if (isEmpty) {\n            status.emptyFields.push(f);\n          }\n          status.empty = status.empty || (isEmpty != null);\n        });\n        const retval = status.empty ? status : null;\n        return retval;\n      }\n      console.log(`Group doesn't exist yet: ${field.name}`);\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordActionResult.html":{"url":"classes/RecordActionResult.html","title":"class - RecordActionResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordActionResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                oid\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:227\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            oid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        oid:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:226\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            success\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        success:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:225\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordMetadataRetrieverComponent.html":{"url":"components/RecordMetadataRetrieverComponent.html","title":"component - RecordMetadataRetrieverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordMetadataRetrieverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/record-meta.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-metadata-retriever\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RecordMetadataRetrieverField\n\n                    \n                \n                    \n                        \n                            Type :     RecordMetadataRetrieverField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/record-meta.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { RecordsService } from './records.service';\nimport { SimpleComponent } from './field-simple.component';\n\nexport class RecordMetadataRetrieverField extends FieldBase {\n  parameterName: string;\n  recordsService: RecordsService;\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.recordsService = this.getFromInjector(RecordsService);\n    this.parameterName = options.parameterName || '';\n  }\n\n  public publishMetadata(oid: any, config: any) {\n    this.recordsService.getRecordMeta(oid).then(data => {\n      data.oid = oid;\n      this.onValueUpdate.emit(data);\n    });\n  }\n\n}\n\n@Component({\n  selector: 'record-metadata-retriever',\n  template: `\n  `,\n})\nexport class RecordMetadataRetrieverComponent extends SimpleComponent {\n  field: RecordMetadataRetrieverField;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordMetadataRetrieverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RecordSearchModule.html":{"url":"modules/RecordSearchModule.html","title":"module - RecordSearchModule","body":"\n                   \n\n\n\n\n  Modules\n  RecordSearchModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_RecordSearchComponent_providers\n\n\n\ncluster_RecordSearchModule_imports\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nLocation\n\nLocation\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/record_search/app/record_search.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                RecordSearchComponent\n                            \n                            \n                                RecordSearchRefinerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                RecordSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { RecordSearchComponent }  from './';\nimport { RecordSearchRefinerComponent } from './';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule],\n  declarations: [ RecordSearchRefinerComponent, RecordSearchComponent  ],\n  providers:    [ RecordSearchRefinerComponent ],\n  bootstrap:    [ RecordSearchComponent]\n})\nexport class RecordSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchParams.html":{"url":"classes/RecordSearchParams.html","title":"class - RecordSearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRefiners\n                            \n                            \n                                basicSearch\n                            \n                            \n                                recordType\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addActiveRefiner\n                            \n                            \n                                clear\n                            \n                            \n                                filterActiveRefinersWithNoData\n                            \n                            \n                                getHttpQuery\n                            \n                            \n                                getRefinerConfig\n                            \n                            \n                                getRefinerConfigs\n                            \n                            \n                                hasActiveRefiners\n                            \n                            \n                                parseQueryStr\n                            \n                            \n                                setFacetValues\n                            \n                            \n                                setRefinerConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(recType: string)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:261\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        recType\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeRefiners\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeRefiners:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:260\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            basicSearch\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        basicSearch:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:259\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            recordType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        recordType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:258\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            refinerConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        refinerConfig:     RecordSearchRefiner[]\n\n                    \n                \n                    \n                        \n                            Type :     RecordSearchRefiner[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:261\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addActiveRefiner\n                            \n                            \n                        \n                    \n                \n                \n                    \naddActiveRefiner(refiner: RecordSearchRefiner)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:310\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        refiner\n                                                        \n                                                                    RecordSearchRefiner\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:269\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterActiveRefinersWithNoData\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilterActiveRefinersWithNoData()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:341\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHttpQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHttpQuery(searchUrl: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:294\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        searchUrl\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefinerConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefinerConfig(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:278\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRefinerConfigs\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRefinerConfigs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:306\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     {}\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActiveRefiners\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActiveRefiners()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:348\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parseQueryStr\n                            \n                            \n                        \n                    \n                \n                \n                    \nparseQueryStr(queryStr: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:321\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        queryStr\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFacetValues\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFacetValues(facets: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:358\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        facets\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setRefinerConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetRefinerConfig(config: RecordSearchRefiner[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:284\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    RecordSearchRefiner[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RecordSearchRefiner.html":{"url":"classes/RecordSearchRefiner.html","title":"class - RecordSearchRefiner","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RecordSearchRefiner\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/records.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeValue\n                            \n                            \n                                alwaysActive\n                            \n                            \n                                name\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                            \n                                typeLabel\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setCurrentValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(opts: any)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/records.service.ts:237\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opts\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeValue:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:237\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alwaysActive\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alwaysActive:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:235\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:231\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:233\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            typeLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        typeLabel:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:236\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:234\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setCurrentValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetCurrentValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/records.service.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable, Inject, ApplicationRef }       from '@angular/core';\nimport { FieldBase }     from './field-base';\nimport { BaseService } from '../base-service';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FieldControlMetaService } from './field-control-meta.service';\nimport { Observable } from 'rxjs/Observable';\nimport * as _ from \"lodash\";\nimport { ConfigService } from '../config-service';\ndeclare var io: any;\n/**\n * Plan Client-side services\n *\n *\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RecordsService extends BaseService {\n\n  constructor (\n    @Inject(Http) http: Http,\n    @Inject(FieldControlMetaService) protected fcmetaService: FieldControlMetaService,\n    @Inject(ConfigService) protected configService: ConfigService,\n    protected app: ApplicationRef\n  ) {\n    super(http, configService);\n  }\n\n  getForm(oid: string = null, recordType: string = null, editable: boolean = true) {\n    if (_.isEmpty(oid)) {\n      oid = null;\n    }\n    return this.getFormFieldsMeta(recordType, editable, oid).then((form:any) => {\n      return this.fcmetaService.getLookupData(form.fieldsMeta).flatMap((fields:any) => {\n        form.fieldsMata = fields;\n        return Observable.of(form);\n      });\n    });\n  }\n\n  addRenderCompleteElement(fieldsMeta){\n    var renderCompleteElement = {\n            \"class\" : \"Container\",\n            \"compClass\" : \"TextBlockComponent\",\n            \"definition\" : {\n                \"value\" : \"\",\n                \"type\" : \"span\",\n                \"cssClasses\" : \"form-render-complete\"\n            }\n        };\n\n    fieldsMeta.push(renderCompleteElement);\n\n  }\n\n  getFormFields(recordType:string, oid: string=null, editable:boolean) {\n    const ts = new Date().getTime();\n    console.log(\"Oid is: \" + oid);\n    const url = oid ? `${this.brandingAndPortalUrl}/record/form/auto/${oid}?edit=${editable}&ts=${ts}` : `${this.brandingAndPortalUrl}/record/form/${recordType}?edit=${editable}&ts=${ts}`;\n    console.log(\"URL is: \" + url);\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res:any) => this.extractData(res));\n  }\n\n  getFormFieldsMeta(recordType:string, editable:boolean, oid:string=null) {\n    return this.getFormFields(recordType, oid, editable).then((form:any) => {\n      if (form && form.fields) {\n        if(!editable){\n          // Add an empty element to the end of the form so a screenshot tool can detect the rendered form reliably\n          this.addRenderCompleteElement(form.fields);\n        }\n        form.fieldsMeta = this.fcmetaService.getFieldsMeta(form.fields);\n      } else {\n        console.error(\"Error loading form:\" + recordType);\n        throw form;\n      }\n      return form;\n    });\n  }\n\n  create(record: any, recordType: string, targetStep: string = '') {\n    return this.http.post(`${this.brandingAndPortalUrl}/recordmeta/${recordType}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  update(oid: string, record: any, targetStep: string = '') {\n    return this.http.put(`${this.brandingAndPortalUrl}/recordmeta/${oid}${ this.getTargetStepParam(targetStep, '?') }`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n\n  protected getTargetStepParam(targetStep, delim) {\n    return _.isEmpty(targetStep) ? '' : `${delim}targetStep=${targetStep}`;\n  }\n\n  stepTo(oid: string, record: any, targetStep: string) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/workflow/step/${targetStep}/${oid}`, record, this.getOptionsClient())\n    .map((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getDashboardUrl(recType:string='rdmp') {\n    return `${this.brandingAndPortalUrl}/dashboard/${recType}`;\n  }\n\n  getAttachments(oid: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/${oid}/attachments`, this.getOptionsClient()).toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  modifyEditors(records, username, email) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/editors/modify`, {records:records, username:username, email:email}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  updateResponsibilities(records, role, updateData) {\n    return this.http.post(`${this.brandingAndPortalUrl}/record/responsibility/update`, {records:records, role:role, updateData:updateData}, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getTransferResponsibility(recordType) {\n    return this.http.get(`${this.brandingAndPortalUrl}/transferconfig/${recordType}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Object);\n  }\n\n  search(params: RecordSearchParams) {\n    let refinedSearchStr = '';\n    params.filterActiveRefinersWithNoData();\n    if (_.size(params.activeRefiners) > 0) {\n      let exactSearchNames = '';\n      let exactSearchValues = '';\n      let facetSearchNames = '';\n      let facetSearchValues = '';\n      _.forEach(params.activeRefiners, (refiner: RecordSearchRefiner)=> {\n        switch (refiner.type) {\n          case \"exact\":\n            exactSearchNames = `${_.isEmpty(exactSearchNames) ? `&exactNames=` : `${exactSearchNames},`}${refiner.name}`;\n            exactSearchValues = `${exactSearchValues}&exact_${refiner.name}=${refiner.value}`;\n            break;\n          case \"facet\":\n            facetSearchNames = `${_.isEmpty(facetSearchNames) ? `&facetNames=` : `${facetSearchNames},`}${refiner.name}`;\n            if (!_.isEmpty(refiner.activeValue)) {\n              facetSearchValues = `${facetSearchValues}&facet_${refiner.name}=${refiner.activeValue}`;\n            }\n            break;\n        }\n      });\n      refinedSearchStr = `${exactSearchNames}${exactSearchValues}${facetSearchNames}${facetSearchValues}`;\n    }\n    return this.http.get(`${this.brandingAndPortalUrl}/record/search/${params.recordType}/?searchStr=${params.basicSearch}${refinedSearchStr}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res) as RecordActionResult);\n  }\n\n  getType(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getAllTypes() {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/type/`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkflowSteps(name: string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/wfSteps/${name}`, this.getOptionsClient())\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getRecordMeta(oid:string=null) {\n    return this.http.get(`${this.brandingAndPortalUrl}/record/metadata/`+oid, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n\n  executeAction(action:string, params:any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/action/${action}`, params, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res));\n  }\n\n  getAsyncProgress(fq:string) {\n    return this.http.get(`${this.brandingAndPortalUrl}/asynch?fq=${fq}`, this.options)\n    .toPromise()\n    .then((res: any) => this.extractData(res));\n  }\n\n  subscribeToAsyncProgress(oid: string = null, connectCb) {\n    io.socket.get(`${this.brandingAndPortalUrl}/asynch/subscribe/${oid}`, connectCb);\n  }\n\n  delete(oid: string) {\n    return this.http.delete(`${this.brandingAndPortalUrl}/record/delete/${oid}`, this.getOptionsClient())\n    .map((res:any) => this.extractData(res));\n  }\n}\n\nexport class RecordActionResult {\n  success:boolean;\n  oid: string;\n  message: string;\n}\n\nexport class RecordSearchRefiner {\n  name: string;\n  title: string;\n  type: string;\n  value: any;\n  alwaysActive: boolean;\n  typeLabel: string;\n  activeValue: any;\n\n  constructor(opts: any = {}) {\n    this.name = opts.name;\n    this.title = opts.title;\n    this.type = opts.type;\n    this.value = opts.value;\n    this.typeLabel = opts.typeLabel;\n    this.alwaysActive = opts.alwaysActive;\n  }\n\n  setCurrentValue(value: any) {\n    if (this.type == \"facet\") {\n      this.activeValue = value;\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class RecordSearchParams {\n  recordType: string;\n  basicSearch: string;\n  activeRefiners: any[];\n  refinerConfig: RecordSearchRefiner[];\n\n  constructor(recType: string) {\n    this.recordType = recType;\n    this.activeRefiners = [];\n    this.clear();\n  }\n\n  clear() {\n    this.basicSearch = null;\n    _.remove(this.activeRefiners, refiner => {\n      refiner.value = null;\n      refiner.activeValue = null;\n      return !refiner.alwaysActive;\n    });\n  }\n\n  getRefinerConfig(name: string) {\n    return _.find(this.refinerConfig, (config) => {\n      return config.name == name;\n    });\n  }\n\n  setRefinerConfig(config: RecordSearchRefiner[]) {\n    this.refinerConfig = config;\n    // parse through and activate those set as active...\n    _.forEach(this.refinerConfig, (refinerConfig) => {\n      if (refinerConfig.alwaysActive) {\n        this.addActiveRefiner(refinerConfig);\n      }\n    });\n  }\n\n  getHttpQuery(searchUrl: string) {\n    let refinerValues = '';\n    _.forEach(this.activeRefiners, (refiner:RecordSearchRefiner) => {\n      if (refiner.type == \"facet\") {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.activeValue) ? '' : refiner.activeValue}`;\n      } else {\n        refinerValues = `${refinerValues}&refiner|${refiner.name}=${_.isEmpty(refiner.value) ? '' : refiner.value}`;\n      }\n    });\n    return `${searchUrl}?q=${this.basicSearch}&type=${this.recordType}${refinerValues}`;\n  }\n\n  getRefinerConfigs() {\n    return this.refinerConfig;\n  }\n\n  addActiveRefiner(refiner: RecordSearchRefiner) {\n    const existingRefiner = _.find(this.activeRefiners, (activeRefiner:RecordSearchRefiner) => {\n      return activeRefiner.name == refiner.name;\n    });\n    if (existingRefiner) {\n      existingRefiner.value = refiner.value;\n    } else {\n      this.activeRefiners.push(refiner);\n    }\n  }\n\n  parseQueryStr(queryStr:string) {\n    queryStr = decodeURI(queryStr);\n    let refinerValues = {};\n    _.forEach(queryStr.split('&'), (q)=> {\n      const qObj = q.split('=');\n      if (_.startsWith(qObj[0], \"q\")) {\n        this.basicSearch = qObj[1];\n      }\n      if (_.startsWith(qObj[0], \"refiner|\")) {\n        const refinerName = qObj[0].split('|')[1];\n        refinerValues[refinerName] = qObj[1];\n      }\n    });\n    _.forOwn(refinerValues, (value, name) => {\n      const config = this.getRefinerConfig(name);\n      config.setCurrentValue(value);\n      this.addActiveRefiner(config);\n    });\n  }\n\n  filterActiveRefinersWithNoData() {\n    const removed = _.remove(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      const value = refiner.type == 'exact' ? refiner.value : refiner.activeValue;\n      return  !refiner.alwaysActive && (_.isEmpty(value) || _.isUndefined(value));\n    });\n  }\n\n  hasActiveRefiners() {\n    let hasActive = false;\n    _.forEach(this.activeRefiners, (refiner: RecordSearchRefiner) => {\n      if (!hasActive && (!_.isEmpty(refiner.value))) {\n        hasActive = true;\n      }\n    });\n    return hasActive;\n  }\n\n  setFacetValues(facets: any) {\n    _.forEach(facets, (facet: any) => {\n      const refiner = _.find(this.activeRefiners, (refinerConfig: RecordSearchRefiner) => {\n        return refinerConfig.name == facet.name;\n      });\n      if (refiner) {\n        refiner.value = facet.values;\n      }\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RecordSearchRefinerComponent.html":{"url":"components/RecordSearchRefinerComponent.html","title":"component - RecordSearchRefinerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RecordSearchRefinerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/record_search/app/record-search-refiner.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                record-search-refiner\n            \n\n\n\n\n            \n                templateUrl\n                ./record_search_refiner.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilter\n                            \n                            \n                                hasValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isSearching\n                            \n                            \n                                refinerConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onApplyFilter\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isSearching\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        refinerConfig\n                    \n                    \n                            \n                            Type :    RecordSearchRefiner\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onApplyFilter\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:12\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyFilter(event: any, refinerValue: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        refinerValue\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasValue()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/record_search/app/record-search-refiner.component.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Inject, Input, Output, ElementRef, EventEmitter } from '@angular/core';\nimport { RecordSearchRefiner} from './shared/form/records.service';\nimport * as _ from \"lodash\";\n\n@Component({\n  selector: 'record-search-refiner',\n  templateUrl: './record_search_refiner.html'\n})\nexport class RecordSearchRefinerComponent {\n  @Input() refinerConfig: RecordSearchRefiner;\n  @Input() isSearching: boolean;\n  @Output() onApplyFilter: EventEmitter = new EventEmitter();\n\n  applyFilter(event:any, refinerValue:any = null) {\n    event.preventDefault();\n    if (this.hasValue()) {\n      this.refinerConfig.activeValue = refinerValue;\n      this.onApplyFilter.emit(this.refinerConfig);\n    }\n  }\n\n  hasValue() {\n    return !_.isEmpty(this.refinerConfig.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      {{ refinerConfig.title | translate }}\n    \n  \n  \n     {{ refinerConfig.typeLabel | translate }} \n    \n      \n      \n        {{ 'search-refine-apply-filter' | translate }}\n      \n    \n    \n      \n         0 && facetValue.value\">\n           {{ facetValue.value }} ({{ facetValue.count }})\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ refinerConfig.title | translate }}             {{ refinerConfig.typeLabel | translate }}                         {{ \\'search-refine-apply-filter\\' | translate }}                             0 && facetValue.value\">           {{ facetValue.value }} ({{ facetValue.count }})                    '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RecordSearchRefinerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectDataComponent.html":{"url":"components/RelatedObjectDataComponent.html","title":"component - RelatedObjectDataComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectDataComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectdata.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-relatedobjectdata\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectdata.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RelatedObjectDataField\n\n                    \n                \n                    \n                        \n                            Type :     RelatedObjectDataField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectdata.component.ts:134\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { RecordsService } from './records.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/zip';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectDataField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  relatedObjects: object[];\n  accessDeniedObjects: object[];\n  failedObjects: object[];\n  hasInit: boolean;\n  recordsService: RecordsService;\n  columns: object[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.relatedObjects = [];\n    this.accessDeniedObjects = [];\n    this.failedObjects = [];\n    this.columns = options['columns'] || [];\n\n    var relatedObjects = this.relatedObjects;\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordsService = this.getFromInjector(RecordsService);\n\n  }\n\n/**\n* Loading the metadata for each related object in the array\n*/\n  asyncLoadData() {\n    let getRecordMetaObs = [];\n    var that = this;\n    _.forEach(this.value, (item: any) => {\n      getRecordMetaObs.push(fromPromise(this.recordsService.getRecordMeta(item.id)).flatMap(meta => {\n        if (!meta) {\n          that.failedObjects.push(meta);\n        } else if (meta['status'] == \"Access Denied\") {\n          that.accessDeniedObjects.push(meta);\n        } else if (meta['title']) {\n          that.relatedObjects.push(meta);\n        } else {\n          that.failedObjects.push(meta);\n        }\n        return Observable.of(null);\n      }));\n    });\n    if ( getRecordMetaObs.length > 0 ) {\n      return Observable.zip(...getRecordMetaObs);\n    } else {\n      return Observable.of(null);\n    }\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n    this.formModel = new FormControl(this.value || []);\n\n    if (this.value) {\n      this.setValue(this.value);\n    }\n\n    return this.formModel;\n  }\n\n  setValue(value: any) {\n    this.formModel.patchValue(value, { emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = [];\n    return this.value;\n  }\n}\n\ndeclare var aotMode\n// Setting the template url to a constant rather than directly in the component as the latter breaks document generation\nlet rbRelatedObjectDataTemplate = './field-relatedobjectdata.html';\nif (typeof aotMode == 'undefined') {\n  rbRelatedObjectDataTemplate = '../angular/shared/form/field-relatedobjectdata.html';\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-relatedobjectdata',\n  templateUrl: './field-relatedobjectdata.html'\n})\nexport class RelatedObjectDataComponent extends SimpleComponent {\n  field: RelatedObjectDataField;\n\n}\n\n    \n\n    \n        \n\n  \n    \n      \n          \n              {{ header.label }}\n          \n      \n      \n        \n          \n            \n              \n              \n              \n              {{ column.link.pattern | stringTemplate:item }}\n              {{item[column.property]}}\n              {{ item[column.property] }}\n            \n          \n        \n      \n    \n     0\">There were {{ field.failedObjects.length }} records that failed to load\n     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{ header.label }}                                                                                                            {{ column.link.pattern | stringTemplate:item }}              {{item[column.property]}}              {{ item[column.property] }}                                             0\">There were {{ field.failedObjects.length }} records that failed to load     0\">There were {{ field.accessDeniedObjects.length }} records that you do not have access to  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectDataComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RelatedObjectSelectorComponent.html":{"url":"components/RelatedObjectSelectorComponent.html","title":"component - RelatedObjectSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RelatedObjectSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-relatedobjectselector.component.ts\n\n\n    \n        Description\n    \n    \n        Component to display information from related objects within ReDBox\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-RelatedObjectSelector\n            \n\n\n\n\n            \n                templateUrl\n                ./field-relatedobjectselector.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hasFilteredResults\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                            \n                            Type :    RelatedObjectSelectorField\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:143\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFilteredResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFilteredResults()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-relatedobjectselector.component.ts:145\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Inject, Injector, EventEmitter} from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { DashboardService } from '../dashboard-service';\nimport { PlanTable, Plan } from '../dashboard-models';\n\n\n\n/**\n * Contributor Model\n *\n *\n * @author Shilo Banihit\n *\n */\nexport class RelatedObjectSelectorField extends FieldBase {\n\n  showHeader: boolean;\n  validators: any;\n  enabledValidators: boolean;\n  hasInit: boolean;\n  dashboardService: DashboardService;\n  plans: PlanTable;\n  searchFilterName: any;\n  filteredPlans: Plan[];\n  recordType:string;\n  columnTitle:string;\n\n  relatedObjectSelected:EventEmitter = new EventEmitter();\n  resetSelectorEvent: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RelatedObjectDataField';\n\n    this.columnTitle = options['columnTitle'] || \"Record title\";\n    this.value = options['value'] || this.setEmptyValue();\n    this.recordType = options['recordType'];\n    this.dashboardService = this.getFromInjector(DashboardService);\n    var that = this;\n    this.dashboardService.getAllRecordsCanEdit(this.recordType,'').then((draftPlans: PlanTable) => {\n      this.plans = draftPlans;\n    });\n  }\n\n  recordSelected(record: any, config: any) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n  }\n\n  recordSelectedEmit(record, event) {\n    this.setValue({oid: record.oid, title:record.title});\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(record.oid);\n    }\n    this.relatedObjectSelected.emit(record.oid);\n  }\n\n  resetSelector() {\n    this.setEmptyValue();\n    if(this.fieldMap) {\n      this.fieldMap._rootComp.setRelatedRecordId(null);\n    }\n    this.resetSelectorEvent.emit();\n  }\n\n  createFormModel(valueElem: any = undefined): any {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n\n      this.formModel = new FormControl(this.value || []);\n\n      if (this.value) {\n        this.setValue(this.value);\n        if(this.fieldMap) {\n          this.fieldMap._rootComp.setRelatedRecordId(this.value.oid);\n        }\n      }\n\n    return this.formModel;\n  }\n\n  setValue(value:any) {\n    this.value=value;\n    this.formModel.patchValue(value, {emitEvent: false });\n    this.formModel.markAsTouched();\n  }\n\n  setEmptyValue() {\n    this.value = {};\n    return this.value;\n  }\n\n  onFilterChange() {\n    this.filteredPlans = _.filter(this.plans.items, (plan: any) => {\n      plan.selected = false;\n      const title = _.isArray(plan.title) ? plan.title[0] : plan.title;\n      return _.toLower(title).includes(_.toLower(this.searchFilterName));\n    });\n  }\n\n  resetFilter() {\n    this.searchFilterName = null;\n    this.onFilterChange();\n  }\n\n}\n\n/**\n* Component to display information from related objects within ReDBox\n*\n*\n*\n*/\n@Component({\n  selector: 'rb-RelatedObjectSelector',\n  templateUrl: './field-relatedobjectselector.html'\n})\nexport class RelatedObjectSelectorComponent extends SimpleComponent {\n  @Input() field: RelatedObjectSelectorField;\n\n  hasFilteredResults() {\n    return this.field.searchFilterName && !_.isEmpty(_.trim(this.field.searchFilterName)) && this.field.filteredPlans && this.field.filteredPlans.length > 0;\n  }\n}\n\n    \n\n    \n        \n   {{field.label}}\n   {{ field.value.title }}\n\n\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n       {{ field.value.title }} {{ 'change-text' | translate }}\n    \n    \n      \n        {{ 'search-by-name' | translate }}\n        \n        {{ 'transfer-ownership-reset' | translate }}\n      \n      \n      \n        \n          \n            \n              {{ field.columnTitle }}\n            \n          \n          \n            \n              {{ plan.title }}\n            \n          \n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   {{field.label}}   {{ field.value.title }}            {{field.label}} {{ getRequiredLabelStr()}}                         {{ field.value.title }} {{ \\'change-text\\' | translate }}                      {{ \\'search-by-name\\' | translate }}                {{ \\'transfer-ownership-reset\\' | translate }}                                                              {{ field.columnTitle }}                                                          {{ plan.title }}                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RelatedObjectSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RepeatableComponent.html":{"url":"classes/RepeatableComponent.html","title":"class - RepeatableComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RepeatableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-repeatable.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContainer\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:242\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRequiredError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableContributorComponent.html":{"url":"components/RepeatableContributorComponent.html","title":"component - RepeatableContributorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableContributorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-repeatable.component.ts\n\n\n\n    \n        Extends\n    \n    \n            RepeatableComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-contributor\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{field.fields[0].label}} {{getRequiredLabelStr()}}\n        \n      \n    \n  \n  \n    \n  \n  \n    \n      \n    \n    \n       1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n       1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n       1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n       1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n    \n  \n  \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  \n    \n      {{field.fields[0].label}}\n    \n    \n      {{field.fields[0].nameColHdr}}\n      {{field.fields[0].emailColHdr}}\n      {{field.fields[0].roleColHdr}}\n      {{field.fields[0].orcidColHdr}}\n    \n    \n      {{fieldElem.value.text_full_name}}\n      {{fieldElem.value.email}}\n      {{fieldElem.value.role}}\n      {{fieldElem.value.orcid}}\n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                    Public\n                                moveDown\n                            \n                            \n                                    Public\n                                moveUp\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                reactEvent\n                            \n                            \n                                removeElem\n                            \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:405\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            moveDown\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        moveDown(event: any, i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:441\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            moveUp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        moveUp(event: any, i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:430\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:399\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            reactEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        reactEvent(eventName: string, eventData: any, origData: any, elem: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:421\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        eventData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        origData\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        elem\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:414\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContributor\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContributor\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:397\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContainer\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:242\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{field.fields[0].label}} {{getRequiredLabelStr()}}                                                       1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{\\'margin-top\\': fieldElem.marginTop}\" [attr.aria-label]=\"\\'move-up-button\\' | translate\">       1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{\\'margin-top\\': fieldElem.marginTop}\" [attr.aria-label]=\"\\'move-down-button\\' | translate\">       1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{\\'margin-top\\': fieldElem.marginTop}\" >{{field.removeButtonText}}       1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{\\'margin-top\\': fieldElem.marginTop}\" [attr.aria-label]=\"\\'remove-button-label\\' | translate\" >                  {{field.addButtonText}}                        {{field.fields[0].label}}              {{field.fields[0].nameColHdr}}      {{field.fields[0].emailColHdr}}      {{field.fields[0].roleColHdr}}      {{field.fields[0].orcidColHdr}}              {{fieldElem.value.text_full_name}}      {{fieldElem.value.email}}      {{fieldElem.value.role}}      {{fieldElem.value.orcid}}      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableContributorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableGroupComponent.html":{"url":"components/RepeatableGroupComponent.html","title":"component - RepeatableGroupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableGroupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-group.component.ts\n\n\n    \n        Description\n    \n    \n        Repeatable Generic Component\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n    \n\n    \n        Extends\n    \n    \n            RepeatableComponent\n    \n\n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-group\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n  \n  \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableGroupComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-group.component.ts:232\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContainer\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:242\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\nimport * as _ from \"lodash\";\n/**\n#### Generic Group Component\n\nGeneric component for grouping components together. The resulting JSON will have the field names as keys.\n\n```\n{\n   class: 'Container',\n   compClass: 'GenericGroupComponent',\n   definition: {\n     name: \"related_website\",\n     cssClasses: \"form-inline\",\n     fields: [\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_url',\n           label: '@dmpt-related-website-url',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_title',\n           label: '@dmpt-related-website-title',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       },\n       {\n         class: 'TextField',\n         editOnly: true,\n         definition: {\n           name: 'related_notes',\n           label: '@dmpt-related-website-notes',\n           type: 'text',\n           required: true,\n           groupName: 'related_website',\n           groupClasses: 'width-30',\n           cssClasses : \"width-80 form-control\"\n         }\n       }\n     ]\n   }\n }\n```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'generic-group-field',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n          \n            \n          \n          \n            {{removeBtnText}}\n            \n          \n        \n      \n    \n    \n      \n        \n      \n    \n  \n  \n    \n      \n    \n  \n  `,\n})\nexport class GenericGroupComponent extends EmbeddableComponent {\n  static clName = 'GenericGroupComponent';\n\n}\n\n/**\n * ### Repeatable Generic Component\n *\n *\n * ```\n * {\n   class: 'RepeatableContainer',\n   compClass: 'RepeatableGroupComponent',\n   definition: {\n     name: \"related_websites\",\n     label: \"@dmpt-related-website\",\n     help: \"@dmpt-related-website-help\",\n     forceClone: ['fields', 'fieldMap'],\n     fields: [\n       {\n         class: 'Container',\n         compClass: 'GenericGroupComponent',\n         definition: {\n           name: \"related_website\",\n           cssClasses: \"form-inline\",\n           fields: [\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_url',\n                 label: '@dmpt-related-website-url',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_title',\n                 label: '@dmpt-related-website-title',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             },\n             {\n               class: 'TextField',\n               editOnly: true,\n               definition: {\n                 name: 'related_notes',\n                 label: '@dmpt-related-website-notes',\n                 type: 'text',\n                 required: true,\n                 groupName: 'related_website',\n                 groupClasses: 'width-30',\n                 cssClasses : \"width-80 form-control\"\n               }\n             }\n           ]\n         }\n       }\n     ]\n   }\n }\n ```\n * @author Shilo Banihit\n */\n@Component({\n  selector: 'repeatable-group',\n  template: `\n  \n    \n      \n        {{field.label}} {{getRequiredLabelStr()}}\n        \n      \n      {{field.help}}\n    \n    \n      \n        \n           1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n        \n      \n      \n        &nbsp;\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableGroupComponent extends RepeatableComponent {\n  static clName = 'RepeatableGroupComponent';\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{getRequiredLabelStr()}}              {{field.help}}                       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                                                {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableGroupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableTextfieldComponent.html":{"url":"components/RepeatableTextfieldComponent.html","title":"component - RepeatableTextfieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableTextfieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n            RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                removeElem\n                            \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:174\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:178\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableTextfieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:168\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContainer\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:242\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n        \n      \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{field.label}} {{ getRequiredLabelStr() }}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                  {{field.label}} is required      {{field.validationMessages.required}}                  {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableTextfieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RepeatableVocabComponent.html":{"url":"components/RepeatableVocabComponent.html","title":"component - RepeatableVocabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RepeatableVocabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-repeatable.component.ts\n\n\n\n    \n        Extends\n    \n    \n            RepeatableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                repeatable-vocab\n            \n\n\n\n            \n                template\n                \n  \n    \n    {{field.label}}\n      \n    \n    \n    \n  \n  \n    \n       1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n    \n  \n  \n    &nbsp;\n    \n    \n      {{field.addButtonText}}\n      \n    \n  \n\n\n  {{field.label}}\n  \n    \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addElem\n                            \n                            \n                                hasRequiredError\n                            \n                            \n                                removeElem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addElem\n                            \n                            \n                        \n                    \n                \n                \n                    \naddElem(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:244\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:252\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeElem\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveElem(event: any, i: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:248\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        i\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'RepeatableVocabComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:319\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableVocab\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableVocab\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-repeatable.component.ts:318\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     RepeatableContainer\n\n                    \n                \n                    \n                        \n                            Type :     RepeatableContainer\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RepeatableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in RepeatableComponent:242\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { VocabField } from './field-vocab.component';\nimport { Container } from './field-simple';\nimport { FormControl, FormArray, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { ChangeDetectorRef } from '@angular/core';\nimport { ContributorField } from './field-contributor.component';\n/**\n * Repeatable Field Container\n *\n * Author: Shilo Banihit\n *\n */\nexport class RepeatableContainer extends Container {\n  addButtonText: string;\n  removeButtonText: string;\n  skipClone: string[];\n  forceClone: any[];\n  addButtonTextClass: any;\n  removeButtonTextClass: any;\n  addButtonClass: any;\n  removeButtonClass: any;\n  moveUpButtonClass: any;\n  moveDownButtonClass: any;\n  delegateErrorHandling: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.hasGroup = true;\n    this.addButtonText = options['addButtonText'] || '';\n    this.removeButtonText = options['removeButtonText'] || null;\n    this.skipClone = options['skipClone'] || [];\n    this.forceClone = options['forceClone'] || [];\n    this.addButtonTextClass = options['addButtonTextClass'] || 'btn btn-success pull-right';\n    this.addButtonClass = options['addButtonClass'] || 'fa fa-plus-circle btn text-20 pull-right btn-success';\n    this.removeButtonTextClass = options['removeButtonTextClass'] || 'btn btn-danger pull-right';\n    this.removeButtonClass = options['removeButtonClass'] || 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n    this.moveUpButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-up btn text-20 pull-left btn-primary';\n    this.moveDownButtonClass = options['addButtonClass'] || 'fa fa-chevron-circle-down btn text-20 pull-left btn-primary';\n    this.delegateErrorHandling = !_.isUndefined(options['delegateErrorHandling']) ? options['delegateErrorHandling'] : true;\n  }\n\n  getInitArrayEntry() {\n    if (this.fields[0].isGroup) {\n      const grp = {};\n      const fm = {};\n      const fg = this.fields[0].getGroup(grp, fm);\n      return [fg];\n    }\n    return [this.fields[0].createFormModel()];\n  }\n\n  getGroup(group: any, fieldMap: any) {\n    this.fieldMap = fieldMap;\n    fieldMap[this.name] = {field:this};\n    if (!this.value || this.value.length == 0) {\n      this.formModel = this.required ? new FormArray(this.getInitArrayEntry(), Validators.required) : new FormArray(this.getInitArrayEntry());\n    } else {\n      let fieldCtr = 0;\n      const baseField = this.fields[0];\n      const elems = [];\n      this.fields = _.map(this.value, (valueElem:any) => {\n        let fieldClone = null;\n        if (fieldCtr == 0) {\n          fieldClone = baseField;\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        } else {\n          fieldClone = this.createNewElem(baseField, _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem);\n          fieldClone.value = _.isArray(valueElem) ? valueElem[fieldCtr] : valueElem;\n        }\n        fieldCtr++;\n        elems.push(fieldClone.createFormModel());\n        return fieldClone;\n      });\n      this.formModel = this.required ? new FormArray(elems, Validators.required) : new FormArray(elems);\n      _.each(this.fields, f => {\n        f.setupEventHandlers();\n      });\n    }\n    fieldMap[this.name].control = this.formModel;\n    if (this.groupName) {\n      if (group[this.groupName]) {\n        group[this.groupName].addControl(this.name, this.formModel);\n      } else {\n        const fg = {};\n        fg[this.name] = this.formModel;\n        group[this.groupName] = fg;\n      }\n    } else {\n      group[this.name] = this.formModel;\n    }\n  }\n\n  createNewElem(baseFieldInst: any, value:any = null) {\n    const newOpts = _.cloneDeep(baseFieldInst.options);\n    newOpts.value = value;\n    const newInst = new baseFieldInst.constructor(newOpts, this.injector);\n    _.forEach(this.skipClone, (f: any)=> {\n      newInst[f] = null;\n    });\n\n    _.forEach(this.forceClone, (f: any) => {\n      if (_.isString(f)) {\n        newInst[f] = _.cloneDeepWith(baseFieldInst[f], this.getCloneCustomizer(\n          {\n            skipClone: ['fields', 'fieldMap', 'formModel', 'injector', 'onValueUpdate', 'onValueLoaded', 'translationService', 'utilityService', 'componentReactors'],\n            copy: ['fieldMap', 'injector', 'translationService', 'utilityService']\n          }\n        ));\n      } else {\n        newInst[f.field] = _.cloneDeepWith(baseFieldInst[f.field], this.getCloneCustomizer(f));\n      }\n    });\n\n    if (_.isFunction(newInst.postInit)) {\n      newInst.postInit(value);\n    }\n    return newInst;\n  }\n\n  getCloneCustomizer(cloneOpts:any) {\n    const that = this;\n    return function(value: any, key: any) {\n      if (_.includes(cloneOpts.skipClone, key) ) {\n        if (_.includes(cloneOpts.copy, key)) {\n          return that[key];\n        }\n        return false;\n      }\n    };\n  }\n\n  addElem(val:any = null) {\n    const newElem = this.createNewElem(this.fields[0], val);\n    if (val == null && _.isFunction(newElem.setEmptyValue)) {\n      newElem.setEmptyValue();\n    }\n    this.fields.push(newElem);\n    const newFormModel = newElem.createFormModel();\n    this.formModel.push(newFormModel);\n    return newElem;\n  }\n\n  removeElem(index: number) {\n    _.remove(this.fields, (val:any, idx: number) => { return idx == index });\n    this.formModel.removeAt(index);\n  }\n\n  swap(fromIdx, toIdx) {\n    let temp = this.fields[toIdx];\n    this.fields[toIdx] = this.fields[fromIdx];\n    this.fields[fromIdx] = temp;\n    temp = this.formModel.at(toIdx);\n    this.formModel.setControl(toIdx, this.formModel.at(fromIdx));\n    this.formModel.setControl(fromIdx, temp);\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].setValue(value, true);\n  }\n\n  public triggerValidation() {\n    _.forEach(this.fields, (f:any) => {\n      f.triggerValidation();\n    });\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any) {\n    console.log(`Repeatable container field reacting: ${eventName}`);\n    console.log(eventData);\n    // delete first...\n    for (let toDelIdx = 1; toDelIdx  {\n      if (idx >= this.formModel.controls.length) {\n        this.addElem(entry);\n      } else {\n        this.setValueAtElem(idx, entry);\n      }\n    });\n  }\n\n  public removeAllElems() {\n    _.each(this.fields, (f, idx) => {\n      this.removeElem(idx);\n    });\n  }\n\n  public reset(data=null, eventConfig=null) {\n    this.fields[0].setValue(null);\n    if (this.fields.length > 1) {\n      for (var i=1; i = new EventEmitter();\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  public getGroupClass(fldName:string=null): string {\n    let baseClass = 'form-group';\n    if (this.isEmbedded) {\n      baseClass = '';\n    }\n    return `${baseClass} ${this.hasRequiredError() ? 'has-error' : '' } ${this.field.groupClasses}`;\n  }\n}\n\nexport class RepeatableComponent extends SimpleComponent {\n  field: RepeatableContainer;\n\n  addElem(event: any) {\n    this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n\n  hasRequiredError() {\n    let hasError = false;\n    _.each(this.field.formModel.controls, (c) => {\n      if (c.hasError('required')) {\n        hasError = true;\n        return false;\n      }\n    });\n    return hasError;\n  }\n}\n\nexport class RepeatableVocab extends RepeatableContainer {\n  fields: VocabField[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'RepeatableVocab';\n  }\n\n  setValueAtElem(index, value:any) {\n    console.log(`Repeatable vocab setting value at: ${index}`);\n    console.log(value);\n    let selected = {};\n    selected['originalObject'] = value;\n    this.fields[index].component.onSelect(selected, false, true);\n  }\n}\n\n@Component({\n  selector: 'repeatable-vocab',\n  template: `\n  \n    \n      \n      {{field.label}}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      &nbsp;\n      \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableVocabComponent extends RepeatableComponent {\n  field: RepeatableVocab;\n  static clName = 'RepeatableVocabComponent';\n\n}\n\nexport class RepeatableContributor extends RepeatableContainer {\n  fields: ContributorField[];\n  canSort: boolean;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.canSort = _.isUndefined(options['canSort']) ? false : options['canSort'];\n  }\n\n  setValueAtElem(index, value:any) {\n    this.fields[index].component.onSelect(value, false, true);\n  }\n\n  addElem(val:any = null) {\n    this.fields[0].setMissingFields(val);\n    return super.addElem(val);\n  }\n}\n\n@Component({\n  selector: 'repeatable-contributor',\n  template: `\n  \n    \n      \n        \n          {{field.fields[0].label}} {{getRequiredLabelStr()}}\n          \n        \n      \n    \n    \n      \n    \n    \n      \n        \n      \n      \n         1 && field.canSort\"  (click)=\"moveUp($event, i)\" [ngClass]=\"field.moveUpButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-up-button' | translate\">\n         1 && field.canSort\"  (click)=\"moveDown($event, i)\" [ngClass]=\"field.moveDownButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'move-down-button' | translate\">\n         1 && field.removeButtonText\" (click)=\"removeElem($event, i)\"  [ngClass]=\"field.removeButtonTextClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" >{{field.removeButtonText}}\n         1 && !field.removeButtonText\" (click)=\"removeElem($event, i)\" [ngClass]=\"field.removeButtonClass\" [ngStyle]=\"{'margin-top': fieldElem.marginTop}\" [attr.aria-label]=\"'remove-button-label' | translate\" >\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    \n      \n        {{field.fields[0].label}}\n      \n      \n        {{field.fields[0].nameColHdr}}\n        {{field.fields[0].emailColHdr}}\n        {{field.fields[0].roleColHdr}}\n        {{field.fields[0].orcidColHdr}}\n      \n      \n        {{fieldElem.value.text_full_name}}\n        {{fieldElem.value.email}}\n        {{fieldElem.value.role}}\n        {{fieldElem.value.orcid}}\n      \n    \n  \n  `,\n})\nexport class RepeatableContributorComponent extends RepeatableComponent implements OnInit {\n  field: RepeatableContributor;\n\n  ngOnInit() {\n    this.field.fields[0]['showHeader'] = false;\n    this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    this.field.fields[0].componentReactors.push(this);\n  }\n\n  addElem(event: any) {\n    const newElem:any = this.field.addElem();\n    newElem.marginTop = '0px';\n    newElem.vocabField.initialValue = null;\n    newElem.setupEventHandlers();\n    newElem.showHeader = false;\n    newElem.componentReactors.push(this);\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n    if (i == 0) {\n      this.field.fields[0].marginTop = this.field.fields[0].baseMarginTop;\n    }\n  }\n\n  public reactEvent(eventName: string, eventData: any, origData: any, elem:any) {\n    if (this.field.fields.length > 0) {\n      elem.marginTop = '0px';\n      elem.vocabField.initialValue = eventData;\n      elem.setupEventHandlers();\n      elem.componentReactors.push(this);\n    }\n  }\n\n  public moveUp(event: any, i:number) {\n    const newIdx = i - 1;\n    if (newIdx >= 0) {\n      this.field.swap(i, newIdx);\n      if (newIdx == 0) {\n        this.field.fields[i].marginTop = '';\n        this.field.fields[newIdx].marginTop = this.field.fields[newIdx].baseMarginTop;\n      }\n    }\n  }\n\n  public moveDown(event: any, i:number) {\n    const newIdx = i + 1;\n    if (newIdx \n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{field.label}}                                 1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">                           {{field.addButtonText}}              {{field.label}}                  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RepeatableVocabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Report.html":{"url":"classes/Report.html","title":"class - Report","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Report\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                filter\n                            \n                            \n                                name\n                            \n                            \n                                solrQuery\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        columns:     object[]\n\n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            solrQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        solrQuery:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReportModule.html":{"url":"modules/ReportModule.html","title":"module - ReportModule","body":"\n                   \n\n\n\n\n  Modules\n  ReportModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_imports\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/report/app/report.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MultivalueFieldPipe\n                            \n                            \n                                ReportComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ReportService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                ReportComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ReportComponent }  from './report.component';\nimport { MultivalueFieldPipe }  from './MultivalueFieldPipe';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport { ReportService } from './shared/report-service';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule, NKDatetimeModule],\n  declarations: [ ReportComponent, MultivalueFieldPipe ],\n  providers:    [  ReportService ],\n  bootstrap:    [ ReportComponent ]\n})\nexport class ReportModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReportResults.html":{"url":"classes/ReportResults.html","title":"class - ReportResults","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReportResults\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                items\n                            \n                            \n                                noItems\n                            \n                            \n                                totalItems\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        currentPage:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     object[]\n\n                    \n                \n                    \n                        \n                            Type :     object[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        noItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        totalItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/report-models.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Report {\n\n  title: string\n  name: string\n  solrQuery: string\n  filter: object\n  columns: object[]\n}\n\nexport class ReportResults {\n  totalItems: number\n  currentPage: number\n  noItems: number\n  items: object[]\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReportService.html":{"url":"injectables/ReportService.html","title":"injectable - ReportService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/report-service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatDates\n                            \n                            \n                                getReport\n                            \n                            \n                                getReportResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService, translator: TranslationService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/report-service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translator\n                                                  \n                                                        \n                                                                    TranslationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            formatDates\n                            \n                            \n                        \n                    \n                \n                \n                    \nformatDates(response: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/report-service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getReport\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetReport(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/report-service.ts:22\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getReportResults\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetReportResults(name: string, pageNumber: number, params: object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/report-service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        pageNumber\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        params\n                                                        \n                                                                    object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport moment from 'moment-es6';\nimport { BaseService } from '../shared/base-service'\nimport { Report, ReportResults } from './report-models'\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport * as _ from \"lodash\";\n\n@Injectable()\nexport class ReportService extends BaseService {\n\n  constructor(\n    @Inject(Http) http: Http,\n    @Inject(ConfigService) protected configService: ConfigService,\n    @Inject(TranslationService) protected translator:TranslationService) {\n    super(http, configService);\n  }\n\n  getReport(name:string): Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/getReport?name=`+name, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as Report);\n  }\n\n  getReportResults(name:string, pageNumber:number, params:object): Promise {\n    var rows = 10;\n    var start = (pageNumber-1) * rows;\n    var url = `${this.brandingAndPortalUrl}/admin/getReportResults?name=`+name+`&start=`+start+`&rows=`+rows;\n    for(var key in params) {\n      url=url+'&'+key+\"=\"+params[key];\n    }\n    return this.http.get(url, this.options)\n      .toPromise()\n      .then((res: any) => this.extractData(res) as ReportResults);\n  }\n\n  formatDates(response:object){\n    var items = response[\"items\"];\n    for (var i=0;i\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Role.html":{"url":"classes/Role.html","title":"class - Role","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        users:     User[]\n\n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:39\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RolesService.html":{"url":"injectables/RolesService.html","title":"injectable - RolesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RolesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/roles-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrandRoles\n                            \n                            \n                                updateUserRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/roles-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBrandRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBrandRoles()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/roles-service.ts:40\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserRoles\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserRoles(userid: any, roleIds: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/roles-service.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        roleIds\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { SaveResult, Role, User, LoginResult } from './user-models'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: Shilo Banihit\n */\n@Injectable()\nexport class RolesService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrandRoles() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/roles/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as Role[]);\n  }\n\n  updateUserRoles(userid: any, roleIds: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/roles/user`, {userid: userid, roles:roleIds}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SaveResult.html":{"url":"classes/SaveResult.html","title":"class - SaveResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SaveResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        status:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:42\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SelectionComponent.html":{"url":"classes/SelectionComponent.html","title":"class - SelectionComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    SimpleComponent\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     SelectionField\n\n                    \n                \n                    \n                        \n                            Type :     SelectionField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel(val: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:149\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SelectionFieldComponent.html":{"url":"components/SelectionFieldComponent.html","title":"component - SelectionFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SelectionFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SelectionComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                selectionfield\n            \n\n\n\n            \n                template\n                \n   \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n   \n   \n   \n    \n      \n        \n        \n        \n        {{ opt.label }}\n        \n      \n   \n   {{field.label}} is required\n   {{field.validationMessages.required}}\n\n\n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n    \n      \n        {{getLabel(val)}}\n      \n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getControlFromOption\n                            \n                            \n                                isRadio\n                            \n                            \n                                isValArray\n                            \n                            \n                                onChange\n                            \n                            \n                                getLabel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getControlFromOption\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetControlFromOption(opt: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:240\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opt\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isRadio\n                            \n                            \n                        \n                    \n                \n                \n                    \nisRadio()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:236\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValArray\n                            \n                            \n                        \n                    \n                \n                \n                    \nisValArray()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nonChange(opt: any, event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:247\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        opt\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel(val: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SelectionComponent:149\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SelectionFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:230\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     SelectionField\n\n                    \n                \n                    \n                        \n                            Type :     SelectionField\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SelectionComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SelectionComponent:147\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '       {{field.label}} {{ getRequiredLabelStr()}}                                                       {{ opt.label }}                    {{field.label}} is required   {{field.validationMessages.required}}      {{field.label}}    {{getLabel(field.value)}}        {{field.label}}    {{getLabel(field.value)}}                  {{getLabel(val)}}            '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SelectionFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n  Modules\n  SharedModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/shared.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ANDSVocabComponent\n                            \n                            \n                                ActionButtonComponent\n                            \n                            \n                                AnchorOrButtonComponent\n                            \n                            \n                                AsynchComponent\n                            \n                            \n                                ButtonBarContainerComponent\n                            \n                            \n                                CancelButtonComponent\n                            \n                            \n                                ContributorComponent\n                            \n                            \n                                DataLocationComponent\n                            \n                            \n                                DateTimeComponent\n                            \n                            \n                                DmpFieldComponent\n                            \n                            \n                                DropdownFieldComponent\n                            \n                            \n                                GenericGroupComponent\n                            \n                            \n                                HiddenValueComponent\n                            \n                            \n                                HtmlRawComponent\n                            \n                            \n                                LinkValueComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                MarkdownTextAreaComponent\n                            \n                            \n                                PDFListComponent\n                            \n                            \n                                ParameterRetrieverComponent\n                            \n                            \n                                PublishDataLocationSelectorComponent\n                            \n                            \n                                RecordMetadataRetrieverComponent\n                            \n                            \n                                RelatedObjectDataComponent\n                            \n                            \n                                RelatedObjectSelectorComponent\n                            \n                            \n                                RepeatableContributorComponent\n                            \n                            \n                                RepeatableGroupComponent\n                            \n                            \n                                RepeatableTextfieldComponent\n                            \n                            \n                                RepeatableVocabComponent\n                            \n                            \n                                SaveButtonComponent\n                            \n                            \n                                SelectionFieldComponent\n                            \n                            \n                                SpacerComponent\n                            \n                            \n                                StringTemplatePipe\n                            \n                            \n                                TabNavButtonComponent\n                            \n                            \n                                TabOrAccordionContainerComponent\n                            \n                            \n                                TextAreaComponent\n                            \n                            \n                                TextBlockComponent\n                            \n                            \n                                TextFieldComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                TreeNodeCheckboxComponent\n                            \n                            \n                                VocabFieldComponent\n                            \n                            \n                                WorkflowStepButtonComponent\n                            \n                            \n                                WorkspaceFieldComponent\n                            \n                            \n                                WorkspaceSelectorComponent\n                            \n                            \n                                WorkspaceSelectorFieldComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ANDSVocabComponent\n                            \n                            \n                                ActionButtonComponent\n                            \n                            \n                                AnchorOrButtonComponent\n                            \n                            \n                                AsynchComponent\n                            \n                            \n                                ButtonBarContainerComponent\n                            \n                            \n                                CancelButtonComponent\n                            \n                            \n                                ContributorComponent\n                            \n                            \n                                DataLocationComponent\n                            \n                            \n                                DateTimeComponent\n                            \n                            \n                                DmpFieldComponent\n                            \n                            \n                                DropdownFieldComponent\n                            \n                            \n                                GenericGroupComponent\n                            \n                            \n                                HiddenValueComponent\n                            \n                            \n                                HtmlRawComponent\n                            \n                            \n                                LinkValueComponent\n                            \n                            \n                                MapComponent\n                            \n                            \n                                MarkdownTextAreaComponent\n                            \n                            \n                                PDFListComponent\n                            \n                            \n                                ParameterRetrieverComponent\n                            \n                            \n                                PublishDataLocationSelectorComponent\n                            \n                            \n                                RecordMetadataRetrieverComponent\n                            \n                            \n                                RelatedObjectDataComponent\n                            \n                            \n                                RelatedObjectSelectorComponent\n                            \n                            \n                                RepeatableContributorComponent\n                            \n                            \n                                RepeatableGroupComponent\n                            \n                            \n                                RepeatableTextfieldComponent\n                            \n                            \n                                RepeatableVocabComponent\n                            \n                            \n                                SaveButtonComponent\n                            \n                            \n                                SelectionFieldComponent\n                            \n                            \n                                SpacerComponent\n                            \n                            \n                                TabNavButtonComponent\n                            \n                            \n                                TabOrAccordionContainerComponent\n                            \n                            \n                                TextAreaComponent\n                            \n                            \n                                TextBlockComponent\n                            \n                            \n                                TextFieldComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                TreeNodeCheckboxComponent\n                            \n                            \n                                VocabFieldComponent\n                            \n                            \n                                WorkflowStepButtonComponent\n                            \n                            \n                                WorkspaceFieldComponent\n                            \n                            \n                                WorkspaceSelectorComponent\n                            \n                            \n                                WorkspaceSelectorFieldComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ANDSService\n                            \n                            \n                                     ConfigService\n                            \n                            \n                                     DashboardService\n                            \n                            \n                                     EmailNotificationService\n                            \n                            \n                                     FieldControlMetaService\n                            \n                            \n                                     FieldControlService\n                            \n                            \n                                     RecordsService\n                            \n                            \n                                     RolesService\n                            \n                            \n                                     TranslationService\n                            \n                            \n                                     UserSimpleService\n                            \n                            \n                                     UtilityService\n                            \n                            \n                                     VocabFieldLookupService\n                            \n                            \n                                     WorkspaceTypeService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ANDSVocabComponent\n                            \n                            \n                                    ActionButtonComponent\n                            \n                            \n                                    AnchorOrButtonComponent\n                            \n                            \n                                    AsynchComponent\n                            \n                            \n                                    ButtonBarContainerComponent\n                            \n                            \n                                    ContributorComponent\n                            \n                            \n                                    DataLocationComponent\n                            \n                            \n                                    DateTimeComponent\n                            \n                            \n                                    DmpFieldComponent\n                            \n                            \n                                    DropdownFieldComponent\n                            \n                            \n                                    GenericGroupComponent\n                            \n                            \n                                    HiddenValueComponent\n                            \n                            \n                                    HtmlRawComponent\n                            \n                            \n                                    LinkValueComponent\n                            \n                            \n                                    MapComponent\n                            \n                            \n                                    MarkdownTextAreaComponent\n                            \n                            \n                                    PDFListComponent\n                            \n                            \n                                    ParameterRetrieverComponent\n                            \n                            \n                                    PublishDataLocationSelectorComponent\n                            \n                            \n                                    RecordMetadataRetrieverComponent\n                            \n                            \n                                    RelatedObjectSelectorComponent\n                            \n                            \n                                    RepeatableContributorComponent\n                            \n                            \n                                    RepeatableGroupComponent\n                            \n                            \n                                    RepeatableTextfieldComponent\n                            \n                            \n                                    RepeatableVocabComponent\n                            \n                            \n                                    SelectionFieldComponent\n                            \n                            \n                                    SpacerComponent\n                            \n                            \n                                    StringTemplatePipe\n                            \n                            \n                                    TabNavButtonComponent\n                            \n                            \n                                    TabOrAccordionContainerComponent\n                            \n                            \n                                    TextAreaComponent\n                            \n                            \n                                    TextBlockComponent\n                            \n                            \n                                    TextFieldComponent\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    TreeNodeCheckboxComponent\n                            \n                            \n                                    VocabFieldComponent\n                            \n                            \n                                    WorkflowStepButtonComponent\n                            \n                            \n                                    WorkspaceFieldComponent\n                            \n                            \n                                    WorkspaceSelectorComponent\n                            \n                            \n                                    WorkspaceSelectorFieldComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { MarkdownModule, MarkdownService } from 'angular2-markdown';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RecordsService } from './form/records.service';\nimport { FieldControlService } from './form/field-control.service';\nimport { TextFieldComponent, RepeatableTextfieldComponent, MarkdownTextAreaComponent, TextAreaComponent } from './form/field-textfield.component';\nimport { DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, HtmlRawComponent, HiddenValueComponent, LinkValueComponent, SelectionFieldComponent, ParameterRetrieverComponent, TabNavButtonComponent, SpacerComponent, ToggleComponent } from './form/field-simple.component';\nimport { RecordMetadataRetrieverComponent } from './form/record-meta.component';\nimport { VocabField, VocabFieldComponent, VocabFieldLookupService } from './form/field-vocab.component';\nimport { RepeatableVocabComponent, RepeatableContributorComponent } from './form/field-repeatable.component';\nimport { ContributorComponent } from './form/field-contributor.component';\nimport { PDFListComponent } from './form/field-pdflist.component';\nimport { RelatedObjectDataComponent } from './form/field-relatedobjectdata.component';\nimport { RelatedObjectSelectorComponent } from './form/field-relatedobjectselector.component';\nimport { DataLocationComponent } from './form/field-datalocation.component';\nimport { PublishDataLocationSelectorComponent } from './form/field-publishdatalocationselector.component';\nimport { ANDSVocabComponent } from './form/field-andsvocab.component';\nimport { MapComponent } from './form/field-map.component';\nimport { WorkflowStepButtonComponent } from './form/workflow-button.component';\nimport { ActionButtonComponent } from './form/action-button.component';\nimport { ConfigService } from './config-service';\nimport { TranslationService } from './translation-service';\nimport { NKDatetimeModule } from 'ng2-datetime/ng2-datetime';\nimport { Ng2CompleterModule } from \"ng2-completer\";\nimport { TranslateI18NextModule } from 'ngx-i18next';\nimport { LeafletModule } from '@asymmetrik/ngx-leaflet';\nimport { LeafletDrawModule } from '@asymmetrik/ngx-leaflet-draw';\nimport { DmpFieldComponent } from './form/dmp-field.component';\nimport { UserSimpleService } from './user.service-simple';\nimport { DashboardService } from './dashboard-service';\nimport { ANDSService } from './ands-service';\nimport { StringTemplatePipe }  from './StringTemplatePipe';\nimport { RolesService } from './roles-service';\nimport { UtilityService } from './util-service';\nimport { EmailNotificationService } from './email-service';\nimport { GenericGroupComponent, RepeatableGroupComponent } from './form/field-group.component';\nimport { WorkspaceSelectorFieldComponent } from './form/workspace-selector.component';\nimport { WorkspaceTypeService } from './workspace-service';\nimport { WorkspaceFieldComponent } from './form/workspace-field.component';\nimport { WorkspaceSelectorComponent } from './form/workspace-selector.component';\nimport { FieldControlMetaService } from './form/field-control-meta.service';\nimport { TreeModule } from 'angular-tree-component';\nimport { AsynchComponent } from './form/field-asynch.component';\nimport { TreeNodeCheckboxComponent } from './form/tree-node-checkbox.component';\nimport { MobxAngularModule } from 'mobx-angular';\n\n@NgModule({\n  imports:      [ BrowserModule, FormsModule, ReactiveFormsModule, NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, LeafletModule.forRoot(), LeafletDrawModule.forRoot(), MarkdownModule.forRoot(), TreeModule, MobxAngularModule ],\n  exports:      [ NKDatetimeModule, Ng2CompleterModule, TranslateI18NextModule, DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent,MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, TreeModule, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent ],\n  declarations: [ DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, StringTemplatePipe, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent, DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent, PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent ],\n  providers:    [ FieldControlService, RecordsService, VocabFieldLookupService, ConfigService, TranslationService, UserSimpleService, DashboardService, RolesService, EmailNotificationService, UtilityService, WorkspaceTypeService, FieldControlMetaService,ANDSService ],\n  bootstrap:    [ ],\n  entryComponents: [ DmpFieldComponent, TextFieldComponent, DropdownFieldComponent, TabOrAccordionContainerComponent, ButtonBarContainerComponent, TextBlockComponent, MarkdownTextAreaComponent, TextAreaComponent, DateTimeComponent, AnchorOrButtonComponent, SaveButtonComponent, CancelButtonComponent, VocabFieldComponent, RepeatableVocabComponent, ContributorComponent, RepeatableContributorComponent, HtmlRawComponent, HiddenValueComponent, WorkflowStepButtonComponent, ActionButtonComponent, LinkValueComponent, SelectionFieldComponent, RepeatableTextfieldComponent, RelatedObjectDataComponent, GenericGroupComponent, RepeatableGroupComponent, MapComponent, ParameterRetrieverComponent, RecordMetadataRetrieverComponent, RelatedObjectSelectorComponent,DataLocationComponent, PublishDataLocationSelectorComponent, WorkspaceSelectorFieldComponent, TabNavButtonComponent, SpacerComponent, WorkspaceFieldComponent, WorkspaceSelectorComponent, ANDSVocabComponent,PDFListComponent, AsynchComponent, ToggleComponent, TreeNodeCheckboxComponent  ]\n\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleComponent.html":{"url":"classes/SimpleComponent.html","title":"class - SimpleComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-simple.component.ts\n        \n\n            \n                Description\n            \n            \n                A component base class\nAuthor: Shilo Banihit\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:54\n                            \n                        \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SortComponent.html":{"url":"components/SortComponent.html","title":"component - SortComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SortComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/dashboard/app/sort.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                sort\n            \n\n\n\n\n            \n                templateUrl\n                ./sort.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                sortClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                sort\n                            \n                            \n                                step\n                            \n                            \n                                title\n                            \n                            \n                                variable\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                sortChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        sort\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        variable\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:26\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        sortChanged\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:27\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortClicked\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortClicked()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/dashboard/app/sort.component.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Injectable, Inject, ElementRef, Input, Output, EventEmitter } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { FormArray, FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { UserSimpleService } from './shared/user.service-simple';\nimport { DashboardService } from './shared/dashboard-service';\nimport { PlanTable, Plan } from './shared/dashboard-models';\nimport * as _ from \"lodash\";\nimport { LoadableComponent } from './shared/loadable.component';\nimport { OnInit } from '@angular/core';\nimport { PaginationModule, TooltipModule } from 'ngx-bootstrap';\nimport { TranslationService } from './shared/translation-service';\nimport { RecordsService } from './shared/form/records.service';\n\ndeclare var pageData: any;\n@Component({\n  selector: 'sort',\n  templateUrl: './sort.html'\n})\n\n@Injectable()\nexport class SortComponent  {\n\n  @Input() sort: string = null;\n  @Input() title: string = null;\n  @Input() step: string = null;\n  @Input() variable: string = null;\n  @Output() sortChanged = new EventEmitter();\n\n\n\n  sortClicked() {\n    if (this.sort != null) {\n      if (this.sort == \"asc\") {\n        this.sort = \"desc\";\n      } else {\n        this.sort = \"asc\";\n      }\n    } else {\n      this.sort = \"asc\";\n    }\n    this.sortChanged.emit({title:this.title, variable:this.variable, sort:this.sort, step:this.step});\n    return false;\n  }\n\n\n\n}\n\n    \n\n    \n        {{title}} \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{title}} '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SortComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpacerComponent.html":{"url":"components/SpacerComponent.html","title":"component - SpacerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SpacerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                spacer\n            \n\n\n\n            \n                template\n                &nbsp;\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Spacer\n\n                    \n                \n                    \n                        \n                            Type :     Spacer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:731\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpacerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringTemplatePipe.html":{"url":"pipes/StringTemplatePipe.html","title":"pipe - StringTemplatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringTemplatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/shared/StringTemplatePipe.ts\n        \n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringTemplate\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        transform(templateString: string, args?: any[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/StringTemplatePipe.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        templateString\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        args\n                                                        \n                                                                    any[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            generateTemplateString\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        generateTemplateString:     \n\n                    \n                \n                    \n                        \n                            Default value : (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})()\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/StringTemplatePipe.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import {\n    Inject,\n    Pipe,\n    PipeTransform\n} from '@angular/core';\n\n\n@Pipe({\n    name: 'stringTemplate'\n})\nexport class StringTemplatePipe implements PipeTransform {\n\n\n    public transform(templateString:string, args?:any[]):string {\n      if(args != null) {\n        var template = this.generateTemplateString(templateString);\n        return template(args);\n      }\n        return templateString;\n    }\n\n    public generateTemplateString = (function(){\n    var cache = {};\n\n    function generateTemplate(template){\n\n    var fn = cache[template];\n\n    if (!fn){\n\n    // Replace ${expressions} (etc) with ${map.expressions}.\n\n    var sanitized = template\n        .replace(/\\$\\{([\\s]*[^;\\s\\{]+[\\s]*)\\}/g, function(_, match){\n            return `\\$\\{map.${match.trim()}\\}`;\n            })\n        // Afterwards, replace anything that's not ${map.expressions}' (etc) with a blank string.\n        .replace(/(\\$\\{(?!map\\.)[^}]+\\})/g, '');\n\n    fn = Function('map', `return \\`${sanitized}\\``);\n\n    }\n\n    return fn;\n};\n\nreturn generateTemplate;\n})();\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabOrAccordionContainerComponent.html":{"url":"components/TabOrAccordionContainerComponent.html","title":"component - TabOrAccordionContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabOrAccordionContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n    \n        Description\n    \n    \n        \nContainer components\n\n\n    \n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                tabcontainer\n            \n\n\n\n            \n                template\n                \n  \n    \n      \n        {{tab.label}}\n      \n    \n    \n      \n    \n        \n          \n        \n      \n    \n  \n\n\n  \n    Expand/Collapse all\n    \n      \n        \n          \n            {{ tab.expandedChar }} {{ tab.label }}\n          \n        \n      \n      \n        \n          \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                expandCollapseAll\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(changeRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-simple.component.ts:316\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changeRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            expandCollapseAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nexpandCollapseAll()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:344\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:322\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     TabOrAccordionContainer\n\n                    \n                \n                    \n                        \n                            Type :     TabOrAccordionContainer\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:316\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}                                                                    Expand/Collapse all                                        {{ tab.expandedChar }} {{ tab.label }}                                                                                          '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TabOrAccordionContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextAreaComponent.html":{"url":"components/TextAreaComponent.html","title":"component - TextAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n    \n        Description\n    \n    \n        Component\nAuthor: Shilo Banihit\n\n    \n\n    \n        Extends\n    \n    \n            EmbeddableComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-area\n            \n\n\n\n            \n                template\n                \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n    \n      \n      \n    \n    {{field.value}}\n  \n  \n  \n    {{field.value}}\n  \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  \n    {{line}}\n    \n  \n\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:223\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:226\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRemove(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     TextArea\n\n                    \n                \n                    \n                        \n                            Type :     TextArea\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-textfield.component.ts:224\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n        \n      \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{field.label}} {{ getRequiredLabelStr()}}                                  {{field.value}}          {{field.value}}          {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}      {{line}}      '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextBlockComponent.html":{"url":"components/TextBlockComponent.html","title":"component - TextBlockComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextBlockComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                text-block\n            \n\n\n\n            \n                template\n                \n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  {{field.value}}\n  \n  {{field.value}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TextBlockComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:403\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Container\n\n                    \n                \n                    \n                        \n                            Type :     Container\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:402\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}  {{field.value}}    {{field.value}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextBlockComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextFieldComponent.html":{"url":"components/TextFieldComponent.html","title":"component - TextFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-textfield.component.ts\n\n\n\n    \n        Extends\n    \n    \n            EmbeddableComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                textfield\n            \n\n\n\n            \n                template\n                \n  \n    \n      {{field.label}} {{ getRequiredLabelStr() }}\n      \n      \n    \n    \n  \n  \n    \n    \n      {{removeBtnText}}\n      \n    \n  \n  \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n\n\n  {{field.label}}\n  {{field.value}}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                onRemove\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canRemove\n                            \n                            \n                                index\n                            \n                            \n                                removeBtnClass\n                            \n                            \n                                removeBtnText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onRemoveBtnClick\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canRemove\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:222\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                            \n                            Type :    number\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:225\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnClass\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : 'btn fa fa-minus-circle btn text-20 pull-left btn btn-danger'\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:224\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        removeBtnText\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                        \n                            Default value : null\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:223\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onRemoveBtnClick\n                    \n                    \n                        $event Type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:226\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:232\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onRemove\n                            \n                            \n                        \n                    \n                \n                \n                    \nonRemove(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     EmbeddableComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in EmbeddableComponent:228\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit } from '@angular/core';\nimport * as _ from \"lodash\";\nimport { FieldBase } from './field-base';\nimport { EmbeddableComponent, RepeatableComponent } from './field-repeatable.component';\n\ndeclare var jQuery: any;\n\n/**\n * Text Field Model\n *\n * Author: Shilo Banihit\n\n */\nexport class TextField extends FieldBase {\n  type: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.type = options['type'] || '';\n    this.controlType = 'textbox';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  postInit(value:any) {\n    if (_.isEmpty(value)) {\n      this.value = this.defaultValue ? this.defaultValue : '';\n    } else {\n      this.value = value;\n    }\n  }\n}\n\nexport class MarkdownTextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    if (_.isUndefined(this.value)) {\n      this.value = \"\";\n    }\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\nexport class TextArea extends FieldBase {\n  rows: number;\n  cols: number;\n\n  lines: string[];\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.rows = options['rows'] || 5;\n    this.cols = options['cols'] || null;\n    this.controlType = 'textarea';\n    this.cssClasses = _.isEmpty(this.cssClasses) ? 'form-control' : this.cssClasses;\n  }\n\n  formatValueForDisplay() {\n    this.lines = this.value ? this.value.split(\"\\n\") : [];\n  }\n}\n\n@Component({\n  selector: 'textfield',\n  template: `\n  \n    \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n        \n      \n      \n    \n    \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextFieldComponent extends EmbeddableComponent {\n\n}\n\n@Component({\n  selector: 'repeatable-textfield',\n  template: `\n  \n    \n      \n      \n        {{field.label}} {{ getRequiredLabelStr() }}\n        \n      \n      \n      \n    \n    \n      \n         1\" (onRemoveBtnClick)=\"removeElem($event[0], $event[1])\" [index]=\"i\">\n      \n    \n    \n      \n        {{field.label}} is required\n        {{field.validationMessages.required}}\n      \n    \n    \n      \n        {{field.addButtonText}}\n        \n      \n    \n  \n  \n    {{field.label}}\n    \n      \n        \n      \n    \n  \n  `,\n})\nexport class RepeatableTextfieldComponent extends RepeatableComponent {\n  static clName = 'RepeatableTextfieldComponent';\n\n\n  ngOnInit() {\n  }\n\n  addElem(event: any) {\n    const newElem = this.field.addElem();\n  }\n\n  removeElem(event: any, i: number) {\n    this.field.removeElem(i);\n  }\n}\n\n/**\n * Component\n * Author: Shilo Banihit\n */\n@Component({\n  selector: 'text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n      \n        \n        \n      \n      {{field.value}}\n    \n    \n    \n      {{field.value}}\n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    \n      {{line}}\n      \n    \n\n  \n  `\n})\nexport class TextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: TextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n@Component({\n  selector: 'markdown-text-area',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    Preview\n    \n    {{field.label}} is required\n    {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    \n    \n  \n  `\n})\nexport class MarkdownTextAreaComponent extends EmbeddableComponent implements OnInit {\n  field: MarkdownTextArea;\n\n  ngOnInit() {\n    if (!this.field.editMode) {\n      this.field.formatValueForDisplay();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{field.label}} {{ getRequiredLabelStr() }}                                      {{removeBtnText}}                  {{field.label}} is required    {{field.validationMessages.required}}    {{field.label}}  {{field.value}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TextFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/field-simple.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                toggle\n            \n\n\n\n            \n                template\n                \n  \n  {{ field.label }} \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Toggle\n\n                    \n                \n                    \n                        \n                            Type :     Toggle\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/field-simple.component.ts:746\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Input, Component, ViewChild, ViewContainerRef, OnInit, Injector, AfterViewInit, AfterViewChecked, ChangeDetectorRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { SelectionField, HtmlRaw, Container, DateTime, AnchorOrButton, SaveButton, CancelButton, TabOrAccordionContainer,ParameterRetrieverField, TabNavButton, Spacer, Toggle } from './field-simple';\nimport { RecordMetadataRetrieverField } from './record-meta.component';\nimport { FormGroup, FormControl, FormArray } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\ndeclare var jQuery: any;\ndeclare var window: any;\n/**\n * A component base class\n *\n * Author: Shilo Banihit\n */\nexport class SimpleComponent {\n  /**\n   * Field model\n   */\n  @Input() public field: FieldBase;\n  /**\n   * The form group\n   */\n  @Input() public form: FormGroup;\n  /**\n   * The field mapping\n   */\n  @Input() public fieldMap: any;\n  /**\n   * The index of this field\n   */\n  @Input() public index: any;\n  /**\n   * The name of this field\n   */\n  @Input() public name: any;\n\n  @Input() isEmbedded: boolean = false;\n  /**\n   * The NG2 root injector\n   */\n  public injector: Injector;\n  /**\n   * Toggles help display\n   */\n  helpShow: boolean;\n\n  /**\n   * Optional parentId of this component\n   */\n  parentId: string;\n\n  /**\n   * Loaded flag\n   */\n  loaded: boolean;\n\n  /**\n   * Return the NG2 FormControl or subclass thereof\n   * @param  {string = null} name\n   * @return {FormControl}\n   */\n  public getFormControl(name: string = null, ctrlIndex: number = null):FormControl {\n    let fc = null;\n    if (_.isEmpty(name)) {\n      name = this.name;\n    }\n    if (_.isEmpty(name)) {\n      name = this.field.name;\n    }\n    if (this.fieldMap && this.field) {\n      // console.log(name);\n      fc = this.field.getControl(name, this.fieldMap);\n    }\n    if (!_.isNull(ctrlIndex) && !_.isUndefined(ctrlIndex)) {\n      if (!_.isNull(fc.controls) && !_.isUndefined(fc.controls)) {\n        fc = fc.controls[ctrlIndex];\n      }\n    } else\n    if (this.index != null) {\n      fc = fc.controls[this.index];\n    }\n    if (name != this.field.name && !_.isEmpty(this.field.name) && !_.isUndefined(fc.controls)) {\n      fc = fc.controls[this.field.name];\n    }\n    return fc;\n  }\n  /**\n   * Returns the CSS class\n   * @param  {string=null} fldName\n   * @return {string}\n   */\n  public getGroupClass(fldName:string=null): string {\n    return `${ this.field.groupClasses } form-group ${this.hasRequiredError() ? 'has-error' : '' }`;\n  }\n  /**\n   * If this field has a 'required' error.\n   * Author: Shilo Banihit\n   * @return {[type]}\n   */\n  public hasRequiredError():boolean {\n    return (this.field.formModel ? this.field.formModel.touched && this.field.formModel.hasError('required') : false);\n  }\n  /**\n   * Convenience method to toggle help mode.\n   * @return {[type]}\n   */\n  public toggleHelp() {\n    this.helpShow = !this.helpShow;\n  }\n  /**\n   * Returns label\n   * @return {string}\n   */\n  getRequiredLabelStr():string {\n    return this.field.required ? '(*)' : '';\n  }\n  /**\n   * Returns the NG2 root injector\n   * @param  {any} token\n   * @return {any}\n   */\n  getFromInjector(token:any): any {\n    return this.injector.get(token);\n  }\n}\n\nexport class SelectionComponent extends SimpleComponent {\n  field: SelectionField;\n\n  getLabel(val: any): string {\n    if (_.isUndefined(val)) {\n      return '';\n    }\n    const opt = _.find(this.field.selectOptions, (opt)=> {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n}\n\n@Component({\n  selector: 'dropdownfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n        {{opt.label}}\n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    {{field.label}}\n    {{getLabel(field.value)}}\n  \n  `,\n})\nexport class DropdownFieldComponent extends SelectionComponent {\n  static clName = 'DropdownFieldComponent';\n}\n\n@Component({\n  selector: 'selectionfield',\n  template: `\n  \n     \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n     \n     \n     \n      \n        \n          \n          \n          \n          {{ opt.label }}\n          \n        \n     \n     {{field.label}} is required\n     {{field.validationMessages.required}}\n  \n  \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n    \n    \n      {{field.label}}\n      {{getLabel(field.value)}}\n      \n        \n          {{getLabel(val)}}\n        \n      \n    \n\n  \n  `,\n})\nexport class SelectionFieldComponent extends SelectionComponent {\n  static clName = 'SelectionFieldComponent';\n\n  isValArray() {\n    return _.isArray(this.field.value);\n  }\n\n  isRadio() {\n    return this.field.controlType == 'radio';\n  }\n\n  getControlFromOption(opt: any) {\n    const control = _.find(this.getFormControl()['controls'], (ctrl) => {\n      return opt.value == ctrl.value;\n    });\n    return control;\n  }\n\n  onChange(opt:any, event:any) {\n    let formcontrol:any = this.getFormControl();\n    if (event.target.checked) {\n      formcontrol.push(new FormControl(opt.value));\n    } else {\n      let idx = null;\n      _.forEach(formcontrol.controls, (ctrl, i) => {\n        if (ctrl.value == opt.value) {\n          idx = i;\n          return false;\n        }\n      });\n      formcontrol.removeAt(idx);\n    }\n  }\n}\n\n\n/****************************************************************************\nContainer components\n*****************************************************************************/\n@Component({\n  selector: 'tabcontainer',\n  template: `\n  \n    \n      \n        \n          {{tab.label}}\n        \n      \n      \n        \n      \n          \n            \n          \n        \n      \n    \n  \n  \n    \n      Expand/Collapse all\n      \n        \n          \n            \n              {{ tab.expandedChar }} {{ tab.label }}\n            \n          \n        \n        \n          \n            \n              \n            \n          \n        \n      \n    \n  \n  `\n})\nexport class TabOrAccordionContainerComponent extends SimpleComponent {\n  field: TabOrAccordionContainer;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngAfterViewInit() {\n    let that = this;\n    _.each(this.field.fields, tab => {\n        tab['expandedChar'] = '+';\n        jQuery(`#${tab.id}`).on('shown.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '-';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:true, tabId: tab.id});\n        });\n        jQuery(`#${tab.id}`).on('hidden.bs.collapse', ()=> {\n          tab[\"expandedChar\"] = '+';\n          that.changeRef.detectChanges();\n          that.field.onAccordionCollapseExpand.emit({shown:false, tabId: tab.id});\n        });\n    });\n\n    if(!this.field.editMode && this.field.expandAccordionsOnOpen) {\n      this.field.allExpanded = false;\n      this.expandCollapseAll();\n    }\n  }\n\n  expandCollapseAll() {\n    if(this.field.allExpanded) {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('hide');\n      });\n      this.field.allExpanded = false;\n    } else {\n      _.each(this.field.fields, tab => {\n          jQuery(`#${tab.id}`).collapse('show');\n      });\n      this.field.allExpanded = true;\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'buttonbarcontainer',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class ButtonBarContainerComponent extends SimpleComponent {\n\n}\n\n// Break in case of an emergency....\n@Component({\n  selector: 'htmlraw',\n  template: `\n  \n  `,\n})\nexport class HtmlRawComponent extends SimpleComponent {\n  field: HtmlRaw;\n\n}\n// For creating text blocks with help sections?\n@Component({\n  selector: 'text-block',\n  template: `\n  \n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    {{field.value}}\n    \n    {{field.value}}\n    {{field.value}}\n  \n  `,\n})\nexport class TextBlockComponent extends SimpleComponent {\n  field: Container;\n  static clName = 'TextBlockComponent';\n}\n\n\n/**\n* #### Save Button Component.\n*\n* Calls the form framework's save function to create or update the record.\n*\n* #### Usage\n* ```\n*     {\n*          class: \"SaveButton\",\n*          definition: {\n*            label: 'Save & Close',\n*            closeOnSave: true,\n*            redirectLocation: '/@branding/@portal/dashboard'\n*          }\n*        }\n* ```\n*\n*| Property Name       | Description                                                    | Required | Default |\n*|---------------------|----------------------------------------------------------------|----------|---------|\n*| label               | The text to display on the button                              | Yes      |         |\n*| closeOnSave         | Flag to leave the page on successful save                      | No       | false   |\n*| redirectLocation    | The location to redirect to if closeOnSave flag is set to true | No       |         |\n*/\n@Component({\n  selector: 'save-button',\n  template: `\n    {{field.label}}\n    \n      \n        \n          \n            &times;\n            \n          \n          \n          \n            \n            \n          \n        \n      \n    \n  `,\n})\nexport class SaveButtonComponent extends SimpleComponent {\n  public field: SaveButton;\n\n  public onClick(event: any) {\n    if (this.field.confirmationMessage) {\n      this.showConfirmDlg();\n      return;\n    }\n    this.doAction();\n  }\n\n  showConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('show');\n  }\n\n  hideConfirmDlg() {\n    jQuery(`#${this.field.name}_confirmation`).modal('hide');\n  }\n\n  public doAction() {\n    var successObs = null;\n    if (this.field.isDelete) {\n      successObs = this.fieldMap._rootComp.delete();\n    } else {\n      successObs = this.field.targetStep ?\n      this.fieldMap._rootComp.onSubmit(this.field.targetStep, false, this.field.additionalData)\n      : this.fieldMap._rootComp.onSubmit(null, false, this.field.additionalData);\n    }\n    successObs.subscribe( status =>  {\n      if (status) {\n        if (this.field.closeOnSave == true) {\n          window.location.href= this.field.redirectLocation;\n        }\n      }\n      if (this.field.confirmationMessage) {\n        this.hideConfirmDlg();\n      }\n    });\n\n  }\n}\n\n/**\n* # Cancel Button Component\n*\n* #### Button designed to\n*  @param  {CancelButton} cancelButton\n*   @return {FormControl}\n*/\n@Component({\n  selector: 'cancel-button',\n  template: `\n    {{field.label}}\n  `,\n})\nexport class CancelButtonComponent extends SimpleComponent {\n  public field: CancelButton;\n\n}\n\n\n@Component({\n  selector: 'anchor-button',\n  template: `\n  {{field.label}}\n  &nbsp;{{field.label}}\n  \n  `,\n})\nexport class AnchorOrButtonComponent extends SimpleComponent {\n  public field: AnchorOrButton;\n\n  public onClick(event: any) {\n    this.fieldMap._rootComp[this.field.onClick_RootFn]();\n  }\n\n  public isDisabled() {\n    if (this.field.isDisabledFn) {\n      return this.fieldMap._rootComp[this.field.isDisabledFn]();\n    }\n    return false;\n  }\n}\n\n@Component({\n  selector: 'tab-nav-button',\n  template: `\n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n    \n    {{field.prevLabel}}\n    {{field.nextLabel}}\n    \n  `,\n})\nexport class TabNavButtonComponent extends SimpleComponent {\n  public field: TabNavButton;\n\n  constructor(private changeRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.getTabs();\n    jQuery('a[data-toggle=\"tab\"]').on('shown.bs.tab', (e) => {\n      const tabId = e.target.href.split('#')[1];\n      this.field.currentTab = tabId;\n      this.changeRef.detectChanges();\n    })\n  }\n\n  ngAfterViewInit() {\n    const focusTabId = this.getUrlParameter('focusTabId');\n    if (!_.isEmpty(focusTabId)) {\n      this.fieldMap._rootComp.gotoTab(focusTabId);\n    }\n  }\n\n  public stepToTab(step: number) {\n    const tabId = this.field.getTabId(step);\n    if (tabId) {\n      this.fieldMap._rootComp.gotoTab(tabId);\n    } else {\n      console.log(`Invalid tab: ${tabId}`);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i \n    {{field.label}}\n    {{field.value}}\n  \n  `,\n})\nexport class LinkValueComponent extends SimpleComponent {\n  isVisible() {\n    return !_.isEmpty(this.field.value);\n  }\n}\n\n@Component({\n  selector: 'hidden-field',\n  template: `\n  \n    \n  \n  `,\n})\nexport class HiddenValueComponent extends SimpleComponent {\n\n  handleChange(value: any, source: string) {\n    console.log(`Hidden Value change: ${source}`);\n    console.log(value);\n    let targetVal = null;\n    if (_.isArray(value)) {\n      targetVal = [];\n      _.forEach(value, (v:any)=> {\n        let tVal = '';\n        _.forEach(this.field.onChange.control.subFields, (subField:string) => {\n          tVal = `${_.isEmpty(tVal) ? tVal : `${tVal}${this.field.onChange.control.delim}`}${v[subField]}`;\n        });\n        targetVal.push(tVal);\n      });\n    }\n    this.getFormControl().setValue(targetVal, this.field.onChange.updateConf);\n    console.log(`Form now has value:`);\n    console.log(this.form.value);\n  }\n\n\n}\n\n/**\nWrapped: https://github.com/nkalinov/ng2-datetime\nBased on: https://bootstrap-datepicker.readthedocs.io/en/stable/\n*/\n@Component({\n  selector: 'date-time',\n  template: `\n  \n    \n      {{field.label}} {{ getRequiredLabelStr()}}\n      \n    \n    \n    \n    \n      {{field.label}} is required\n      {{field.validationMessages.required}}\n    \n  \n  \n    {{field.label}}\n    {{field.formatValueForDisplay()}}\n  \n  `\n})\nexport class DateTimeComponent extends SimpleComponent {\n  /**\n   * The field model\n   */\n  public field: DateTime;\n\n  @ViewChild('dateTime') public dateTime: any;\n\n  ngAfterViewInit() {\n    if (this.field.editMode) {\n      jQuery(`#${this.dateTime.idDatePicker}`).attr('aria-label', this.field.label);\n    }\n  }\n  /**\n   * Component method that formats the value, delegates to field.\n   */\n  formatValue() {\n    return this.field.formatValue(this.getFormControl().value);\n  }\n\n}\n\n@Component({\n  selector: 'parameter-retriever',\n  template: `\n  \n\n  \n  `,\n})\nexport class ParameterRetrieverComponent extends SimpleComponent implements AfterViewInit {\n  field: ParameterRetrieverField;\n\n  ngAfterViewInit() {\n    const paramValue = this.getUrlParameter(this.field.parameterName);\n    if(paramValue){\n      this.field.publishParameterValue(paramValue);\n    }\n  }\n\n  getUrlParameter(param:string) {\n    var pageURL = decodeURIComponent(window.location.search.substring(1)),\n        urlVariables = pageURL.split('&'),\n        parameterName,\n        i;\n\n    for (i = 0; i &nbsp;\n  `,\n})\nexport class SpacerComponent extends SimpleComponent {\n  field: Spacer;\n\n}\n\n@Component({\n  selector: 'toggle',\n  template: `\n    \n      \n      {{ field.label }} \n      \n    \n  `\n})\nexport class ToggleComponent extends SimpleComponent {\n  field: Toggle;\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ field.label }}   '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransferOwnerModule.html":{"url":"modules/TransferOwnerModule.html","title":"module - TransferOwnerModule","body":"\n                   \n\n\n\n\n  Modules\n  TransferOwnerModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_imports\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/transfer_owner/app/transfer_owner.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TransferOwnerComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                TransferOwnerComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { TransferOwnerComponent }  from './transfer_owner.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule ],\n  declarations: [ TransferOwnerComponent ],\n  providers:    [ ],\n  bootstrap:    [ TransferOwnerComponent ]\n})\nexport class TransferOwnerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TranslationService.html":{"url":"injectables/TranslationService.html","title":"injectable - TranslationService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TranslationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/translation-service.ts\n        \n\n            \n                Description\n            \n            \n                Translation service...\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                subjects\n                            \n                            \n                                    Protected\n                                translatorReady\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTranslator\n                            \n                            \n                                isReady\n                            \n                            \n                                t\n                            \n                            \n                                translatorLoaded\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translateI18Next: TranslateI18Next, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translateI18Next\n                                                  \n                                                        \n                                                                    TranslateI18Next\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTranslator\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTranslator()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReady\n                            \n                            \n                        \n                    \n                \n                \n                    \nisReady(handler: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handler\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            t\n                            \n                            \n                        \n                    \n                \n                \n                    \nt(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:77\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            translatorLoaded\n                            \n                            \n                        \n                    \n                \n                \n                    \ntranslatorLoaded()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:65\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            subjects\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subjects:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            translatorReady\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        translatorReady:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/translation-service.ts:33\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { TranslateI18Next } from 'ngx-i18next';\nimport { Subject } from 'rxjs/Subject';\nimport { ConfigService } from './config-service';\n/**\n * Translation service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class TranslationService {\n  protected subjects: any;\n  protected translatorReady: boolean;\n  protected config: any;\n\n  constructor (protected translateI18Next: TranslateI18Next, protected configService: ConfigService) {\n    this.subjects = {};\n    this.initTranslator();\n  }\n\n  initTranslator() {\n    this.subjects['init'] = new Subject();\n    const ts = new Date().getTime();\n    this.translateI18Next.init({\n        debug: true,                                                        // optional\n        returnNull: false,\n        returnEmptyString: true,                                           // optional\t- but.. it's important, please see http://i18next.com/docs/options/!\n        // mapping: {\"specific_backend_message\": \"message_for_translate\"},     // optional\n        // browserLanguageDetector: injectableCustomLanguageDetectorService,   // optional - the specific application language detector (allows you to return the language of the user.\n        //                                                                     //            If it is absent, the service uses default \"angular2 locale detector\" behaviour using LOCALE_ID.\n        // // supportedLanguages: ['en', 'pt'],                                //            Therefore you can pass the optional supportedLanguages parameter which indicates your supported languages.\n        //                                                                     //            For example, LOCALE_ID = 'en-AU' or 'en-US' or 'en', you can pass only ['en'] -> locales/en/translation.json\n        //                                                                     //                         LOCALE_ID = 'pt-BR' or 'pt', you can pass only ['pt'] -> locales/pt/translation.json\n        // backend: injectableBackendConfigFactory                             // optional - allows to change \"loadPath\" i18next parameter\n        lng: 'en',\n        fallbackLng: 'en',\n        backend: { loadPath: `/locales/{{lng}}/{{ns}}.json?ts=${ts}` }\n    }).then(() => {\n      console.log(`Translator loaded...`);\n      this.translatorReady = true;\n      this.translatorLoaded();\n    });\n  }\n\n  translatorLoaded() {\n    if (this.translatorReady) {\n      this.subjects['init'].next(this);\n    }\n  }\n\n  isReady(handler: any) {\n    const subs = this.subjects['init'].subscribe(handler);\n    this.translatorLoaded();\n    return subs;\n  }\n\n  t(key: string) {\n    return this.translateI18Next.translate(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TreeNodeCheckboxComponent.html":{"url":"components/TreeNodeCheckboxComponent.html","title":"component - TreeNodeCheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TreeNodeCheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/tree-node-checkbox.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                rb-tree-node-checkbox\n            \n\n\n\n            \n                template\n                \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ariaLabel\n                            \n                            \n                                node\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ariaLabel\n                    \n                    \n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        node\n                    \n                    \n                            \n                            Type :    TreeNode\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/tree-node-checkbox.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from 'angular-tree-component';\n\n@Component({\n  selector: 'rb-tree-node-checkbox',\n  encapsulation: ViewEncapsulation.None,\n  styles: [],\n  template: `\n    \n      \n    \n  `\n})\nexport class TreeNodeCheckboxComponent {\n  @Input() node: TreeNode;\n  @Input() ariaLabel: string;\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TreeNodeCheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user-models.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                roles\n                            \n                            \n                                token\n                            \n                            \n                                type\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        password:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roles\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roles:     Role[]\n\n                    \n                \n                    \n                        \n                            Type :     Role[]\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            username\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        username:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user-models.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id: string\n  username: string\n  password: string\n  type: string\n  name: string\n  email: string\n  token: string\n  roles: Role[]\n}\nexport class LoginResult {\n  id: string\n  message: string\n  user: User\n  url: string\n}\nexport class Role {\n  id: string\n  name: string\n  users: User[]\n}\nexport class SaveResult {\n  status: boolean\n  message: string\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm.html":{"url":"interfaces/UserForm.html","title":"interface - UserForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/manageUsers/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport * as owasp from 'owasp-password-strength-test';\nimport * as _ from 'lodash';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\nexport function passwordStrengthValidator(control1: string) {\n  return (group: FormGroup): {[key: string]: any} => {\n    let password = group.controls[control1].value;\n    if (!_.isEmpty(password)) {\n      const result = owasp.test(password);\n      return result.errors.length == 0 ? undefined : { passwordStrength: true, passwordStrengthDetails: result };\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserForm-1.html":{"url":"interfaces/UserForm-1.html","title":"interface - UserForm-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/userProfile/app/forms.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        name\n                                \n                                \n                                        passwords\n                                \n                                \n                                        roles\n                                \n                                \n                                        userid\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        passwords\n                                    \n                                \n                                \n                                    \n                                        passwords:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     any[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userid\n                                    \n                                \n                                \n                                    \n                                        userid:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Role } from './shared/user-models';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport interface UserForm {\n    userid: string\n    username: string\n    name: string\n    email: string\n    passwords: { password: string, confirmPassword: string }\n    roles: any[]\n}\n\nexport function matchingValuesValidator(control1: string, control2: string) {\n    return (group: FormGroup): {[key: string]: any} => {\n        let val1 = group.controls[control1];\n        let val2 = group.controls[control2];\n\n        if (val1.value !== val2.value) {\n        return {\n            mismatched: true\n        };\n        }\n    }\n}\n\n// needed as Validators.email returns validation error when value is null\n// (i.e combines Validators.required functionality)\nexport function optionalEmailValidator(control: FormControl): {[key: string]: any} {\n    var emailRegexp = /^[a-z0-9!#$%&'*+\\/=?^_`{|}~.-]+@[a-z0-9]([a-z0-9-]*[a-z0-9])?(\\.[a-z0-9]([a-z0-9-]*[a-z0-9])?)*$/i;\n    if (control.value && !emailRegexp.test(control.value)) {\n        return { invalidEmail: true };\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserProfileModule.html":{"url":"modules/UserProfileModule.html","title":"module - UserProfileModule","body":"\n                   \n\n\n\n\n  Modules\n  UserProfileModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_imports\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/userProfile/app/user_profile.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                UserProfileComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                UserProfileComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { ModalModule } from 'ngx-bootstrap';\n\nimport { UserProfileComponent }  from './user_profile.component';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, SharedModule, ModalModule.forRoot() ],\n  declarations: [ UserProfileComponent ],\n  providers:    [ ],\n  bootstrap:    [ UserProfileComponent ]\n})\nexport class UserProfileModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserSimpleService.html":{"url":"injectables/UserSimpleService.html","title":"injectable - UserSimpleService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserSimpleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/user.service-simple.ts\n        \n\n            \n                Description\n            \n            \n                User related service...\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                baseUrl\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Protected\n                                headers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addLocalUser\n                            \n                            \n                                genKey\n                            \n                            \n                                genUserKey\n                            \n                            \n                                getInfo\n                            \n                            \n                                getUsers\n                            \n                            \n                                loginLocal\n                            \n                            \n                                revokeKey\n                            \n                            \n                                revokeUserKey\n                            \n                            \n                                updateUserDetails\n                            \n                            \n                                updateUserProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addLocalUser\n                            \n                            \n                        \n                    \n                \n                \n                    \naddLocalUser(username: any, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:68\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenKey(userid: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:74\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            genUserKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenUserKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:92\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInfo\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetInfo()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUsers\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUsers()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:56\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginLocal\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginLocal(username: string, password: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        username\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        password\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revokeKey\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevokeKey(userid: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            revokeUserKey\n                            \n                            \n                        \n                    \n                \n                \n                    \nrevokeUserKey()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:98\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserDetails(userid: any, details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:62\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userid\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateUserProfile\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateUserProfile(details: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        details\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            headers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        headers:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/user.service-simple.ts:37\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http, Response, RequestOptions, Headers } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { User, LoginResult, SaveResult } from './user-models'\nimport { ConfigService } from '../shared/config-service';\n/**\n * User related service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UserSimpleService extends BaseService {\n  protected baseUrl: any;\n  protected config: any;\n  protected headers: any;\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getInfo(): Promise {\n    return this.http.get(`${this.baseUrl}/user/info`)\n    .toPromise()\n    .then((res:any) => this.extractData(res, 'user') as User);\n  }\n\n  loginLocal(username: string, password: string): Promise {\n    console.log(`Loggin in locally using brand: ${this.config.branding}, portal: ${this.config.portal}`);\n    return this.http.post(`${this.baseUrl}/user/login_local`, {username: username, password:password, branding:this.config.branding, portal: this.config.portal}, this.getOptionsClient())\n    .toPromise()\n    .then(this.extractData);\n  }\n\n  getUsers() :Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/admin/users/get`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as User[]);\n  }\n\n  updateUserDetails(userid: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/update`, {userid: userid, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  addLocalUser(username: any, details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/newUser`, {username: username, details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/genKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeKey(userid: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/admin/users/revokeKey`, {userid: userid}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  updateUserProfile(details: any) {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/update`, {details:details}, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  genUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/genKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n  revokeUserKey() {\n    return this.http.post(`${this.brandingAndPortalUrl}/user/revokeKey`, {},this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res) as SaveResult[]);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilityService.html":{"url":"injectables/UtilityService.html","title":"injectable - UtilityService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UtilityService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/util-service.ts\n        \n\n            \n                Description\n            \n            \n                Utility service...\nAuthor: Shilo Banihit\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                concatenate\n                            \n                            \n                                    Public\n                                getFirstofArray\n                            \n                            \n                                    Public\n                                getPropertyFromObject\n                            \n                            \n                                    Public\n                                getPropertyFromObjectConcat\n                            \n                            \n                                    Public\n                                getPropertyFromObjectMapping\n                            \n                            \n                                    Public\n                                hasValue\n                            \n                            \n                                    Public\n                                joinArray\n                            \n                            \n                                    Public\n                                runTemplate\n                            \n                            \n                                    Public\n                                splitArrayStringsToArray\n                            \n                            \n                                    Public\n                                splitStringToArray\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            concatenate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        concatenate(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:39\n                            \n                        \n\n\n                \n                    \n                            returns concatenated string\nAuthor: Shilo Banihit\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFirstofArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFirstofArray(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:174\n                            \n                        \n\n\n                \n                    \n                            Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe delimiter\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPropertyFromObject\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPropertyFromObject(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:70\n                            \n                        \n\n\n                \n                    \n                            returns a property from the provided object.\nAuthor: Andrew Brazzatti\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPropertyFromObjectConcat\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPropertyFromObjectConcat(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:111\n                            \n                        \n\n\n                \n                    \n                            returns an array of concatenated values\nAuthor: Shilo Banihit\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \ndict of field: array of field paths to concat\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getPropertyFromObjectMapping\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getPropertyFromObjectMapping(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:82\n                            \n                        \n\n\n                \n                    \n                            returns value based on mapping\nAuthor: Shilo Banihit\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \ndict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasValue\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasValue(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:99\n                            \n                        \n\n\n                \n                    \n                            returns true if value is not null, undefined, empty\nAuthor: Shilo Banihit\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            joinArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        joinArray(data: any, config: any, fieldName: string, fieldSeparator: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:184\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        fieldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        fieldSeparator\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            runTemplate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        runTemplate(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:188\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitArrayStringsToArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        splitArrayStringsToArray(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:146\n                            \n                        \n\n\n                \n                    \n                            Splits a string of arrays into an array by it's delimiter\nAuthor: Moises Sacal Bonequi\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe delimiter\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            splitStringToArray\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        splitStringToArray(data: any, config: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/util-service.ts:128\n                            \n                        \n\n\n                \n                    \n                            Splits a string into an array by it's delimiter\nAuthor: Andrew Brazzatti\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                        \n                                                \n                                                \n                                                        config\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                \nThe delimiter\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport * as _ from \"lodash\";\nimport moment from 'moment-es6';\n/**\n * Utility service...\n *\n * Author: Shilo Banihit\n *\n */\n@Injectable()\nexport class UtilityService {\n\n  /**\n   * returns concatenated string\n   *\n   * Author: Shilo Banihit\n   * @param  {any} config\n   * @return {string}\n   */\n  public concatenate(data: any, config: any) {\n    let result:any = '';\n    _.each(config.fields, (f:any) => {\n      if (_.isArray(data)) {\n        result = [];\n        let itemResult = '';\n        _.each(data, (d:any) => {\n          const fldData = _.get(d, f);\n          // checking if field has data, otherwise will be skipping concat\n          if (fldData) {\n            itemResult = `${itemResult}${_.isEmpty(itemResult) ? '' : config.delim}${fldData}`;\n          }\n        });\n        result.push(itemResult);\n      } else {\n        const fldData = _.get(data, f);\n        if (fldData) {\n          result = `${result}${_.isEmpty(result) ? '' : config.delim}${fldData}`;\n        }\n      }\n    });\n    return result;\n  }\n\n  /**\n   * returns a property from the provided object.\n   *\n   * Author: Andrew Brazzatti\n   * @param  {any} config\n   * @return {string}\n   */\n  public getPropertyFromObject(data: any, config: any) {\n    const fieldPath = config.field;\n    return _.get(data,fieldPath);\n  }\n  /**\n   * returns value based on mapping\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: field path of data, mapping - array of dict with 'key', the value and the actual mapping value 'val', 'default' - the value if there's no match\n   * @return {any}\n   */\n  public getPropertyFromObjectMapping(data: any, config:any) {\n    const fieldPath = config.field;\n    const val = _.isUndefined(fieldPath) ? data : _.get(data, fieldPath);\n    const foundMapping = _.find(config.mapping, (mapEntry) => {\n      return `${mapEntry.key}` == `${val}`;\n    });\n    return foundMapping ? foundMapping.value : config.default;\n  }\n\n  /**\n   * returns true if value is not null, undefined, empty\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config\n   * @return {string}\n   */\n  public hasValue(data: any, config:any = null) {\n    return !_.isEmpty(data) && !_.isUndefined(data) && !_.isNull(data);\n  }\n\n  /**\n   * returns an array of concatenated values\n   *\n   * Author: Shilo Banihit\n   * @param {any} data\n   * @param  {any} config - dict of field: array of field paths to concat\n   * @return {string}\n   */\n  public getPropertyFromObjectConcat(data:any, config:any) {\n    let values = [];\n    _.each(config.field, (f) => {\n      values.push(_.get(data, f));\n    });\n    return _.concat([], ...values);\n  }\n\n\n  /**\n   * Splits a string into an array by it's delimiter\n   *\n   * Author: Andrew Brazzatti\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {string}\n   */\n  public splitStringToArray(data:any, config:any) {\n    let delim = config.delim;\n    let field = config.field;\n    let value = data;\n    if(field) {\n      value = _.get(data,field);\n    }\n    return value.split(delim);\n  }\n\n  /**\n   * Splits a string of arrays into an array by it's delimiter\n   *\n   * Author: Moises Sacal Bonequi\n   * @param {any} data\n   * @param  {any} config - The delimiter\n   * @return {array}\n   */\n   public splitArrayStringsToArray(data:any, config:any) {\n     let regex = config.regex || ',';\n     let flags = config.flags || 'g';\n     const reg = new RegExp(regex, flags);\n     let regexTrail = config.regexTrail || '(^,)|(,$)';\n     let flagsTrail = config.flagsTrail || 'g';\n     const regTrail = new RegExp(regexTrail, flagsTrail);\n     let field = config.field;\n     let value = data;\n     if(field) {\n       value = _.get(data,field);\n     }\n     const values = [];\n     _.each(value, (v) => {\n       if(v){v = v.replace(regTrail, '');}\n       values.push(v.split(reg).map(item => item.trim()));\n     });\n     return _.concat([], ...values);\n   }\n\n   /**\n    * Splits a string of arrays into an array by it's delimiter\n    *\n    * Author: Moises Sacal Bonequi\n    * @param {any} data\n    * @param  {any} config - The delimiter\n    * @return {array}\n    */\n    public getFirstofArray(data:any, config:any) {\n      let delim = config.delim;\n      let field = config.field;\n      let value = data;\n      if(field) {\n        value = _.get(data,field);\n      }\n      return _.first(value);\n    }\n\n    public joinArray(data:any, config:any, fieldName:string=null, fieldSeparator:string=null) {\n      return _.join(_.get(data, fieldName ? fieldName : config.field), fieldSeparator ? fieldSeparator : config.separator);\n    }\n\n    public runTemplate(data:any, config:any) {\n      const imports = _.extend({data:data, config:config, moment:moment}, this);\n      const templateData = {imports: imports};\n      const template = _.template(config.template, templateData);\n      return template();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/VocabFieldLookupService.html":{"url":"injectables/VocabFieldLookupService.html","title":"injectable - VocabFieldLookupService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  VocabFieldLookupService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/form/field-vocab.component.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findLookupData\n                            \n                            \n                                getCollectionRootUrl\n                            \n                            \n                                getExternalServiceUrl\n                            \n                            \n                                getLookupData\n                            \n                            \n                                getMintRootUrl\n                            \n                            \n                                getUserLookupUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/field-vocab.component.ts:421\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findLookupData\n                            \n                            \n                        \n                    \n                \n                \n                    \nfindLookupData(field: VocabField, search: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:452\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    VocabField\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        search\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getCollectionRootUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetCollectionRootUrl(collectionId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:444\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectionId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getExternalServiceUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetExternalServiceUrl(provider: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:460\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        provider\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLookupData\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLookupData(field: VocabField)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:427\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    VocabField\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMintRootUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMintRootUrl(source: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:456\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getUserLookupUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetUserLookupUrl(searchSource: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/field-vocab.component.ts:448\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        searchSource\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Input, Component, Injectable, Inject, OnInit, Output, EventEmitter, ElementRef, ViewChild } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as _ from \"lodash\";\nimport { Observable } from 'rxjs';\nimport { Subject } from \"rxjs/Subject\";\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/map'\nimport { Http } from '@angular/http';\nimport { BaseService } from '../base-service';\nimport { CompleterService, CompleterData, CompleterItem } from 'ng2-completer';\nimport { ConfigService } from '../config-service';\nimport * as luceneEscapeQuery from \"lucene-escape-query\";\n/**\n * Vocabulary Field\n *\n * Author: Shilo Banihit\n *\n */\nexport class VocabField extends FieldBase {\n  public searchStr: any;\n  public vocabId: string;\n  public sourceData: any;\n  public completerService: CompleterService;\n  public dataService: CompleterData;\n  public initialValue: any;\n  public titleFieldName: string;\n  public titleFieldArr: string[];\n  public titleFieldDelim: any;\n  public searchFields: string;\n  public fieldNames: any[];\n  public sourceType: string;\n  public lookupService: any;\n  public placeHolder: string;\n  public disableEditAfterSelect: boolean;\n  public stringLabelToField: string;\n  public component: any;\n  public restrictToSelection: boolean;\n  public storeLabelOnly: boolean;\n  public provider: string;\n  public resultArrayProperty: string;\n\n  @Output() onItemSelect: EventEmitter = new EventEmitter();\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.clName = 'VocabField';\n    this.hasLookup = true;\n    this.vocabId = options['vocabId'] || '';\n    this.controlType = 'textbox';\n    this.titleFieldName = options['titleFieldName'] || 'title';\n    this.titleFieldArr = options['titleFieldArr'] || [];\n    this.searchFields = options['searchFields'] || '';\n    this.titleFieldDelim = options['titleFieldDelim'] || ' - ';\n    this.fieldNames = options['fieldNames'] || [];\n    this.sourceType = options['sourceType'] || 'vocab';\n    this.placeHolder = options['placeHolder'] || 'Select a valid value';\n    this.disableEditAfterSelect = options['disableEditAfterSelect'] == undefined ? true : options['disableEditAfterSelect'];\n    this.stringLabelToField = options['stringLabelToField'] ? options['stringLabelToField'] : 'dc_title';\n    this.restrictToSelection = _.isUndefined(options['restrictToSelection']) ? false : options['restrictToSelection'];\n    this.storeLabelOnly = options['storeLabelOnly'] ? options['storeLabelOnly'] : false;\n    this.provider = options['provider'] ? options['provider'] : '';\n    this.resultArrayProperty = options['resultArrayProperty'] ? options['resultArrayProperty'] : '';\n  }\n\n  createFormModel(valueElem: any = undefined, createFormGroup: boolean = false) {\n    if (valueElem) {\n      this.value = valueElem;\n    }\n    if (createFormGroup) {\n      const flds = {};\n      _.forEach(this.fieldNames, fld => {\n        _.forOwn(fld, (srcFld, targetFld) => {\n          flds[targetFld] = new FormControl(this.value[targetFld] || '');\n        });\n      });\n      this.formModel = new FormGroup(flds);\n    } else {\n      this.formModel = new FormControl(this.value || '');\n    }\n    if (this.value) {\n      if(!_.isString(this.value)) {\n      const init = _.cloneDeep(this.value);\n      init.title = this.getTitle(this.value);\n      this.initialValue = init;\n    } else {\n      let init = {};\n      init['title'] = this.value;\n      init[this.stringLabelToField] = this.value;\n      this.initialValue = init;\n    }\n\n    }\n\n    if (this.required) {\n      this.formModel.setValidators([Validators.required]);\n    }\n    return this.formModel;\n  }\n\n  postInit(value: any) {\n    if (value) {\n      this.value = value;\n    } else {\n      this.setEmptyValue();\n    }\n    this.initLookupData();\n  }\n\n  setEmptyValue(updateTitle: boolean = false) {\n    this.value = null;\n    if (this.formModel) {\n      this.formModel.setValue(null, { emitEvent: true });\n    }\n    if (updateTitle && this.component && this.component.ngCompleter) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = null;\n    }\n    return this.value;\n  }\n\n  setLookupServices(completerService: any, lookupService: any) {\n    this.completerService = completerService;\n    this.lookupService = lookupService;\n  }\n\n  initLookupData() {\n    if (this.sourceType == \"vocab\") {\n      // Hack for creating the intended title...\n      _.forEach(this.sourceData, (data: any) => {\n        data.title = this.getTitle(data);\n      });\n      this.dataService = this.completerService.local(this.sourceData, this.searchFields, 'title');\n    } else if (this.sourceType == \"collection\" || this.sourceType == \"user\") {\n      let url = this.lookupService.getCollectionRootUrl(this.vocabId);\n      if (this.sourceType == \"user\") {\n        url = this.lookupService.getUserLookupUrl();\n      }\n      console.log(`Using: ${url}`);\n      // at the moment, multiple titles arrays are not supported\n      // TODO: consider replacing with ngx-bootstrap typeahead\n      const title = this.titleFieldArr.length == 1 ? this.titleFieldArr[0] : 'title';\n      console.log(`Using title: ${title}`);\n      this.dataService = this.completerService.remote(url, this.searchFields, title);\n    } else if (this.sourceType == \"mint\") {\n      const url = this.lookupService.getMintRootUrl(this.vocabId);\n      console.log(`Using: ${url}`);\n\n      this.dataService = new MintLookupDataService(\n        url,\n        this.lookupService.http,\n        this.fieldNames,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim,\n        this.searchFields);\n    } else if (this.sourceType == \"external\") {\n      const url = this.lookupService.getExternalServiceUrl(this.provider);\n      this.dataService = new ExternalLookupDataService(\n        url,\n        this.lookupService.http,\n        this.resultArrayProperty,\n        this.titleFieldName,\n        this.titleFieldArr,\n        this.titleFieldDelim\n      );\n    }\n\n  }\n\n  public getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if(_.isString(data)) {\n        return data;\n      }\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : delimPair.prefix}${titleVal}${_.isEmpty(title) ? '' : delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n\n  public getValue(data: any) {\n    const valObj = {};\n    if (!_.isUndefined(data) && !_.isEmpty(data)) {\n      if (_.isString(data)) {\n        console.log(`Data is string...`)\n        if (this.storeLabelOnly) {\n          return data;\n        } else {\n          valObj[this.stringLabelToField] = data;\n        }\n        return valObj;\n      }\n\n        _.forEach(this.fieldNames, (fldName: any) => {\n          if (data.originalObject) {\n            this.getFieldValuePair(fldName, data.originalObject, valObj)\n          } else {\n            this.getFieldValuePair(fldName, data, valObj)\n          }\n        });\n\n    }\n    return valObj;\n  }\n\n  public getFieldValuePair(fldName: any, data: any, valObj: any) {\n    if (_.isString(fldName)) {\n      valObj[fldName] = _.get(data, fldName);\n    } else {\n      // expects a value pair\n      _.forOwn(fldName, (srcFld, targetFld) => {\n        if (_.get(data, srcFld)) {\n          valObj[targetFld] = _.get(data, srcFld);\n        } else {\n          valObj[targetFld] = _.get(data, targetFld);\n        }\n      });\n    }\n  }\n\n  public setValue(value: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    this.formModel.setValue(value, { emitEvent: emitEvent });\n    if (updateTitle) {\n      this.component.ngCompleter.ctrInput.nativeElement.value = this.getTitle(value);\n    }\n  }\n\n}\n\nclass ExternalLookupDataService extends Subject implements CompleterData {\n\n    constructor(private url: string,\n      private http: Http,\n      private arrayProperty: string,\n      private compositeTitleName: string,\n      private titleFieldArr: string[],\n      private titleFieldDelim: string) {\n      super();\n    }\n\n    public search(term: string): void {\n\n      this.http.post(this.url,{options:{query: term}}).map((res: any, index: number) => {\n        // Convert the result to CompleterItem[]\n        let data = res.json();\n        let itemArray = _.get(data, this.arrayProperty);\n        let matches: CompleterItem[] = [];\n        _.each(itemArray, item => {\n          matches.push(this.convertToItem(item));\n        })\n\n        this.next(matches);\n      }).subscribe();\n    }\n\n    public cancel() {\n      // Handle cancel\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n      if (!data) {\n        return null;\n      }\n      let completerItem = {};\n      completerItem[this.compositeTitleName] = this.getTitle(data);\n      completerItem['originalObject'] = data;\n      return completerItem as CompleterItem;\n    }\n\n    getTitle(data: any): string {\n      let title = '';\n      if (data) {\n        if (_.isString(this.titleFieldDelim)) {\n          _.forEach(this.titleFieldArr, (titleFld: string) => {\n            const titleVal = _.get(data, titleFld);\n            if (titleVal) {\n              title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${titleVal}`;\n            }\n          });\n        } else {\n          // // expecting a delim pair array, 'prefix', 'suffix'\n          // _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          //   const delimPair = this.titleFieldDelim[idx];\n          //   const titleVal = data[titleFld];\n          //   if (titleVal) {\n          //     title = `${title} ${titleVal}`;\n          //   }\n          // });\n        }\n      }\n      return title;\n    }\n\n}\nclass MintLookupDataService extends Subject implements CompleterData {\n\n  searchFields: any[];\n\n  constructor(private url: string,\n    private http: Http,\n    private fields: string[],\n    private compositeTitleName: string,\n    private titleFieldArr: string[],\n    private titleFieldDelim: any[],\n    searchFieldStr: any) {\n    super();\n    this.searchFields = searchFieldStr.split(',');\n  }\n\n  public search(term: string): void {\n    term = _.trim(luceneEscapeQuery.escape(term));\n    let searchString = '';\n    if (!_.isEmpty(term)) {\n      term = _.toLower(term);\n      _.forEach(this.searchFields, (searchFld) => {\n        searchString = `${searchString}${_.isEmpty(searchString) ? '' : ' OR '}${searchFld}:${term}*`\n      });\n    }\n    const searchUrl = `${this.url}${searchString}`;\n    this.http.get(`${searchUrl}`).map((res: any, index: number) => {\n      // Convert the result to CompleterItem[]\n      let data = res.json();\n      let matches: CompleterItem[] = _.map(data, (mintDataItem: any) => { return this.convertToItem(mintDataItem); });\n      this.next(matches);\n    }).subscribe();\n  }\n\n  public cancel() {\n    // Handle cancel\n  }\n\n  public convertToItem(data: any): CompleterItem | null {\n    if (!data) {\n      return null;\n    }\n    const item = {};\n    _.forEach(this.fields, (fieldName) => {\n      if (_.isString(fieldName)) {\n        item[fieldName] = data[fieldName];\n      } else {\n        // expects a value pair\n        _.forOwn(fieldName, (srcFld, targetFld) => {\n          if (_.get(data, srcFld)) {\n            item[srcFld] = _.get(data, srcFld);\n          } else {\n            item[targetFld] = _.get(data, targetFld);\n          }\n        });\n      }\n    });\n    // build the title,\n    let completerItem = {};\n    completerItem[this.compositeTitleName] = this.getTitle(data);\n    completerItem['originalObject'] = item;\n    return completerItem as CompleterItem;\n  }\n\n  getTitle(data: any): string {\n    let title = '';\n    if (data) {\n      if (_.isString(this.titleFieldDelim)) {\n        _.forEach(this.titleFieldArr, (titleFld: string) => {\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title}${_.isEmpty(title) ? '' : this.titleFieldDelim}${data[titleFld]}`;\n          }\n        });\n      } else {\n        // expecting a delim pair array, 'prefix', 'suffix'\n        _.forEach(this.titleFieldArr, (titleFld: string, idx) => {\n          const delimPair = this.titleFieldDelim[idx];\n          const titleVal = data[titleFld];\n          if (titleVal) {\n            title = `${title} ${titleVal}${delimPair.suffix}`;\n          }\n        });\n      }\n    }\n    return title;\n  }\n}\n\n@Injectable()\nexport class VocabFieldLookupService extends BaseService {\n\n  constructor(@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getLookupData(field: VocabField) {\n    const vocabId = field.vocabId;\n    // only retrieving static data when on vocab mode\n    if (field.sourceType == \"vocab\") {\n      const url = `${this.brandingAndPortalUrl}/${this.config.vocabRootUrl}/${vocabId}`;\n      return this.http.get(url, this.options)\n        .flatMap((res: any) => {\n          const data = this.extractData(res);\n          field.sourceData = data;\n          field.postInit(field.value);\n          return Observable.of(field);\n        });\n    }\n    field.postInit(field.value);\n    return Observable.of(field);\n  }\n\n  getCollectionRootUrl(collectionId: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.collectionRootUri}/${collectionId}/?search=`;\n  }\n\n  getUserLookupUrl(searchSource: string = '') {\n    return `${this.brandingAndPortalUrl}/${this.config.userRootUri}/?source=${searchSource}&name=`;\n  }\n\n  findLookupData(field: VocabField, search: string) {\n\n  }\n\n  getMintRootUrl(source: string) {\n    return `${this.brandingAndPortalUrl}/${this.config.mintRootUri}/${source}/?search=`;\n  }\n\n  getExternalServiceUrl(provider: string) {\n    return `${this.brandingAndPortalUrl}/external/vocab/${provider}`;\n  }\n}\n\n@Component({\n  selector: 'rb-vocab',\n  template: `\n  \n    \n      {{field.label}} {{getRequiredLabelStr()}}\n      \n    \n    {{field.help}}\n    \n    {{field.validationMessages.required}}\n  \n  \n    \n      {{field.help}}\n      \n        \n      \n      \n        {{removeBtnText}}\n        \n      \n    \n    \n      {{field.validationMessages.required}}\n    \n  \n\n  \n    {{field.label}}\n    {{getTitle()}}\n  \n  `,\n})\nexport class VocabFieldComponent extends SimpleComponent {\n  @Input() field: VocabField;\n  @Input() isEmbedded: boolean = false;\n  @Input() canRemove: boolean = false;\n  @Input() removeBtnText: string = null;\n  @Input() removeBtnClass: string = 'fa fa-minus-circle btn text-20 pull-right btn-danger';\n  @Input() index: number;\n  @Input() disableEditAfterSelect: boolean = true;\n  @Output() onRemoveBtnClick: EventEmitter = new EventEmitter();\n  disableInput: boolean;\n  @ViewChild('ngCompleter') public ngCompleter: ElementRef;\n\n  constructor() {\n    super();\n  }\n\n  ngOnInit() {\n    this.field.component = this;\n    if (_.isEmpty(this.field.value) || _.isNull(this.field.value) || _.isUndefined(this.field.value)) {\n      this.loaded = true;\n    }\n  }\n\n  public getGroupClass(fldName: string = null): string {\n    if(this.isEmbedded) {\n      return `col-xs-12 form-group ${this.hasRequiredError() ? 'has-error' : ''}`;\n    } else {\n      return '';\n    }\n  }\n\n  onSelect(selected: any, emitEvent: boolean = true, updateTitle: boolean = false) {\n    console.log(`On select:`);\n    console.log(selected);\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (selected) {\n      if (this.loaded) {\n        this.field.onItemSelect.emit(selected['originalObject']);\n      } else {\n        // set the flag after initial call\n        this.loaded = true;\n      }\n      if(this.field.storeLabelOnly){\n        this.field.setValue(this.field.getValue(selected.title), emitEvent, updateTitle);\n      } else {\n        this.field.setValue(this.field.getValue(selected['originalObject']), emitEvent, updateTitle);\n      }\n      if (disableEditAfterSelect)\n        this.disableInput = true;\n    } else {\n      if (disableEditAfterSelect) {\n        // means user can't edit, so no worries!\n        this.field.setValue(null, emitEvent, updateTitle);\n      } else {\n        // set whatever value on the searchStr, let the fields decide how to parse the string...\n        this.field.setValue(this.field.getValue(this.field.searchStr), emitEvent, updateTitle);\n      }\n    }\n  }\n\n  onKeyup(value: any) {\n    let disableEditAfterSelect = this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    if (!disableEditAfterSelect && !this.field.restrictToSelection) {\n      this.field.formModel.setValue(this.field.getValue(this.field.searchStr));\n    }\n\n  }\n\n  onRemove(event: any) {\n    this.onRemoveBtnClick.emit([event, this.index]);\n  }\n\n  getTitle() {\n    return this.field && _.isFunction(this.field.getTitle) ? this.field.getTitle(this.field.value) : '';\n  }\n\n  getClearUnselected() {\n    if (this.field.restrictToSelection) {\n      return true;\n    } else {\n      return this.disableEditAfterSelect && this.field.disableEditAfterSelect;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkflowStepButtonComponent.html":{"url":"components/WorkflowStepButtonComponent.html","title":"component - WorkflowStepButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkflowStepButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workflow-button.component.ts\n\n\n\n    \n        Extends\n    \n    \n            AnchorOrButtonComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                workflowstep-button\n            \n\n\n\n            \n                template\n                {{field.label}}\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                gotoTargetStep\n                            \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                    Public\n                                onClick\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gotoTargetStep\n                            \n                            \n                        \n                    \n                \n                \n                    \ngotoTargetStep(event: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workflow-button.component.ts:25\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDisabled()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:527\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onClick\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onClick(event: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:523\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     WorkflowStepButton\n\n                    \n                \n                    \n                        \n                            Type :     WorkflowStepButton\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workflow-button.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     AnchorOrButton\n\n                    \n                \n                    \n                        \n                            Type :     AnchorOrButton\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:521\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     AnchorOrButtonComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in AnchorOrButtonComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AnchorOrButtonComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { AnchorOrButton } from './field-simple';\n\nexport class WorkflowStepButton extends AnchorOrButton {\n  targetStep: string;\n\n  constructor(options: any, injector:any) {\n    super(options, injector);\n    this.targetStep = options['targetStep'] || null;\n  }\n}\n\n// For workflow buttons\n@Component({\n  selector: 'workflowstep-button',\n  template: `\n  {{field.label}}\n  `,\n})\nexport class WorkflowStepButtonComponent extends AnchorOrButtonComponent {\n  field: WorkflowStepButton;\n\n  gotoTargetStep(event:any) {\n    return this.fieldMap._rootComp.stepTo(this.field.targetStep);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{field.label}}'\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkflowStepButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceFieldComponent.html":{"url":"components/WorkspaceFieldComponent.html","title":"component - WorkspaceFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-field.component.ts\n\n\n    \n        Description\n    \n    \n        Base component for a Workspace field.\nAuthor: moisbo\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ws-field\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                disabledElements\n                            \n                            \n                                disabledExpression\n                            \n                            \n                                fieldAnchor\n                            \n                            \n                                fieldElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isDisabled\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                parentId\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isValid\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                            For DI'ing...\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The model for this field.\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        Field map\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        Form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parentId\n                    \n                    \n                        The parentId of this field\n\n                            \n                            Type :    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        The value of this field.\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isDisabled\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        isDisabled()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Change handler, instantiates the field component.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            disabledElements\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabledElements:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:59\n                            \n                        \n\n                \n                    \n                        Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disabledExpression\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        disabledExpression:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldAnchor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldAnchor:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field', {read: ViewContainerRef})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:42\n                            \n                        \n\n                \n                    \n                        The DOM node for this field.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldElement:     \n\n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('field')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-field.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in angular/shared/form/workspace-field.component.ts:70\n                                \n                            \n                    \n                        \n                                If the form is valid.\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Inject, ViewChild, ViewContainerRef, ComponentFactoryResolver, ComponentRef, ApplicationRef, ElementRef } from '@angular/core';\nimport { FieldBase } from './field-base';\nimport { FormControl, FormGroup, FormArray } from '@angular/forms';\nimport { SimpleComponent } from './field-simple.component';\nimport * as _ from \"lodash\";\nimport { WorkspaceTypeService } from '../workspace-service';\n\ndeclare var jQuery: any;\ndeclare var $: any;\n\n/**\n * Base component for a Workspace field.\n *\n * Author: moisbo\n *\n */\n@Component({\n  selector: 'ws-field',\n  template: ''\n})\nexport class WorkspaceFieldComponent {\n  /**\n   * The model for this field.\n   */\n  @Input() field: FieldBase;\n\n  /**\n   * Form group\n   */\n  @Input() form: FormGroup;\n  /**\n   * The value of this field.\n   */\n  @Input() value: any;\n  /**\n   * Field map\n   */\n  @Input() fieldMap: any;\n  /**\n   * The DOM node for this field.\n   */\n  @ViewChild('field', {read: ViewContainerRef}) fieldAnchor: ViewContainerRef;\n\n  /**\n   * The parentId of this field\n   */\n  @Input() parentId: string;\n\n  disabledExpression: string;\n\n  @ViewChild('field') fieldElement;\n\n\n\n\n  /**\n  * Elements that were already disabled before we ran isDisabled (so they can be restored disabled)\n  */\n  private disabledElements: any;\n\n  /**\n   * For DI'ing...\n   */\n  constructor(@Inject(ComponentFactoryResolver) private componentFactoryResolver: ComponentFactoryResolver, protected app: ApplicationRef){\n    this.disabledElements = [];\n  }\n  /**\n   * If the form is valid.\n   */\n  get isValid() {\n    if (this.form && this.form.controls) {\n      return this.form.controls[this.field.name].valid;\n    }\n    return false;\n  }\n\n  /**\n   *\n   */\n  public isDisabled() {\n\n    var disabledExpression = this.field.options['disabledExpression'];\n    if(disabledExpression != null) {\n\n      var imports = this.fieldAnchor;\n      var variables= {};\n      variables['imports'] = this.fieldMap._rootComp;\n      var compiled = _.template(disabledExpression, variables);\n      var parentElement = jQuery(this.fieldElement.nativeElement.parentElement);\n      if(compiled() == \"true\") {\n        //take note of which elements where already disabled as we dont want to enable them if whole component becomes enabled again\n        this.disabledElements = parentElement.find('*:disabled');\n        parentElement.find('input').prop( \"disabled\", true );\n        return 'disabled';\n      } else {\n        if(jQuery(this.fieldElement.nativeElement).prop('disabled') == 'disabled') {\n          //previously disabled so lets re-enable\n          parentElement.find('input').prop( \"disabled\", false );\n          _.each(this.disabledElements, disabledElement => disabledElement.prop(\"disabled\",true));\n        }\n        return null;\n      }\n\n    }\n    return null;\n  }\n\n  /**\n   * Change handler, instantiates the field component.\n   */\n  ngOnChanges() {\n    if (!this.field || !this.componentFactoryResolver) {\n      return;\n    }\n    this.fieldAnchor.clear();\n\n    let compFactory = this.componentFactoryResolver.resolveComponentFactory(this.field.compClass);\n    let fieldCompRef:ComponentRef = > this.fieldAnchor.createComponent(compFactory, undefined, this.app['_injector']);\n    fieldCompRef.instance.injector = this.app['_injector'];\n    fieldCompRef.instance.field = this.field;\n    fieldCompRef.instance.form = this.form;\n    fieldCompRef.instance.fieldMap = this.fieldMap;\n    fieldCompRef.instance.parentId = this.parentId;\n    this.fieldMap[this.field.name].instance = fieldCompRef.instance;\n  }\n}\n\nexport class WorkspaceSelectorField extends FieldBase  {\n  workspaceApps: any[] = [];\n  open: string;\n  saveFirst: string;\n  rdmp: string;\n  workspaceTypeService: WorkspaceTypeService;\n  workspaceApp: any;\n  appLink: string;\n\n  constructor(options: any, injector: any) {\n    super(options, injector);\n    this.workspaceTypeService = this.getFromInjector(WorkspaceTypeService);\n    this.open = this.getTranslated(options['open'], options['open']);\n    this.saveFirst = this.getTranslated(options['saveFirst'], options['saveFirst']);\n    this.rdmp = undefined;\n    // this.options = options['options'] || [];\n    this.workspaceApps = _.map(options['defaultSelection'] || [], (option) => {\n      option['label'] = this.getTranslated(option['label'], option['label']);\n      option['name'] = '';\n      return option;\n    });\n    this.appLink = this.workspaceTypeService.getBrand() + '/record/';\n    this.workspaceTypeService.getWorkspaceTypes().then(response => {\n      if(response['status']) {\n        //append results from database into workspaceApps\n        this.workspaceApps = _.concat(this.workspaceApps, response['workspaceTypes']);\n      } else {\n        throw new Error('cannot get workspaces');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  init() {\n    this.rdmp = this.fieldMap._rootComp.oid || undefined;\n  }\n\n  registerEvents() {\n    this.fieldMap._rootComp.recordCreated.subscribe(this.setOid.bind(this));\n    this.fieldMap._rootComp.recordSaved.subscribe(this.setOid.bind(this));\n  }\n\n  setOid(o) {\n    this.rdmp = o.oid;\n  }\n\n\n  loadWorkspaceDetails(value: string) {\n    //GET me the value from the database\n    if(!value){\n      this.workspaceApp = null\n    }else {\n      this.workspaceApp = _.find(this.workspaceApps,\n        function(w) {\n          return w['name'] == value;\n        }\n      );\n    }\n  }\n\n  createFormModel() {\n    if (this.controlType == 'checkbox') {\n      const fgDef = [];\n\n      _.map(this.options, (opt:any)=>{\n        const hasValue = _.find(this.value, (val:any) => {\n          return val == opt.value;\n        });\n        if (hasValue) {\n          fgDef.push(new FormControl(opt.value));\n        }\n      });\n      // const fg = new FormArray(fgDef);\n      // return fg;\n      return new FormArray(fgDef);\n    } else {\n      // const model = super.createFormModel();\n      // console.log(`Created form model:`);\n      // console.log(model);\n      // return model;\n      return super.createFormModel();\n    }\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WorkspaceListModule.html":{"url":"modules/WorkspaceListModule.html","title":"module - WorkspaceListModule","body":"\n                   \n\n\n\n\n  Modules\n  WorkspaceListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_imports\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            angular/workspace_list/app/workspace_list.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Workspace List Module\nAuthor: Shilo Banihit\n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                WorkspaceListComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SharedModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                WorkspaceListComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule }      from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule} from \"@angular/forms\";\nimport { HttpModule } from '@angular/http';\nimport { WorkspaceListComponent }  from './workspace.component';\nimport { PaginationModule,TooltipModule } from 'ngx-bootstrap';\nimport { SharedModule } from './shared/shared.module';\nimport * as $ from 'jquery';\n\n/**\n * Workspace List Module\n *\n * Author: Shilo Banihit\n * @param  {[   BrowserModule}           {imports\n * @param  {[type]} HttpModule\n * @param  {[type]} ReactiveFormsModule\n * @param  {[type]} FormsModule\n * @param  {[type]} PaginationModule.forRoot(\n * @return {[type]}\n */\n@NgModule({\n  imports:      [ BrowserModule, HttpModule, ReactiveFormsModule, FormsModule, PaginationModule.forRoot(), TooltipModule.forRoot(), SharedModule ],\n  declarations: [ WorkspaceListComponent ],\n  providers:    [],\n  bootstrap:    [ WorkspaceListComponent ],\n  entryComponents: [ ]\n})\nexport class WorkspaceListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceSelectorComponent.html":{"url":"components/WorkspaceSelectorComponent.html","title":"component - WorkspaceSelectorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceSelectorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            SimpleComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                workspace-selector-parent\n            \n\n\n\n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel(val: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WorkspaceSelectorComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     SimpleComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in SimpleComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { WorkspaceSelectorField } from './workspace-field.component';\n\nimport * as _ from \"lodash\";\n@Component({\n  selector: 'workspace-selector-parent',\n  template: ''\n})\nexport class WorkspaceSelectorComponent extends SimpleComponent {\n  static clName = 'WorkspaceSelectorComponent';\n\n  getLabel(val: any): string {\n    const opt = _.find(this.field.options, (opt) => {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n@Component({\n  selector: 'workspace-selector',\n  template: `\n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{opt.label}}\n    \n  \n  \n  \n    \n      \n        {{ field.workspaceApp.name | uppercase }}\n      \n      \n        \n          \n            {{ field.workspaceApp.subtitle }}\n            \n              {{ field.workspaceApp.description }}\n              {{ field.open }}\n            \n            \n              \n                {{ field.saveFirst }}\n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n  `,\n})\nexport class WorkspaceSelectorFieldComponent extends WorkspaceSelectorComponent {\n  field: WorkspaceSelectorField\n  static clName = 'WorkspaceSelectorFieldComponent';\n\n  ngOnInit() {\n    this.field.init();\n    this.field.registerEvents();\n  }\n\n  saveAndOpenWorkspace(){\n    this.fieldMap._rootComp.onSubmit().subscribe(response => {\n      window.location.href = `${this.field.appLink}${this.field.workspaceApp.name}/edit?rdmp=${this.field.rdmp}`;\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceSelectorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WorkspaceSelectorFieldComponent.html":{"url":"components/WorkspaceSelectorFieldComponent.html","title":"component - WorkspaceSelectorFieldComponent","body":"\n                   \n\n\n\n\n\n  Components\n  WorkspaceSelectorFieldComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    angular/shared/form/workspace-selector.component.ts\n\n\n\n    \n        Extends\n    \n    \n            WorkspaceSelectorComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                workspace-selector\n            \n\n\n\n            \n                template\n                  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{opt.label}}\n    \n  \n  \n  \n    \n      \n        {{ field.workspaceApp.name | uppercase }}\n      \n      \n        \n          \n            {{ field.workspaceApp.subtitle }}\n            \n              {{ field.workspaceApp.description }}\n              {{ field.open }}\n            \n            \n              \n                {{ field.saveFirst }}\n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                clName\n                            \n                            \n                                field\n                            \n                            \n                                    Static\n                                clName\n                            \n                            \n                                helpShow\n                            \n                            \n                                    Public\n                                injector\n                            \n                            \n                                loaded\n                            \n                            \n                                parentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                saveAndOpenWorkspace\n                            \n                            \n                                getLabel\n                            \n                            \n                                    Public\n                                getFormControl\n                            \n                            \n                                getFromInjector\n                            \n                            \n                                    Public\n                                getGroupClass\n                            \n                            \n                                getRequiredLabelStr\n                            \n                            \n                                    Public\n                                hasRequiredError\n                            \n                            \n                                    Public\n                                toggleHelp\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                fieldMap\n                            \n                            \n                                form\n                            \n                            \n                                index\n                            \n                            \n                                isEmbedded\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        Field model\n\n                            \n                            Type :    FieldBase\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fieldMap\n                    \n                    \n                        The field mapping\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        form\n                    \n                    \n                        The form group\n\n                            \n                            Type :    FormGroup\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        index\n                    \n                    \n                        The index of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isEmbedded\n                    \n                    \n                            \n                            Type :    boolean\n\n                            \n                        \n                            Default value : false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of this field\n\n                            \n                            Type :    any\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:54\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            saveAndOpenWorkspace\n                            \n                            \n                        \n                    \n                \n                \n                    \nsaveAndOpenWorkspace()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel(val: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        val\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getFormControl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getFormControl(name: string, ctrlIndex: number)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:81\n                            \n                        \n\n\n                \n                    \n                            Return the NG2 FormControl or subclass thereof\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                                \n                                                        ctrlIndex\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FormControl\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFromInjector\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFromInjector(token: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:141\n                            \n                        \n\n\n                \n                    \n                            Returns the NG2 root injector\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        token\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroupClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroupClass(fldName: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:111\n                            \n                        \n\n\n                \n                    \n                            Returns the CSS class\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        fldName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                null\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getRequiredLabelStr\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetRequiredLabelStr()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:133\n                            \n                        \n\n\n                \n                    \n                            Returns label\n\n\n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRequiredError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRequiredError()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:119\n                            \n                        \n\n\n                \n                    \n                            If this field has a 'required' error.\nAuthor: Shilo Banihit\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleHelp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleHelp()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:126\n                            \n                        \n\n\n                \n                    \n                            Convenience method to toggle help mode.\n\n\n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WorkspaceSelectorFieldComponent'\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     WorkspaceSelectorField\n\n                    \n                \n                    \n                        \n                            Type :     WorkspaceSelectorField\n\n                        \n                    \n                        \n                            \n                                    Defined in angular/shared/form/workspace-selector.component.ts:76\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            clName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'WorkspaceSelectorComponent'\n                        \n                    \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            helpShow\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        helpShow:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:64\n                            \n                        \n\n                \n                    \n                        Toggles help display\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            injector\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        injector:     Injector\n\n                    \n                \n                    \n                        \n                            Type :     Injector\n\n                        \n                    \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:60\n                            \n                        \n\n                \n                    \n                        The NG2 root injector\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loaded\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaded:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:74\n                            \n                        \n\n                \n                    \n                        Loaded flag\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parentId\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parentId:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     WorkspaceSelectorComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in WorkspaceSelectorComponent:69\n                            \n                        \n\n                \n                    \n                        Optional parentId of this component\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { SimpleComponent } from './field-simple.component';\nimport { FieldBase } from './field-base';\nimport { WorkspaceSelectorField } from './workspace-field.component';\n\nimport * as _ from \"lodash\";\n@Component({\n  selector: 'workspace-selector-parent',\n  template: ''\n})\nexport class WorkspaceSelectorComponent extends SimpleComponent {\n  static clName = 'WorkspaceSelectorComponent';\n\n  getLabel(val: any): string {\n    const opt = _.find(this.field.options, (opt) => {\n      return opt.value == val;\n    });\n    if (opt) {\n      return opt.label;\n    } else {\n      return '';\n    }\n  }\n\n}\n\n@Component({\n  selector: 'workspace-selector',\n  template: `\n  \n  \n    {{field.label}} {{ getRequiredLabelStr()}}\n    \n  \n  \n  \n  \n    {{opt.label}}\n    \n  \n  \n  \n    \n      \n        {{ field.workspaceApp.name | uppercase }}\n      \n      \n        \n          \n            {{ field.workspaceApp.subtitle }}\n            \n              {{ field.workspaceApp.description }}\n              {{ field.open }}\n            \n            \n              \n                {{ field.saveFirst }}\n              \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n  `,\n})\nexport class WorkspaceSelectorFieldComponent extends WorkspaceSelectorComponent {\n  field: WorkspaceSelectorField\n  static clName = 'WorkspaceSelectorFieldComponent';\n\n  ngOnInit() {\n    this.field.init();\n    this.field.registerEvents();\n  }\n\n  saveAndOpenWorkspace(){\n    this.fieldMap._rootComp.onSubmit().subscribe(response => {\n      window.location.href = `${this.field.appLink}${this.field.workspaceApp.name}/edit?rdmp=${this.field.rdmp}`;\n    });\n  }\n\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{field.label}} {{ getRequiredLabelStr()}}                {{opt.label}}                            {{ field.workspaceApp.name | uppercase }}                                          {{ field.workspaceApp.subtitle }}                          {{ field.workspaceApp.description }}              {{ field.open }}                                                      {{ field.saveFirst }}                                                                                        '\n    var COMPONENTS = [{'name': 'ActionButtonComponent', 'selector': 'action-button'},{'name': 'AnchorOrButtonComponent', 'selector': 'anchor-button'},{'name': 'ANDSVocabComponent', 'selector': 'ands-vocab-selector'},{'name': 'AsynchComponent', 'selector': 'asynch-component'},{'name': 'ButtonBarContainerComponent', 'selector': 'buttonbarcontainer'},{'name': 'CancelButtonComponent', 'selector': 'cancel-button'},{'name': 'ContributorComponent', 'selector': 'rb-contributor'},{'name': 'DashboardComponent', 'selector': 'dashboard'},{'name': 'DataLocationComponent', 'selector': 'data-location-selector'},{'name': 'DateTimeComponent', 'selector': 'date-time'},{'name': 'DmpFieldComponent', 'selector': 'dmp-field'},{'name': 'DmpFormComponent', 'selector': 'dmp-form'},{'name': 'DropdownFieldComponent', 'selector': 'dropdownfield'},{'name': 'ExportFormComponent', 'selector': 'export-form'},{'name': 'GenericGroupComponent', 'selector': 'generic-group-field'},{'name': 'HiddenValueComponent', 'selector': 'hidden-field'},{'name': 'HtmlRawComponent', 'selector': 'htmlraw'},{'name': 'LinkValueComponent', 'selector': 'link-value'},{'name': 'LocalAuthComponent', 'selector': 'local-auth'},{'name': 'ManageRolesComponent', 'selector': 'manage-roles'},{'name': 'ManageUsersComponent', 'selector': 'manage-users'},{'name': 'MapComponent', 'selector': 'rb-mapdata'},{'name': 'MarkdownTextAreaComponent', 'selector': 'markdown-text-area'},{'name': 'ParameterRetrieverComponent', 'selector': 'parameter-retriever'},{'name': 'PDFListComponent', 'selector': 'rb-pdf-list'},{'name': 'PublishDataLocationSelectorComponent', 'selector': 'publish-data-location-selector'},{'name': 'RecordMetadataRetrieverComponent', 'selector': 'record-metadata-retriever'},{'name': 'RecordSearchComponent', 'selector': 'record-search'},{'name': 'RecordSearchRefinerComponent', 'selector': 'record-search-refiner'},{'name': 'RelatedObjectDataComponent', 'selector': 'rb-relatedobjectdata'},{'name': 'RelatedObjectSelectorComponent', 'selector': 'rb-RelatedObjectSelector'},{'name': 'RepeatableContributorComponent', 'selector': 'repeatable-contributor'},{'name': 'RepeatableGroupComponent', 'selector': 'repeatable-group'},{'name': 'RepeatableTextfieldComponent', 'selector': 'repeatable-textfield'},{'name': 'RepeatableVocabComponent', 'selector': 'repeatable-vocab'},{'name': 'ReportComponent', 'selector': 'report'},{'name': 'SaveButtonComponent', 'selector': 'save-button'},{'name': 'SelectionFieldComponent', 'selector': 'selectionfield'},{'name': 'SortComponent', 'selector': 'sort'},{'name': 'SpacerComponent', 'selector': 'spacer'},{'name': 'TabNavButtonComponent', 'selector': 'tab-nav-button'},{'name': 'TabOrAccordionContainerComponent', 'selector': 'tabcontainer'},{'name': 'TextAreaComponent', 'selector': 'text-area'},{'name': 'TextBlockComponent', 'selector': 'text-block'},{'name': 'TextFieldComponent', 'selector': 'textfield'},{'name': 'ToggleComponent', 'selector': 'toggle'},{'name': 'TransferOwnerComponent', 'selector': 'transfer-owner'},{'name': 'TreeNodeCheckboxComponent', 'selector': 'rb-tree-node-checkbox'},{'name': 'UserProfileComponent', 'selector': 'user-profile'},{'name': 'VocabFieldComponent', 'selector': 'rb-vocab'},{'name': 'WorkflowStepButtonComponent', 'selector': 'workflowstep-button'},{'name': 'WorkspaceFieldComponent', 'selector': 'ws-field'},{'name': 'WorkspaceListComponent', 'selector': 'workspace-list'},{'name': 'WorkspaceSelectorComponent', 'selector': 'workspace-selector-parent'},{'name': 'WorkspaceSelectorFieldComponent', 'selector': 'workspace-selector'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WorkspaceSelectorFieldComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkspaceTypeService.html":{"url":"injectables/WorkspaceTypeService.html","title":"injectable - WorkspaceTypeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkspaceTypeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            angular/shared/workspace-service.ts\n        \n\n            \n                Description\n            \n            \n                Role related service\nAuthor: moisbo\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getBrand\n                            \n                            \n                                getWorkspaceType\n                            \n                            \n                                getWorkspaceTypes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in angular/shared/workspace-service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getBrand\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetBrand()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/workspace-service.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWorkspaceType\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWorkspaceType(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/workspace-service.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getWorkspaceTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetWorkspaceTypes()\n                    \n                \n\n\n                        \n                            \n                                    Defined in angular/shared/workspace-service.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Inject} from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/toPromise';\nimport { BaseService } from '../shared/base-service'\nimport { ConfigService } from './config-service';\n\n/**\n * Role related service\n *\n * Author: moisbo\n */\n@Injectable()\nexport class WorkspaceTypeService extends BaseService {\n\n  constructor (@Inject(Http) http: Http, @Inject(ConfigService) protected configService: ConfigService) {\n    super(http, configService);\n  }\n\n  getBrand() {\n    return this.brandingAndPortalUrl;\n  }\n\n  getWorkspaceTypes() : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types`, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n\n  getWorkspaceType(name: string) : Promise {\n    return this.http.get(`${this.brandingAndPortalUrl}/workspaces/types/` + name, this.options)\n    .toPromise()\n    .then((res:any) => this.extractData(res));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @sailshq/upgrade : ^1.0.9\n        \n            @types/puppeteer : ^1.3.2\n        \n            @uppy/core : ^0.28.0\n        \n            @uppy/dashboard : ^0.28.0\n        \n            @uppy/tus : ^0.28.0\n        \n            async : 2.6.1\n        \n            axios : ^0.18.0\n        \n            bcrypt : 3.0.2\n        \n            calcyte : ^1.0.2\n        \n            chokidar : ~2.0.4\n        \n            core-js : ^2.4.1\n        \n            datacrate : ^1.0.0\n        \n            dotenv : ^6.1.0\n        \n            ejs : 2.6.1\n        \n            fs-extra : ^7.0.0\n        \n            grunt-ts : ^6.0.0-beta.19\n        \n            i18next : 12.0.0\n        \n            i18next-sync-fs-backend : ^1.0.0\n        \n            include-all : ^4.0.3\n        \n            leaflet : ^1.3.1\n        \n            leaflet-draw : ^1.0.2\n        \n            lodash : ^4.17.5\n        \n            lodash-es : ^4.17.5\n        \n            lucene-escape-query : ^1.0.1\n        \n            moment : ^2.20.1\n        \n            moment-es6 : github:shilob/moment-es6\n        \n            ng2-completer : 2.0.8\n        \n            ng2-datetime : ^1.3.2\n        \n            ngx-bootstrap : ^3.1.1\n        \n            node-cache : ^4.1.1\n        \n            node-schedule : ^1.3.0\n        \n            passport : ^0.4.0\n        \n            passport-http-bearer : ^1.0.1\n        \n            passport-jwt : github:itayadler/passport-jwt\n        \n            passport-local : ^1.0.0\n        \n            puppeteer : ^1.4.0\n        \n            rc : 1.2.8\n        \n            redbox2ckan : github:redbox-mint-contrib/redbox2ckan#dev_build\n        \n            redux : 4.0.1\n        \n            request-promise : ^4.2.0\n        \n            rxjs : 6.3.3\n        \n            rxjs-compat : 6.3.3\n        \n            sails : ^1.0.2\n        \n            sails-hook-autoreload : ^1.1.0\n        \n            sails-hook-grunt : ^3.1.0\n        \n            sails-hook-orm : ^2.0.0\n        \n            sails-hook-sockets : ^1.5.2\n        \n            sails-mongo : ^1.0.0\n        \n            skipper-gridfs : https://github.com/marcelomedina10/skipper-gridfs.git\n        \n            systemjs : 2.1.1\n        \n            ts-node : ^7.0.1\n        \n            ts-smart-logger : 0.1.0\n        \n            tus-node-server : ^0.3.2\n        \n            typescript : 2.9\n        \n            typescript-require : ~0.2.9-1\n        \n            url-pattern : ^1.0.3\n        \n            zone.js : ^0.8.4\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            matchingValuesValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            optionalEmailValidator   (angular/.../forms.ts)\n                        \n                        \n                            passwordStrengthValidator   (angular/.../forms.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    angular/manageUsers/app/forms.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            matchingValuesValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchingValuesValidator(control1, control2)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control2\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionalEmailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionalEmailValidator(control)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            passwordStrengthValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \npasswordStrengthValidator(control1)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n    angular/userProfile/app/forms.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            matchingValuesValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatchingValuesValidator(control1, control2)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control1\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control2\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            optionalEmailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \noptionalEmailValidator(control)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nReDBox Portal\nDevelopment\nDevelopment requires Docker. Run ./runForDev.sh install jit at least once.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. http://fsf.org/\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n                        Preamble  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n                   TERMS AND CONDITIONS\nDefinitions.\n\"This License\" refers to version 3 of the GNU General Public License.\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\nSource Code.\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\nThe Corresponding Source for a work in source code form is that\nsame work.\n\nBasic Permissions.\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\nConveying Verbatim Copies.\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\nConveying Modified Source Versions.\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n\nThis requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\nConveying Non-Source Forms.\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\nAdditional Terms.\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\nTermination.\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\nAcceptance Not Required for Having Copies.\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\nAutomatic Licensing of Downstream Recipients.\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\nPatents.\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\nNo Surrender of Others' Freedom.\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\nUse with the GNU Affero General Public License.\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\nRevised Versions of this License.\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\nDisclaimer of Warranty.\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\nLimitation of Liability.\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\nInterpretation of Sections 15 and 16.\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n           END OF TERMS AND CONDITIONS\n\n  How to Apply These Terms to Your New ProgramsIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n{one line to give the program's name and a brief idea of what it does.}\nCopyright (C) {year}  {name of author}\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see http://www.gnu.org/licenses/.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n{project}  Copyright (C) {year}  {fullname}\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.The hypothetical commands show w' andshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\nhttp://www.gnu.org/licenses/.\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\nhttp://www.gnu.org/philosophy/why-not-lgpl.html.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DashboardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DmpModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocalAuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageRolesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ManageUsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RecordSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReportModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransferOwnerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserProfileModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WorkspaceListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DashboardModule\n\n\n\ncluster_DashboardModule_declarations\n\n\n\ncluster_DashboardModule_imports\n\n\n\ncluster_DashboardModule_bootstrap\n\n\n\ncluster_DmpModule\n\n\n\ncluster_DmpModule_declarations\n\n\n\ncluster_DmpModule_bootstrap\n\n\n\ncluster_ExportModule\n\n\n\ncluster_ExportModule_declarations\n\n\n\ncluster_ExportModule_ExportFormComponent_providers\n\n\n\ncluster_ExportModule_bootstrap\n\n\n\ncluster_LocalAuthModule\n\n\n\ncluster_LocalAuthModule_declarations\n\n\n\ncluster_LocalAuthModule_bootstrap\n\n\n\ncluster_ManageRolesModule\n\n\n\ncluster_ManageRolesModule_declarations\n\n\n\ncluster_ManageRolesModule_bootstrap\n\n\n\ncluster_ManageUsersModule\n\n\n\ncluster_ManageUsersModule_declarations\n\n\n\ncluster_ManageUsersModule_bootstrap\n\n\n\ncluster_RecordSearchModule\n\n\n\ncluster_RecordSearchModule_declarations\n\n\n\ncluster_RecordSearchModule_bootstrap\n\n\n\ncluster_ReportModule\n\n\n\ncluster_ReportModule_declarations\n\n\n\ncluster_ReportModule_bootstrap\n\n\n\ncluster_ReportModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TransferOwnerModule\n\n\n\ncluster_TransferOwnerModule_declarations\n\n\n\ncluster_TransferOwnerModule_bootstrap\n\n\n\ncluster_UserProfileModule\n\n\n\ncluster_UserProfileModule_declarations\n\n\n\ncluster_UserProfileModule_bootstrap\n\n\n\ncluster_WorkspaceListModule\n\n\n\ncluster_WorkspaceListModule_declarations\n\n\n\ncluster_WorkspaceListModule_bootstrap\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\n\n\nDashboardModule\n\nDashboardModule\n\nDashboardModule -->\n\nDashboardComponent->DashboardModule\n\n\n\n\n\nSortComponent\n\nSortComponent\n\nDashboardModule -->\n\nSortComponent->DashboardModule\n\n\n\n\n\nDashboardComponent \n\nDashboardComponent \n\nDashboardComponent  -->\n\nDashboardModule->DashboardComponent \n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDashboardModule -->\n\nSharedModule->DashboardModule\n\n\n\n\n\nDmpModule\n\nDmpModule\n\nDmpModule -->\n\nSharedModule->DmpModule\n\n\n\n\n\nExportModule\n\nExportModule\n\nExportModule -->\n\nSharedModule->ExportModule\n\n\n\n\n\nLocalAuthModule\n\nLocalAuthModule\n\nLocalAuthModule -->\n\nSharedModule->LocalAuthModule\n\n\n\n\n\nManageRolesModule\n\nManageRolesModule\n\nManageRolesModule -->\n\nSharedModule->ManageRolesModule\n\n\n\n\n\nManageUsersModule\n\nManageUsersModule\n\nManageUsersModule -->\n\nSharedModule->ManageUsersModule\n\n\n\n\n\nRecordSearchModule\n\nRecordSearchModule\n\nRecordSearchModule -->\n\nSharedModule->RecordSearchModule\n\n\n\n\n\nReportModule\n\nReportModule\n\nReportModule -->\n\nSharedModule->ReportModule\n\n\n\n\n\nANDSVocabComponent \n\nANDSVocabComponent \n\nANDSVocabComponent  -->\n\nSharedModule->ANDSVocabComponent \n\n\n\n\n\nActionButtonComponent \n\nActionButtonComponent \n\nActionButtonComponent  -->\n\nSharedModule->ActionButtonComponent \n\n\n\n\n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent \n\nAnchorOrButtonComponent  -->\n\nSharedModule->AnchorOrButtonComponent \n\n\n\n\n\nAsynchComponent \n\nAsynchComponent \n\nAsynchComponent  -->\n\nSharedModule->AsynchComponent \n\n\n\n\n\nButtonBarContainerComponent \n\nButtonBarContainerComponent \n\nButtonBarContainerComponent  -->\n\nSharedModule->ButtonBarContainerComponent \n\n\n\n\n\nContributorComponent \n\nContributorComponent \n\nContributorComponent  -->\n\nSharedModule->ContributorComponent \n\n\n\n\n\nDataLocationComponent \n\nDataLocationComponent \n\nDataLocationComponent  -->\n\nSharedModule->DataLocationComponent \n\n\n\n\n\nDateTimeComponent \n\nDateTimeComponent \n\nDateTimeComponent  -->\n\nSharedModule->DateTimeComponent \n\n\n\n\n\nDmpFieldComponent \n\nDmpFieldComponent \n\nDmpFieldComponent  -->\n\nSharedModule->DmpFieldComponent \n\n\n\n\n\nDropdownFieldComponent \n\nDropdownFieldComponent \n\nDropdownFieldComponent  -->\n\nSharedModule->DropdownFieldComponent \n\n\n\n\n\nGenericGroupComponent \n\nGenericGroupComponent \n\nGenericGroupComponent  -->\n\nSharedModule->GenericGroupComponent \n\n\n\n\n\nHiddenValueComponent \n\nHiddenValueComponent \n\nHiddenValueComponent  -->\n\nSharedModule->HiddenValueComponent \n\n\n\n\n\nHtmlRawComponent \n\nHtmlRawComponent \n\nHtmlRawComponent  -->\n\nSharedModule->HtmlRawComponent \n\n\n\n\n\nLinkValueComponent \n\nLinkValueComponent \n\nLinkValueComponent  -->\n\nSharedModule->LinkValueComponent \n\n\n\n\n\nMapComponent \n\nMapComponent \n\nMapComponent  -->\n\nSharedModule->MapComponent \n\n\n\n\n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent \n\nMarkdownTextAreaComponent  -->\n\nSharedModule->MarkdownTextAreaComponent \n\n\n\n\n\nPDFListComponent \n\nPDFListComponent \n\nPDFListComponent  -->\n\nSharedModule->PDFListComponent \n\n\n\n\n\nParameterRetrieverComponent \n\nParameterRetrieverComponent \n\nParameterRetrieverComponent  -->\n\nSharedModule->ParameterRetrieverComponent \n\n\n\n\n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent \n\nPublishDataLocationSelectorComponent  -->\n\nSharedModule->PublishDataLocationSelectorComponent \n\n\n\n\n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent \n\nRecordMetadataRetrieverComponent  -->\n\nSharedModule->RecordMetadataRetrieverComponent \n\n\n\n\n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent \n\nRelatedObjectSelectorComponent  -->\n\nSharedModule->RelatedObjectSelectorComponent \n\n\n\n\n\nRepeatableContributorComponent \n\nRepeatableContributorComponent \n\nRepeatableContributorComponent  -->\n\nSharedModule->RepeatableContributorComponent \n\n\n\n\n\nRepeatableGroupComponent \n\nRepeatableGroupComponent \n\nRepeatableGroupComponent  -->\n\nSharedModule->RepeatableGroupComponent \n\n\n\n\n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent \n\nRepeatableTextfieldComponent  -->\n\nSharedModule->RepeatableTextfieldComponent \n\n\n\n\n\nRepeatableVocabComponent \n\nRepeatableVocabComponent \n\nRepeatableVocabComponent  -->\n\nSharedModule->RepeatableVocabComponent \n\n\n\n\n\nSelectionFieldComponent \n\nSelectionFieldComponent \n\nSelectionFieldComponent  -->\n\nSharedModule->SelectionFieldComponent \n\n\n\n\n\nSpacerComponent \n\nSpacerComponent \n\nSpacerComponent  -->\n\nSharedModule->SpacerComponent \n\n\n\n\n\nStringTemplatePipe \n\nStringTemplatePipe \n\nStringTemplatePipe  -->\n\nSharedModule->StringTemplatePipe \n\n\n\n\n\nTabNavButtonComponent \n\nTabNavButtonComponent \n\nTabNavButtonComponent  -->\n\nSharedModule->TabNavButtonComponent \n\n\n\n\n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent \n\nTabOrAccordionContainerComponent  -->\n\nSharedModule->TabOrAccordionContainerComponent \n\n\n\n\n\nTextAreaComponent \n\nTextAreaComponent \n\nTextAreaComponent  -->\n\nSharedModule->TextAreaComponent \n\n\n\n\n\nTextBlockComponent \n\nTextBlockComponent \n\nTextBlockComponent  -->\n\nSharedModule->TextBlockComponent \n\n\n\n\n\nTextFieldComponent \n\nTextFieldComponent \n\nTextFieldComponent  -->\n\nSharedModule->TextFieldComponent \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nSharedModule->ToggleComponent \n\n\n\n\n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent \n\nTreeNodeCheckboxComponent  -->\n\nSharedModule->TreeNodeCheckboxComponent \n\n\n\n\n\nVocabFieldComponent \n\nVocabFieldComponent \n\nVocabFieldComponent  -->\n\nSharedModule->VocabFieldComponent \n\n\n\n\n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent \n\nWorkflowStepButtonComponent  -->\n\nSharedModule->WorkflowStepButtonComponent \n\n\n\n\n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent \n\nWorkspaceFieldComponent  -->\n\nSharedModule->WorkspaceFieldComponent \n\n\n\n\n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent \n\nWorkspaceSelectorComponent  -->\n\nSharedModule->WorkspaceSelectorComponent \n\n\n\n\n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent \n\nWorkspaceSelectorFieldComponent  -->\n\nSharedModule->WorkspaceSelectorFieldComponent \n\n\n\n\n\nTransferOwnerModule\n\nTransferOwnerModule\n\nTransferOwnerModule -->\n\nSharedModule->TransferOwnerModule\n\n\n\n\n\nUserProfileModule\n\nUserProfileModule\n\nUserProfileModule -->\n\nSharedModule->UserProfileModule\n\n\n\n\n\nWorkspaceListModule\n\nWorkspaceListModule\n\nWorkspaceListModule -->\n\nSharedModule->WorkspaceListModule\n\n\n\n\n\nDmpFormComponent\n\nDmpFormComponent\n\nDmpModule -->\n\nDmpFormComponent->DmpModule\n\n\n\n\n\nDmpFormComponent \n\nDmpFormComponent \n\nDmpFormComponent  -->\n\nDmpModule->DmpFormComponent \n\n\n\n\n\nExportFormComponent\n\nExportFormComponent\n\nExportModule -->\n\nExportFormComponent->ExportModule\n\n\n\n\n\nExportFormComponent \n\nExportFormComponent \n\nExportFormComponent  -->\n\nExportModule->ExportFormComponent \n\n\n\n\n\nLocation\n\nLocation\n\nExportFormComponent -->\n\nLocation->ExportFormComponent\n\n\n\n\n\nRecordSearchComponent\n\nRecordSearchComponent\n\nRecordSearchComponent -->\n\nLocation->RecordSearchComponent\n\n\n\n\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }\n\nExportFormComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->ExportFormComponent\n\n\n\nRecordSearchComponent -->\n\n{ provide: LocationStrategy, useClass: PathLocationStrategy }->RecordSearchComponent\n\n\n\n\n\nLocalAuthComponent\n\nLocalAuthComponent\n\nLocalAuthModule -->\n\nLocalAuthComponent->LocalAuthModule\n\n\n\n\n\nLocalAuthComponent \n\nLocalAuthComponent \n\nLocalAuthComponent  -->\n\nLocalAuthModule->LocalAuthComponent \n\n\n\n\n\nManageRolesComponent\n\nManageRolesComponent\n\nManageRolesModule -->\n\nManageRolesComponent->ManageRolesModule\n\n\n\n\n\nManageRolesComponent \n\nManageRolesComponent \n\nManageRolesComponent  -->\n\nManageRolesModule->ManageRolesComponent \n\n\n\n\n\nManageUsersComponent\n\nManageUsersComponent\n\nManageUsersModule -->\n\nManageUsersComponent->ManageUsersModule\n\n\n\n\n\nManageUsersComponent \n\nManageUsersComponent \n\nManageUsersComponent  -->\n\nManageUsersModule->ManageUsersComponent \n\n\n\nRecordSearchModule -->\n\nRecordSearchComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchRefinerComponent\n\nRecordSearchRefinerComponent\n\nRecordSearchModule -->\n\nRecordSearchRefinerComponent->RecordSearchModule\n\n\n\n\n\nRecordSearchComponent \n\nRecordSearchComponent \n\nRecordSearchComponent  -->\n\nRecordSearchModule->RecordSearchComponent \n\n\n\n\n\nMultivalueFieldPipe\n\nMultivalueFieldPipe\n\nReportModule -->\n\nMultivalueFieldPipe->ReportModule\n\n\n\n\n\nReportComponent\n\nReportComponent\n\nReportModule -->\n\nReportComponent->ReportModule\n\n\n\n\n\nReportComponent \n\nReportComponent \n\nReportComponent  -->\n\nReportModule->ReportComponent \n\n\n\n\n\nReportService\n\nReportService\n\nReportModule -->\n\nReportService->ReportModule\n\n\n\n\n\nANDSVocabComponent\n\nANDSVocabComponent\n\nSharedModule -->\n\nANDSVocabComponent->SharedModule\n\n\n\n\n\nActionButtonComponent\n\nActionButtonComponent\n\nSharedModule -->\n\nActionButtonComponent->SharedModule\n\n\n\n\n\nAnchorOrButtonComponent\n\nAnchorOrButtonComponent\n\nSharedModule -->\n\nAnchorOrButtonComponent->SharedModule\n\n\n\n\n\nAsynchComponent\n\nAsynchComponent\n\nSharedModule -->\n\nAsynchComponent->SharedModule\n\n\n\n\n\nButtonBarContainerComponent\n\nButtonBarContainerComponent\n\nSharedModule -->\n\nButtonBarContainerComponent->SharedModule\n\n\n\n\n\nCancelButtonComponent\n\nCancelButtonComponent\n\nSharedModule -->\n\nCancelButtonComponent->SharedModule\n\n\n\n\n\nContributorComponent\n\nContributorComponent\n\nSharedModule -->\n\nContributorComponent->SharedModule\n\n\n\n\n\nDataLocationComponent\n\nDataLocationComponent\n\nSharedModule -->\n\nDataLocationComponent->SharedModule\n\n\n\n\n\nDateTimeComponent\n\nDateTimeComponent\n\nSharedModule -->\n\nDateTimeComponent->SharedModule\n\n\n\n\n\nDmpFieldComponent\n\nDmpFieldComponent\n\nSharedModule -->\n\nDmpFieldComponent->SharedModule\n\n\n\n\n\nDropdownFieldComponent\n\nDropdownFieldComponent\n\nSharedModule -->\n\nDropdownFieldComponent->SharedModule\n\n\n\n\n\nGenericGroupComponent\n\nGenericGroupComponent\n\nSharedModule -->\n\nGenericGroupComponent->SharedModule\n\n\n\n\n\nHiddenValueComponent\n\nHiddenValueComponent\n\nSharedModule -->\n\nHiddenValueComponent->SharedModule\n\n\n\n\n\nHtmlRawComponent\n\nHtmlRawComponent\n\nSharedModule -->\n\nHtmlRawComponent->SharedModule\n\n\n\n\n\nLinkValueComponent\n\nLinkValueComponent\n\nSharedModule -->\n\nLinkValueComponent->SharedModule\n\n\n\n\n\nMapComponent\n\nMapComponent\n\nSharedModule -->\n\nMapComponent->SharedModule\n\n\n\n\n\nMarkdownTextAreaComponent\n\nMarkdownTextAreaComponent\n\nSharedModule -->\n\nMarkdownTextAreaComponent->SharedModule\n\n\n\n\n\nPDFListComponent\n\nPDFListComponent\n\nSharedModule -->\n\nPDFListComponent->SharedModule\n\n\n\n\n\nParameterRetrieverComponent\n\nParameterRetrieverComponent\n\nSharedModule -->\n\nParameterRetrieverComponent->SharedModule\n\n\n\n\n\nPublishDataLocationSelectorComponent\n\nPublishDataLocationSelectorComponent\n\nSharedModule -->\n\nPublishDataLocationSelectorComponent->SharedModule\n\n\n\n\n\nRecordMetadataRetrieverComponent\n\nRecordMetadataRetrieverComponent\n\nSharedModule -->\n\nRecordMetadataRetrieverComponent->SharedModule\n\n\n\n\n\nRelatedObjectDataComponent\n\nRelatedObjectDataComponent\n\nSharedModule -->\n\nRelatedObjectDataComponent->SharedModule\n\n\n\n\n\nRelatedObjectSelectorComponent\n\nRelatedObjectSelectorComponent\n\nSharedModule -->\n\nRelatedObjectSelectorComponent->SharedModule\n\n\n\n\n\nRepeatableContributorComponent\n\nRepeatableContributorComponent\n\nSharedModule -->\n\nRepeatableContributorComponent->SharedModule\n\n\n\n\n\nRepeatableGroupComponent\n\nRepeatableGroupComponent\n\nSharedModule -->\n\nRepeatableGroupComponent->SharedModule\n\n\n\n\n\nRepeatableTextfieldComponent\n\nRepeatableTextfieldComponent\n\nSharedModule -->\n\nRepeatableTextfieldComponent->SharedModule\n\n\n\n\n\nRepeatableVocabComponent\n\nRepeatableVocabComponent\n\nSharedModule -->\n\nRepeatableVocabComponent->SharedModule\n\n\n\n\n\nSaveButtonComponent\n\nSaveButtonComponent\n\nSharedModule -->\n\nSaveButtonComponent->SharedModule\n\n\n\n\n\nSelectionFieldComponent\n\nSelectionFieldComponent\n\nSharedModule -->\n\nSelectionFieldComponent->SharedModule\n\n\n\n\n\nSpacerComponent\n\nSpacerComponent\n\nSharedModule -->\n\nSpacerComponent->SharedModule\n\n\n\n\n\nStringTemplatePipe\n\nStringTemplatePipe\n\nSharedModule -->\n\nStringTemplatePipe->SharedModule\n\n\n\n\n\nTabNavButtonComponent\n\nTabNavButtonComponent\n\nSharedModule -->\n\nTabNavButtonComponent->SharedModule\n\n\n\n\n\nTabOrAccordionContainerComponent\n\nTabOrAccordionContainerComponent\n\nSharedModule -->\n\nTabOrAccordionContainerComponent->SharedModule\n\n\n\n\n\nTextAreaComponent\n\nTextAreaComponent\n\nSharedModule -->\n\nTextAreaComponent->SharedModule\n\n\n\n\n\nTextBlockComponent\n\nTextBlockComponent\n\nSharedModule -->\n\nTextBlockComponent->SharedModule\n\n\n\n\n\nTextFieldComponent\n\nTextFieldComponent\n\nSharedModule -->\n\nTextFieldComponent->SharedModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nSharedModule -->\n\nToggleComponent->SharedModule\n\n\n\n\n\nTreeNodeCheckboxComponent\n\nTreeNodeCheckboxComponent\n\nSharedModule -->\n\nTreeNodeCheckboxComponent->SharedModule\n\n\n\n\n\nVocabFieldComponent\n\nVocabFieldComponent\n\nSharedModule -->\n\nVocabFieldComponent->SharedModule\n\n\n\n\n\nWorkflowStepButtonComponent\n\nWorkflowStepButtonComponent\n\nSharedModule -->\n\nWorkflowStepButtonComponent->SharedModule\n\n\n\n\n\nWorkspaceFieldComponent\n\nWorkspaceFieldComponent\n\nSharedModule -->\n\nWorkspaceFieldComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorComponent\n\nWorkspaceSelectorComponent\n\nSharedModule -->\n\nWorkspaceSelectorComponent->SharedModule\n\n\n\n\n\nWorkspaceSelectorFieldComponent\n\nWorkspaceSelectorFieldComponent\n\nSharedModule -->\n\nWorkspaceSelectorFieldComponent->SharedModule\n\n\n\n\n\nANDSService\n\nANDSService\n\nSharedModule -->\n\nANDSService->SharedModule\n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nDashboardService\n\nDashboardService\n\nSharedModule -->\n\nDashboardService->SharedModule\n\n\n\n\n\nEmailNotificationService\n\nEmailNotificationService\n\nSharedModule -->\n\nEmailNotificationService->SharedModule\n\n\n\n\n\nFieldControlMetaService\n\nFieldControlMetaService\n\nSharedModule -->\n\nFieldControlMetaService->SharedModule\n\n\n\n\n\nFieldControlService\n\nFieldControlService\n\nSharedModule -->\n\nFieldControlService->SharedModule\n\n\n\n\n\nRecordsService\n\nRecordsService\n\nSharedModule -->\n\nRecordsService->SharedModule\n\n\n\n\n\nRolesService\n\nRolesService\n\nSharedModule -->\n\nRolesService->SharedModule\n\n\n\n\n\nTranslationService\n\nTranslationService\n\nSharedModule -->\n\nTranslationService->SharedModule\n\n\n\n\n\nUserSimpleService\n\nUserSimpleService\n\nSharedModule -->\n\nUserSimpleService->SharedModule\n\n\n\n\n\nUtilityService\n\nUtilityService\n\nSharedModule -->\n\nUtilityService->SharedModule\n\n\n\n\n\nVocabFieldLookupService\n\nVocabFieldLookupService\n\nSharedModule -->\n\nVocabFieldLookupService->SharedModule\n\n\n\n\n\nWorkspaceTypeService\n\nWorkspaceTypeService\n\nSharedModule -->\n\nWorkspaceTypeService->SharedModule\n\n\n\n\n\nTransferOwnerComponent\n\nTransferOwnerComponent\n\nTransferOwnerModule -->\n\nTransferOwnerComponent->TransferOwnerModule\n\n\n\n\n\nTransferOwnerComponent \n\nTransferOwnerComponent \n\nTransferOwnerComponent  -->\n\nTransferOwnerModule->TransferOwnerComponent \n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nUserProfileModule -->\n\nUserProfileComponent->UserProfileModule\n\n\n\n\n\nUserProfileComponent \n\nUserProfileComponent \n\nUserProfileComponent  -->\n\nUserProfileModule->UserProfileComponent \n\n\n\n\n\nWorkspaceListComponent\n\nWorkspaceListComponent\n\nWorkspaceListModule -->\n\nWorkspaceListComponent->WorkspaceListModule\n\n\n\n\n\nWorkspaceListComponent \n\nWorkspaceListComponent \n\nWorkspaceListComponent  -->\n\nWorkspaceListModule->WorkspaceListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    55 Components\n                \n            \n        \n        \n            \n                \n                    \n                    22 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    58 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/installation-guide.html":{"url":"additional-documentation/installation-guide.html","title":"additional-page - Installation guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation Guide\nService Dependencies\nThe following dependencies will need to be installed on the OS:\n\nNodeJS environment version 6.x\nMongoDB\nA reverse proxy server such as Nginx or Apache HTTP Server\nGit\n\nNode dependencies\nOnce you have a NodeJS environment installed install the following dependencies globally using the npm install -g  command:\n\nyarn\npm2\n\nInstall the ReDBox Portal\n\nCheckou the ReDBox Portal to your location of choice (e.g. /opt/redbox-portal)\n\ngit clone -b dev_build \"https://github.com/redbox-mint/redbox-portal\"\nCreate a ecosytem.json file for PM2 as below. See the configuration guide guide for information on how to configure the env section.\n{\n\"apps\" : [{\n // Application #1\n \"name\"        : \"rbportal\",\n \"script\"      : \"app.js\",\n \"args\"        : [],\n \"watch\"       : true,\n \"node_args\"   : \"\",\n \"merge_logs\"  : true,\n \"cwd\"         : \"/opt/redbox-portal/\",\n \"env\": {\n   \"NODE_ENV\": \"development\",\n   \"redboxApiKey\": \"\"\n }\n}\n]\n}\nCopy your configuration changes over the installation. See the configuration guide\n\nSetup PM2 run on init (depending on your distro) e.g pm2 startup systemd\nStart the applicationpm2 start ecosystem.json\nSave the PM2 configurationpm2 save\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide.html":{"url":"additional-documentation/configuration-guide.html","title":"additional-page - Configuration guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguration and Customisation Guide\nManaging your customisations\nMuch like in ReDBox 1.8+, it is recommended that you keep your configuration changes in it's own repository and overlay them as part of the deployment process.\nSee the sample customisation repository for an example.\nManaging portal configuration\nThe ReDBox Portal is built on the SailsJS framework and therefore takes advantage of the highly extensible configration framework provided.\nPlease see the SailsJS documentation for more information on it's structure and configuration options.\nThere are several configuration items that are specific to the ReDBox Portal:\n\nrecord.js manages configuration around record management and the portal's interaction with the ReDBox and Mint services\nauth.js manages configuration around authorisation and authentication.\nemailnotification.js manages configuration of email notifications\nform.js manages form configuration\n\nEnvironment variables\nIt is possible to use environment variables to modify configuration, this is particularly useful when running the portal in a containerised environment such as docker. Please see Sails configuration document for more information\nEnvironment specific files\nYou may override standard configuration item for a particular environment (e.g development, test and production) by creating or modifying the a environment specif config file in the location config/env/.js. You can specify the environment by setting the NODE_ENV environment variable.\nPlease see the Sails configuration documentation for more information.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-web-forms.html":{"url":"additional-documentation/configuration-guide/configuring-web-forms.html","title":"additional-page - Configuring web forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring web forms\nIntroduction\nReDBox has a flexible and configurable framework that allows you to capture as metadata for a variety different purposes such as data management plans, provisioned workspaces and data collections. Metadata is stored in the JSON-LD format and has a very loose schema to support this flexibility.\nFor each type of metadata record stored, it is also possible to configure a workflow that the record may pass through to map to the business processes within your organisation.\nThere is also a configurable form system that allows you to design a form to meet your needs without having the need to understand code. It is possible to attach different form structures to each workflow stage to suit the requirements for the user of the form.\nRecord Type Configuration\nRecord Types are configured in the config/recordtype.js file.\nThe record type configuration defines the record type (e.g. a research data managment plan record) and what fields in the record should be displayed on the search interface for the purposes of filtering and faceting.\nRecord's are configured via the config/workflow.js file and specifies the workflow stages a record can transition through and the roles that are permitted to view and edit a record for each workflow stage.\n\n|\n|- search-filters []\n    |- name\n    |- title\n    |- type\n    |- typeLabelWhere <> are property labels that are variables.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\n\nThe label of record type\nYes\nrdmp\n\n\nname\nThe name of the Solr index field to facet on. For facet type fields, this is usually the name you've configured in your form configuration. To allow for inexact matching for filter search boxes, append text_ to the beginning of the name\nYes\ntext_title\n\n\ntitle\nThe heading label to display in the facets section. Can read text from the language file\nYes\nsearch-refine-description\n\n\ntype\nThe type of facet. Fixed for search box filters, facet for facet counts\nYes\nfacet\n\n\ntypeLabel\nThe label to show above the search box filter. Can read text from the language file. Set to null for facet count fields\nYes\nsearch-refine-contains\n\n\n\nExample\n\"rdmp\": {\n  searchFilters: [\n    {\n      name: \"text_title\",\n      title: \"search-refine-title\",\n      type: \"exact\",\n      typeLabel: \"search-refine-contains\"\n    },\n    {\n      name: \"text_description\",\n      title: \"search-refine-description\",\n      type: \"exact\",\n      typeLabel: \"Can read text from the language file\"\n    },\n    {\n      name: \"grant_number_name\",\n      title: \"search-refine-grant_number_name\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"finalKeywords\",\n      title: \"search-refine-keywords\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    },\n    {\n      name: \"workflow_stageLabel\",\n      title: \"search-refine-workflow_stageLabel\",\n      type: \"facet\",\n      typeLabel: null,\n      alwaysActive: true\n    }\n  ]\n}Workflow Configuration\nThe structure of the configuration is as follows\n\n|\n|- \n    |\n    |- config\n        |\n        |- workflow\n            |\n            |- stage\n            |- stageLabel\n            |- next\n        |- authorization\n            |\n            |- viewRoles\n            |- editRoles\n        |- form\n    |- startingWhere <> are property labels that are variables.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\n\nThe label of record type\nYes\nrdmp\n\n\n\nThe label of the workflow stage for the record type\nYes\ndraft\n\n\nstage\nThe code value for the stage. This value is stored in the metadata record within ReDBox. Best practice would be to match it with  but it can be different if necessary.\nYes\ndraft\n\n\nstageLabel\nThe label for the stage that is presented to users on the interface.\nYes\nDraft\n\n\nnext\nThe stage to transition to.\nNo\nreview\n\n\nviewRoles\nAn array of roles that are allowed to view this record type at this stage\nYes\n['Admin']\n\n\neditRoles\nAn array of roles that are allowed to edit this record type at this stage\nYes\n['Admin']\n\n\nform\nThe form code. This should match an entry in the form.js configuration file\nYes\nrdmp-1.0-draft\n\n\nstarting\nIs this the stage that new records should commence in?\nNo\ntrue\n\n\n\nExample\n\"rdmp\": {\n    \"draft\": {\n      config: {\n        workflow: {\n          stage: 'draft',\n          stageLabel: 'Draft',\n          next: 'review',\n        },\n        authorization: {\n          viewRoles: ['Admin'],\n          editRoles: ['Admin']\n        },\n        form: 'rdmp-1.0-draft'\n      },\n      starting: true\n    },Form/view configuration\nThe form and view layout is configured via config/form.js file.\nThe structure of the configuration file is as follows\ndefaultForm\n|\n|- forms\n    |\n    |- \n        |\n        |- name\n        |- type\n        |- skipValidationOnSave\n        |- editCssClasses\n        |- viewCssClasses\n        |- messages\n            |\n            |- \n        |\n        |- fields []\n            |\n            |- class\n            |- compClass\n            |- viewOnly\n            |- definition\n                |\n                |- \nForm-wide configuration\nThe settings in this section control the behaviour of the entire form.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\n\nThe label name of the form, should match a \"form\" value in workflow.js for it to be used\nYes\nrdmp-1.0-draft\n\n\nname\nThe label name of the form. This should match the  value. form\nYes\nrdmp-1.0-draft\n\n\nskipValidationOnSave\nWhen set to true, validation will only trigger when the record is submitted to change it's workflow state. This property is particularly useful in early stages of a workflow where you want the user to be able to save and come back to the record later without having to fill in all mandatory fields.\nNo (defaults to false)\ntrue\n\n\neditCssClasses\nThe css classes to apply to each element for styling. These are used in edit mode\nYes\nrow col-md-12\n\n\nviewCssClasses\nThe css classes to apply to each element for styling. These are used in view mode\nYes\nrow col-md-12\n\n\n\nA set of key value pairs containing messages to show to the user\nYes\n\"saveSuccess\": \"Saved successfully.\"\n\n\n\nField configuration\nThe fields section lays out the components to appear in the form.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\nclass\n| Yes\n\n\n\n\ncompClass\nThe Component class name. See the Component documentation for a list of available components and how to configure them\nYes\nTextBlockComponent\n\n\nviewOnly\nWhen set to true, this component will only appear in the view (details) rendition of the form\nNo (defaults to false)\ntrue\n\n\neditOnly\nWhen set to true, this component will only appear in the edit (details) rendition of the form\nNo (defaults to false)\ntrue\n\n\ndefinition\nConfiguration that is specific for the component being added. How to configure a component is described in the Component documentation\nYes\nvalue: '@dmpt-data-collection-heading'\n\n\n\nExample\nfields: [\n  {\n    class: 'Container',\n    compClass: 'TextBlockComponent',\n    viewOnly: true,\n    definition: {\n      name: 'title',\n      type: 'h1'\n    }\n  },Language Configuration\nMessages in the system can be configured using Language files. This allows for internationalisation of the portal as well as editing in a translation management system such as Locize.\nThe application uses i18next to render the messages and the language files are kept in the assests/locales/ directories.\nPlease see the i18next documentation for more information on how the language file is structured and it's features.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-email-notifications.html":{"url":"additional-documentation/configuration-guide/configuring-email-notifications.html","title":"additional-page - Configuring email notifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring email notifications\nIntroduction\nThe ReDBox portal has a flexible email notification system that can be customised to your needs.\nConfiguring Email Settings\nThe config/emailnotification.js file provides configuration properties relating to the sending of emails.\napi\n|\n|- send\n|\nsettings\n|\n|- enabled\n|\n|- from\n|\n|- templateDir\n|\ndefaults\n|\n|- from\n|\n|- subject\n|\n|- format\n|\ntemplates\n|\n|- \n    |\n    |- subject\n    |\n    |- template\n|Where <> are property labels that are variables.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\napi/send\nThe url and HTTP method of the API endpoint to send emails (via ReDBox)\nYes\nN/A\n\n\nsettings\nSection used to capture email notification settins\nYes\nN/A\n\n\nsettings/enabled\nWhether email notifications are enabled\nYes\ntrue\n\n\nsettings/from\nThe from address to use when sending emails\nYes\nnoreply@redboxresearchdata.com.au\n\n\nsettings/templateDir\nThe template directory that contains the email template files\nYes\nviews/emailTemplates/\n\n\ndefaults\nSection used to capture default properties for emails (when not otherwise set)\nYes\nN/A\n\n\ndefaults/from\nThe default from address\nYes\nredbox@redboxresearchdata.com.au\n\n\ndefaults/subject\nThe default from email subject\nYes\nA notification from ReDBox\n\n\ndefaults/format\nThe email format, can either be in HTML or plain text\nYes\nhtml\n\n\n\nExample\napi: {\n  send: {method: 'post', url: \"/api/v1/messaging/emailnotification\"}\n},\nsettings: {\n  enabled: true,\n  from: \"noreply@redbox\",\n  templateDir: \"views/emailTemplates/\"\n},\ndefaults: {\n  from: \"redbox@dev\",\n  subject: \"ReDBox Notification\",\n  format: \"html\"\n},Customising Email Templates\nThe both the subjects and the contents of email notifications can be customised via configuration and templates.\nConfiguring email subjects and templates\nThe templates section of the config/emailnotification.js file contains configuration to customise the subject and template for an email notification\n\n|\n|- subject\n|\n|- template\n|\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\n\nThe email code used by the application to find the configuration to trigger an email\nYes\ntransferOwnerTo\n\n\n/subject\nThe email's subject\nYes\nOwnership of DMP record/s has been transferred to you\n\n\n/template\nThe template file (located in the directory specified in the settings/templateDir property) to use to render the contents\nYes\ntransferOwnerTo\n\n\n\nExample\ntemplates: {\n  transferOwnerTo: {subject: 'Ownership of DMP record/s has been transferred to you', template: 'transferOwnerTo'}\n}Email Templates\nEmail templates are located in the directory defined in the settings/templateDir property of the config/emailnotification.js files. They are written in the EJS templating language which allows for rich and complex formatting.\nExample\nHello!\nThis is a test email from ReDBox Portal\nData: \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html":{"url":"additional-documentation/configuration-guide/configuring-integration-with-redbox-and-mint.html","title":"additional-page - Configuring integration with RedBox and Mint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring integration with ReDBox and Mint\nIntroduction\nFor record management, the ReDBox portal utilises the APIs provided by both the ReDBox and Mint applications.\nConfiguring API access\nThe config/record.js file provides configuration properties to set the URLs the services can be accessed on as well as the API endpoints.\nbaseUrl\n|\n|- redbox\n|\n|- mint\n|\napi\n|\n|- \n     |\n     |- method\n     |\n     |- urlWhere <> are property labels that are variables.\n\n\n\nField\nDescription\nRequired\nExample\n\n\n\n\nbaseUrl\nSection used to capture the base URLs for ReDBox and Mint to reduce duplication of variables and easier cross environment configuration\nYes\nN/A\n\n\nbaseUrl/redbox\nThe base url for the ReDBox instance the portal is integrating with.\nYes\nhttp://localhost:9000/redbox\n\n\nbaseUrl/mint\nThe base url for the Mint instance the portal is integrating with.\nYes\nhttp://localhost:9001/mint\n\n\napi\nSection used to capture the api endpoints for ReDBox and Mint\nYes\nN/A\n\n\napi/\nThe API action that is being configured. Can be one of create, search, getMeta, updateMeta and harvest.\nYes\ncreate\n\n\napi//method\nThe HTTP method used by the API end point\nYes\nget\n\n\napi//url\nThe url for the API endpoint\nYes\n/api/v1/object/$packageType\n\n\n\nExample\n  baseUrl: {\n    redbox: \"http://localhost:9000/redbox\",\n    mint: \"http://localhost:9001/mint\"\n  },\n  api: {\n    create: {method: 'post', url: \"/api/v1/object/$packageType\"},\n    search: {method: 'get', url: \"/api/v1/search\"},\n    getMeta: {method: 'get', url: \"/api/v1/recordmetadata/$oid\"},\n    updateMeta: {method: 'post', url: \"/api/v1/recordmetadata/$oid\"},\n    harvest: {method: 'post', url:\"/api/v1.1/harvest/$packageType\"}\n  }\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configuration-guide/configuring-authentication.html":{"url":"additional-documentation/configuration-guide/configuring-authentication.html","title":"additional-page - Configuring authentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring AAF\nIntroduction\nThe ReDBox portal is compatible out of the box with AAF Credentials.\nConfiguring\nThe config/env/development.js or config/env/production.js file provides the configuration objects for authorisation\nauth: {\n    // Default brand...\n    default: {\n      active: [\"aaf\", \"local\"],\n      aaf: {\n        loginUrl: \"https://rapid.test.aaf.edu.au/jwt/authnrequest/research/XXXXXX\",\n        opts: {\n          secretOrKey: 'XXXXXX',\n          jsonWebTokenOptions: {\n            issuer: 'https://rapid.test.aaf.edu.au',\n            audience: 'https://dev-redbox.research.uts.edu.au/default/rdmp/',\n            ignoreNotBefore: true\n          }\n        }\n      }\n    }\n  }\nProceed to https://rapid.test.aaf.edu.au for test environments and https://rapid.aaf.edu.au for production environments\nRegister a new service\nThe Callback URL should be /user/login_aaf\n\n\nIf it is a development environment a unique url will be automatically provided\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/rest-api-documentation.html":{"url":"additional-documentation/rest-api-documentation.html","title":"additional-page - REST API documentation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nREST API\nDocumentation available here\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
